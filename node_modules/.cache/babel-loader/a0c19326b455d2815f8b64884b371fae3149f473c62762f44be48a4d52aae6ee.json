{"ast":null,"code":"import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n  span: {\n    type: [Number, String],\n    default: defaultSpan\n  },\n  offset: {\n    type: [Number, String],\n    default: 0\n  },\n  suffix: Boolean,\n  // private props\n  privateOffset: Number,\n  privateSpan: Number,\n  privateColStart: Number,\n  privateShow: {\n    type: Boolean,\n    default: true\n  }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n  __GRID_ITEM__: true,\n  name: 'GridItem',\n  alias: ['Gi'],\n  props: gridItemProps,\n  setup() {\n    const {\n      isSsrRef,\n      xGapRef,\n      itemStyleRef,\n      overflowRef,\n      layoutShiftDisabledRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(gridInjectionKey);\n    const self = getCurrentInstance();\n    return {\n      overflow: overflowRef,\n      itemStyle: itemStyleRef,\n      layoutShiftDisabled: layoutShiftDisabledRef,\n      mergedXGap: computed(() => {\n        return pxfy(xGapRef.value || 0);\n      }),\n      deriveStyle: () => {\n        void isSsrRef.value;\n        // Here is quite a hack, I hope there is a better way to solve it\n        const {\n          privateSpan = defaultSpan,\n          privateShow = true,\n          privateColStart = undefined,\n          privateOffset = 0\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        } = self.vnode.props;\n        const {\n          value: xGap\n        } = xGapRef;\n        const mergedXGap = pxfy(xGap || 0);\n        return {\n          display: !privateShow ? 'none' : '',\n          gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n          marginLeft: privateOffset ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})` : ''\n        };\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    if (this.layoutShiftDisabled) {\n      const {\n        span,\n        offset,\n        mergedXGap\n      } = this;\n      return h(\"div\", {\n        style: {\n          gridColumn: `span ${span} / span ${span}`,\n          marginLeft: offset ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})` : ''\n        }\n      }, this.$slots);\n    }\n    return h(\"div\", {\n      style: [this.itemStyle, this.deriveStyle()]\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      overflow: this.overflow\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","getCurrentInstance","computed","pxfy","keysOf","gridInjectionKey","defaultSpan","gridItemProps","span","type","Number","String","default","offset","suffix","Boolean","privateOffset","privateSpan","privateColStart","privateShow","gridItemPropKeys","__GRID_ITEM__","name","alias","props","setup","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","self","overflow","itemStyle","layoutShiftDisabled","mergedXGap","value","deriveStyle","undefined","vnode","xGap","display","gridColumn","marginLeft","render","_a","_b","style","$slots","call"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/grid/src/GridItem.js"],"sourcesContent":["import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n    span: {\n        type: [Number, String],\n        default: defaultSpan\n    },\n    offset: {\n        type: [Number, String],\n        default: 0\n    },\n    suffix: Boolean,\n    // private props\n    privateOffset: Number,\n    privateSpan: Number,\n    privateColStart: Number,\n    privateShow: {\n        type: Boolean,\n        default: true\n    }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'GridItem',\n    alias: ['Gi'],\n    props: gridItemProps,\n    setup() {\n        const { isSsrRef, xGapRef, itemStyleRef, overflowRef, layoutShiftDisabledRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(gridInjectionKey);\n        const self = getCurrentInstance();\n        return {\n            overflow: overflowRef,\n            itemStyle: itemStyleRef,\n            layoutShiftDisabled: layoutShiftDisabledRef,\n            mergedXGap: computed(() => {\n                return pxfy(xGapRef.value || 0);\n            }),\n            deriveStyle: () => {\n                void isSsrRef.value;\n                // Here is quite a hack, I hope there is a better way to solve it\n                const { privateSpan = defaultSpan, privateShow = true, privateColStart = undefined, privateOffset = 0\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                 } = self.vnode.props;\n                const { value: xGap } = xGapRef;\n                const mergedXGap = pxfy(xGap || 0);\n                return {\n                    display: !privateShow ? 'none' : '',\n                    gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n                    marginLeft: privateOffset\n                        ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})`\n                        : ''\n                };\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        if (this.layoutShiftDisabled) {\n            const { span, offset, mergedXGap } = this;\n            return (h(\"div\", { style: {\n                    gridColumn: `span ${span} / span ${span}`,\n                    marginLeft: offset\n                        ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})`\n                        : ''\n                } }, this.$slots));\n        }\n        return (h(\"div\", { style: [this.itemStyle, this.deriveStyle()] }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, { overflow: this.overflow })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}