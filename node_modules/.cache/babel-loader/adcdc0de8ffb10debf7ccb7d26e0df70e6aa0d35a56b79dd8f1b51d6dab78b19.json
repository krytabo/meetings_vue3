{"ast":null,"code":"import zIndexManager from './z-index-manager';\nconst ctx = '@@ziContext';\n// We don't expect manually bound zindex should be changed\nconst zindexable = {\n  mounted(el, bindings) {\n    const {\n      value = {}\n    } = bindings;\n    const {\n      zIndex,\n      enabled\n    } = value;\n    el[ctx] = {\n      enabled: !!enabled,\n      initialized: false\n    };\n    if (enabled) {\n      zIndexManager.ensureZIndex(el, zIndex);\n      el[ctx].initialized = true;\n    }\n  },\n  updated(el, bindings) {\n    const {\n      value = {}\n    } = bindings;\n    const {\n      zIndex,\n      enabled\n    } = value;\n    const cachedEnabled = el[ctx].enabled;\n    if (enabled && !cachedEnabled) {\n      zIndexManager.ensureZIndex(el, zIndex);\n      el[ctx].initialized = true;\n    }\n    el[ctx].enabled = !!enabled;\n  },\n  unmounted(el, bindings) {\n    if (!el[ctx].initialized) return;\n    const {\n      value = {}\n    } = bindings;\n    const {\n      zIndex\n    } = value;\n    zIndexManager.unregister(el, zIndex);\n  }\n};\nexport default zindexable;","map":{"version":3,"names":["zIndexManager","ctx","zindexable","mounted","el","bindings","value","zIndex","enabled","initialized","ensureZIndex","updated","cachedEnabled","unmounted","unregister"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/vdirs/es/zindexable/index.js"],"sourcesContent":["import zIndexManager from './z-index-manager';\nconst ctx = '@@ziContext';\n// We don't expect manually bound zindex should be changed\nconst zindexable = {\n    mounted(el, bindings) {\n        const { value = {} } = bindings;\n        const { zIndex, enabled } = value;\n        el[ctx] = {\n            enabled: !!enabled,\n            initialized: false\n        };\n        if (enabled) {\n            zIndexManager.ensureZIndex(el, zIndex);\n            el[ctx].initialized = true;\n        }\n    },\n    updated(el, bindings) {\n        const { value = {} } = bindings;\n        const { zIndex, enabled } = value;\n        const cachedEnabled = el[ctx].enabled;\n        if (enabled && !cachedEnabled) {\n            zIndexManager.ensureZIndex(el, zIndex);\n            el[ctx].initialized = true;\n        }\n        el[ctx].enabled = !!enabled;\n    },\n    unmounted(el, bindings) {\n        if (!el[ctx].initialized)\n            return;\n        const { value = {} } = bindings;\n        const { zIndex } = value;\n        zIndexManager.unregister(el, zIndex);\n    }\n};\nexport default zindexable;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,mBAAmB;AAC7C,MAAMC,GAAG,GAAG,aAAa;AACzB;AACA,MAAMC,UAAU,GAAG;EACfC,OAAO,CAACC,EAAE,EAAEC,QAAQ,EAAE;IAClB,MAAM;MAAEC,KAAK,GAAG,CAAC;IAAE,CAAC,GAAGD,QAAQ;IAC/B,MAAM;MAAEE,MAAM;MAAEC;IAAQ,CAAC,GAAGF,KAAK;IACjCF,EAAE,CAACH,GAAG,CAAC,GAAG;MACNO,OAAO,EAAE,CAAC,CAACA,OAAO;MAClBC,WAAW,EAAE;IACjB,CAAC;IACD,IAAID,OAAO,EAAE;MACTR,aAAa,CAACU,YAAY,CAACN,EAAE,EAAEG,MAAM,CAAC;MACtCH,EAAE,CAACH,GAAG,CAAC,CAACQ,WAAW,GAAG,IAAI;IAC9B;EACJ,CAAC;EACDE,OAAO,CAACP,EAAE,EAAEC,QAAQ,EAAE;IAClB,MAAM;MAAEC,KAAK,GAAG,CAAC;IAAE,CAAC,GAAGD,QAAQ;IAC/B,MAAM;MAAEE,MAAM;MAAEC;IAAQ,CAAC,GAAGF,KAAK;IACjC,MAAMM,aAAa,GAAGR,EAAE,CAACH,GAAG,CAAC,CAACO,OAAO;IACrC,IAAIA,OAAO,IAAI,CAACI,aAAa,EAAE;MAC3BZ,aAAa,CAACU,YAAY,CAACN,EAAE,EAAEG,MAAM,CAAC;MACtCH,EAAE,CAACH,GAAG,CAAC,CAACQ,WAAW,GAAG,IAAI;IAC9B;IACAL,EAAE,CAACH,GAAG,CAAC,CAACO,OAAO,GAAG,CAAC,CAACA,OAAO;EAC/B,CAAC;EACDK,SAAS,CAACT,EAAE,EAAEC,QAAQ,EAAE;IACpB,IAAI,CAACD,EAAE,CAACH,GAAG,CAAC,CAACQ,WAAW,EACpB;IACJ,MAAM;MAAEH,KAAK,GAAG,CAAC;IAAE,CAAC,GAAGD,QAAQ;IAC/B,MAAM;MAAEE;IAAO,CAAC,GAAGD,KAAK;IACxBN,aAAa,CAACc,UAAU,CAACV,EAAE,EAAEG,MAAM,CAAC;EACxC;AACJ,CAAC;AACD,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}