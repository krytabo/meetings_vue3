{"ast":null,"code":"// Importing video-js\nimport videojs from \"video.js\";\nexport default {\n  name: \"VideoJsPlayer\",\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      player: null\n    };\n  },\n  // initializing the video player\n  // when the component is being mounted\n  mounted() {\n    this.player = videojs(this.$refs.videoPlayer, this.options, () => {\n      this.player.log(\"video player ready\", this);\n    });\n  },\n  // destroying the video player\n  // when the component is being destroyed\n  beforeDestroy() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n};","map":{"version":3,"mappings":"AAMA;AACA,OAAOA,OAAM,MAAO,UAAU;AAC9B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,GAAG;QACR,OAAO,CAAC,CAAC;MACX;IACF;EACF,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD;EACA;EACAC,OAAO,GAAG;IACR,IAAI,CAACD,MAAK,GAAIR,OAAO,CAAC,IAAI,CAACU,KAAK,CAACC,WAAW,EAAE,IAAI,CAACR,OAAO,EAAE,MAAM;MAChE,IAAI,CAACK,MAAM,CAACI,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;EACD;EACA;EACAC,aAAa,GAAG;IACd,IAAI,IAAI,CAACL,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACM,OAAO,EAAE;IACvB;EACF;AACF,CAAC","names":["videojs","name","props","options","type","Object","default","data","player","mounted","$refs","videoPlayer","log","beforeDestroy","dispose"],"sourceRoot":"","sources":["/Users/elmo/GitHub/meetings_vue3/src/components/VideoJSPlayer.vue"],"sourcesContent":["<template>\n  <div>\n    <video ref=\"videoJsPlayer\" class=\"video-js vjs-defaultskin\"></video>\n  </div>\n</template>\n<script>\n// Importing video-js\nimport videojs from \"video.js\";\nexport default {\n  name: \"VideoJsPlayer\",\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      player: null,\n    };\n  },\n  // initializing the video player\n  // when the component is being mounted\n  mounted() {\n    this.player = videojs(this.$refs.videoPlayer, this.options, () => {\n      this.player.log(\"video player ready\", this);\n    });\n  },\n  // destroying the video player\n  // when the component is being destroyed\n  beforeDestroy() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}