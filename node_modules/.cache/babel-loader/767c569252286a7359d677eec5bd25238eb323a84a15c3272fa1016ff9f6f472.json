{"ast":null,"code":"import { h, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render, mergeEventHandlers } from '../../../_utils';\nimport { CheckmarkIcon } from '../../icons';\nimport { NBaseIcon } from '../../icon';\nimport { internalSelectionMenuInjectionKey } from './interface';\nfunction renderCheckMark(show, clsPrefix) {\n  return h(Transition, {\n    name: \"fade-in-scale-up-transition\"\n  }, {\n    default: () => show ? h(NBaseIcon, {\n      clsPrefix: clsPrefix,\n      class: `${clsPrefix}-base-select-option__check`\n    }, {\n      default: () => h(CheckmarkIcon)\n    }) : null\n  });\n}\nexport default defineComponent({\n  name: 'NBaseSelectOption',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      valueRef,\n      pendingTmNodeRef,\n      multipleRef,\n      valueSetRef,\n      renderLabelRef,\n      renderOptionRef,\n      labelFieldRef,\n      valueFieldRef,\n      showCheckmarkRef,\n      nodePropsRef,\n      handleOptionClick,\n      handleOptionMouseEnter\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(internalSelectionMenuInjectionKey);\n    const isPendingRef = useMemo(() => {\n      const {\n        value: pendingTmNode\n      } = pendingTmNodeRef;\n      if (!pendingTmNode) return false;\n      return props.tmNode.key === pendingTmNode.key;\n    });\n    function handleClick(e) {\n      const {\n        tmNode\n      } = props;\n      if (tmNode.disabled) return;\n      handleOptionClick(e, tmNode);\n    }\n    function handleMouseEnter(e) {\n      const {\n        tmNode\n      } = props;\n      if (tmNode.disabled) return;\n      handleOptionMouseEnter(e, tmNode);\n    }\n    function handleMouseMove(e) {\n      const {\n        tmNode\n      } = props;\n      const {\n        value: isPending\n      } = isPendingRef;\n      if (tmNode.disabled || isPending) return;\n      handleOptionMouseEnter(e, tmNode);\n    }\n    return {\n      multiple: multipleRef,\n      isGrouped: useMemo(() => {\n        const {\n          tmNode\n        } = props;\n        const {\n          parent\n        } = tmNode;\n        return parent && parent.rawNode.type === 'group';\n      }),\n      showCheckmark: showCheckmarkRef,\n      nodeProps: nodePropsRef,\n      isPending: isPendingRef,\n      isSelected: useMemo(() => {\n        const {\n          value\n        } = valueRef;\n        const {\n          value: multiple\n        } = multipleRef;\n        if (value === null) return false;\n        const optionValue = props.tmNode.rawNode[valueFieldRef.value];\n        if (multiple) {\n          const {\n            value: valueSet\n          } = valueSetRef;\n          return valueSet.has(optionValue);\n        } else {\n          return value === optionValue;\n        }\n      }),\n      labelField: labelFieldRef,\n      renderLabel: renderLabelRef,\n      renderOption: renderOptionRef,\n      handleMouseMove,\n      handleMouseEnter,\n      handleClick\n    };\n  },\n  render() {\n    const {\n      clsPrefix,\n      tmNode: {\n        rawNode\n      },\n      isSelected,\n      isPending,\n      isGrouped,\n      showCheckmark,\n      nodeProps,\n      renderOption,\n      renderLabel,\n      handleClick,\n      handleMouseEnter,\n      handleMouseMove\n    } = this;\n    const checkmark = renderCheckMark(isSelected, clsPrefix);\n    const children = renderLabel ? [renderLabel(rawNode, isSelected), showCheckmark && checkmark] : [render(rawNode[this.labelField], rawNode, isSelected), showCheckmark && checkmark];\n    const attrs = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n    const node = h(\"div\", Object.assign({}, attrs, {\n      class: [`${clsPrefix}-base-select-option`, rawNode.class, attrs === null || attrs === void 0 ? void 0 : attrs.class, {\n        [`${clsPrefix}-base-select-option--disabled`]: rawNode.disabled,\n        [`${clsPrefix}-base-select-option--selected`]: isSelected,\n        [`${clsPrefix}-base-select-option--grouped`]: isGrouped,\n        [`${clsPrefix}-base-select-option--pending`]: isPending,\n        [`${clsPrefix}-base-select-option--show-checkmark`]: showCheckmark\n      }],\n      style: [(attrs === null || attrs === void 0 ? void 0 : attrs.style) || '', rawNode.style || ''],\n      onClick: mergeEventHandlers([handleClick, attrs === null || attrs === void 0 ? void 0 : attrs.onClick]),\n      onMouseenter: mergeEventHandlers([handleMouseEnter, attrs === null || attrs === void 0 ? void 0 : attrs.onMouseenter]),\n      onMousemove: mergeEventHandlers([handleMouseMove, attrs === null || attrs === void 0 ? void 0 : attrs.onMousemove])\n    }), h(\"div\", {\n      class: `${clsPrefix}-base-select-option__content`\n    }, children));\n    return rawNode.render ? rawNode.render({\n      node,\n      option: rawNode,\n      selected: isSelected\n    }) : renderOption ? renderOption({\n      node,\n      option: rawNode,\n      selected: isSelected\n    }) : node;\n  }\n});","map":{"version":3,"names":["h","inject","defineComponent","Transition","useMemo","render","mergeEventHandlers","CheckmarkIcon","NBaseIcon","internalSelectionMenuInjectionKey","renderCheckMark","show","clsPrefix","name","default","class","props","type","String","required","tmNode","Object","setup","valueRef","pendingTmNodeRef","multipleRef","valueSetRef","renderLabelRef","renderOptionRef","labelFieldRef","valueFieldRef","showCheckmarkRef","nodePropsRef","handleOptionClick","handleOptionMouseEnter","isPendingRef","value","pendingTmNode","key","handleClick","e","disabled","handleMouseEnter","handleMouseMove","isPending","multiple","isGrouped","parent","rawNode","showCheckmark","nodeProps","isSelected","optionValue","valueSet","has","labelField","renderLabel","renderOption","checkmark","children","attrs","node","assign","style","onClick","onMouseenter","onMousemove","option","selected"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/_internal/select-menu/src/SelectOption.js"],"sourcesContent":["import { h, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render, mergeEventHandlers } from '../../../_utils';\nimport { CheckmarkIcon } from '../../icons';\nimport { NBaseIcon } from '../../icon';\nimport { internalSelectionMenuInjectionKey } from './interface';\nfunction renderCheckMark(show, clsPrefix) {\n    return (h(Transition, { name: \"fade-in-scale-up-transition\" }, {\n        default: () => show ? (h(NBaseIcon, { clsPrefix: clsPrefix, class: `${clsPrefix}-base-select-option__check` }, {\n            default: () => h(CheckmarkIcon)\n        })) : null\n    }));\n}\nexport default defineComponent({\n    name: 'NBaseSelectOption',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup(props) {\n        const { valueRef, pendingTmNodeRef, multipleRef, valueSetRef, renderLabelRef, renderOptionRef, labelFieldRef, valueFieldRef, showCheckmarkRef, nodePropsRef, handleOptionClick, handleOptionMouseEnter\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(internalSelectionMenuInjectionKey);\n        const isPendingRef = useMemo(() => {\n            const { value: pendingTmNode } = pendingTmNodeRef;\n            if (!pendingTmNode)\n                return false;\n            return props.tmNode.key === pendingTmNode.key;\n        });\n        function handleClick(e) {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            handleOptionClick(e, tmNode);\n        }\n        function handleMouseEnter(e) {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            handleOptionMouseEnter(e, tmNode);\n        }\n        function handleMouseMove(e) {\n            const { tmNode } = props;\n            const { value: isPending } = isPendingRef;\n            if (tmNode.disabled || isPending)\n                return;\n            handleOptionMouseEnter(e, tmNode);\n        }\n        return {\n            multiple: multipleRef,\n            isGrouped: useMemo(() => {\n                const { tmNode } = props;\n                const { parent } = tmNode;\n                return parent && parent.rawNode.type === 'group';\n            }),\n            showCheckmark: showCheckmarkRef,\n            nodeProps: nodePropsRef,\n            isPending: isPendingRef,\n            isSelected: useMemo(() => {\n                const { value } = valueRef;\n                const { value: multiple } = multipleRef;\n                if (value === null)\n                    return false;\n                const optionValue = props.tmNode.rawNode[valueFieldRef.value];\n                if (multiple) {\n                    const { value: valueSet } = valueSetRef;\n                    return valueSet.has(optionValue);\n                }\n                else {\n                    return value === optionValue;\n                }\n            }),\n            labelField: labelFieldRef,\n            renderLabel: renderLabelRef,\n            renderOption: renderOptionRef,\n            handleMouseMove,\n            handleMouseEnter,\n            handleClick\n        };\n    },\n    render() {\n        const { clsPrefix, tmNode: { rawNode }, isSelected, isPending, isGrouped, showCheckmark, nodeProps, renderOption, renderLabel, handleClick, handleMouseEnter, handleMouseMove } = this;\n        const checkmark = renderCheckMark(isSelected, clsPrefix);\n        const children = renderLabel\n            ? [renderLabel(rawNode, isSelected), showCheckmark && checkmark]\n            : [\n                render(rawNode[this.labelField], rawNode, isSelected),\n                showCheckmark && checkmark\n            ];\n        const attrs = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n        const node = (h(\"div\", Object.assign({}, attrs, { class: [\n                `${clsPrefix}-base-select-option`,\n                rawNode.class,\n                attrs === null || attrs === void 0 ? void 0 : attrs.class,\n                {\n                    [`${clsPrefix}-base-select-option--disabled`]: rawNode.disabled,\n                    [`${clsPrefix}-base-select-option--selected`]: isSelected,\n                    [`${clsPrefix}-base-select-option--grouped`]: isGrouped,\n                    [`${clsPrefix}-base-select-option--pending`]: isPending,\n                    [`${clsPrefix}-base-select-option--show-checkmark`]: showCheckmark\n                }\n            ], style: [(attrs === null || attrs === void 0 ? void 0 : attrs.style) || '', rawNode.style || ''], onClick: mergeEventHandlers([handleClick, attrs === null || attrs === void 0 ? void 0 : attrs.onClick]), onMouseenter: mergeEventHandlers([\n                handleMouseEnter,\n                attrs === null || attrs === void 0 ? void 0 : attrs.onMouseenter\n            ]), onMousemove: mergeEventHandlers([handleMouseMove, attrs === null || attrs === void 0 ? void 0 : attrs.onMousemove]) }),\n            h(\"div\", { class: `${clsPrefix}-base-select-option__content` }, children)));\n        return rawNode.render\n            ? rawNode.render({ node, option: rawNode, selected: isSelected })\n            : renderOption\n                ? renderOption({ node, option: rawNode, selected: isSelected })\n                : node;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}