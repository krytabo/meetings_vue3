{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, toRef, computed, defineComponent, provide, inject, watchEffect } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useCompitable, useMergedState } from 'vooks';\nimport { layoutSiderInjectionKey } from '../../layout/src/interface';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call } from '../../_utils';\nimport { isIgnoredNode, itemRenderer } from './utils';\nimport { menuLight } from '../styles';\nimport { useCheckDeprecated } from './useCheckDeprecated';\nimport { menuInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const menuProps = Object.assign(Object.assign({}, useTheme.props), {\n  options: {\n    type: Array,\n    default: () => []\n  },\n  collapsed: {\n    type: Boolean,\n    default: undefined\n  },\n  collapsedWidth: {\n    type: Number,\n    default: 48\n  },\n  iconSize: {\n    type: Number,\n    default: 20\n  },\n  collapsedIconSize: {\n    type: Number,\n    default: 24\n  },\n  rootIndent: Number,\n  indent: {\n    type: Number,\n    default: 32\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  keyField: {\n    type: String,\n    default: 'key'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  disabledField: {\n    type: String,\n    default: 'disabled'\n  },\n  defaultExpandAll: Boolean,\n  defaultExpandedKeys: Array,\n  expandedKeys: Array,\n  value: [String, Number],\n  defaultValue: {\n    type: [String, Number],\n    default: null\n  },\n  mode: {\n    type: String,\n    default: 'vertical'\n  },\n  watchProps: {\n    type: Array,\n    default: undefined\n  },\n  disabled: Boolean,\n  show: {\n    type: Boolean,\n    defalut: true\n  },\n  inverted: Boolean,\n  'onUpdate:expandedKeys': [Function, Array],\n  onUpdateExpandedKeys: [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  expandIcon: Function,\n  renderIcon: Function,\n  renderLabel: Function,\n  renderExtra: Function,\n  dropdownProps: Object,\n  accordion: Boolean,\n  nodeProps: Function,\n  // deprecated\n  items: Array,\n  onOpenNamesChange: [Function, Array],\n  onSelect: [Function, Array],\n  onExpandedNamesChange: [Function, Array],\n  expandedNames: Array,\n  defaultExpandedNames: Array,\n  dropdownPlacement: {\n    type: String,\n    default: 'bottom'\n  }\n});\nexport default defineComponent({\n  name: 'Menu',\n  props: menuProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      useCheckDeprecated(props);\n    }\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Menu', '-menu', style, menuLight, props, mergedClsPrefixRef);\n    const layoutSider = inject(layoutSiderInjectionKey, null);\n    const mergedCollapsedRef = computed(() => {\n      var _a;\n      const {\n        collapsed\n      } = props;\n      if (collapsed !== undefined) return collapsed;\n      if (layoutSider) {\n        const {\n          collapseModeRef,\n          collapsedRef\n        } = layoutSider;\n        if (collapseModeRef.value === 'width') {\n          return (_a = collapsedRef.value) !== null && _a !== void 0 ? _a : false;\n        }\n      }\n      return false;\n    });\n    const treeMateRef = computed(() => {\n      const {\n        keyField,\n        childrenField,\n        disabledField\n      } = props;\n      return createTreeMate(props.items || props.options, {\n        getIgnored(node) {\n          return isIgnoredNode(node);\n        },\n        getChildren(node) {\n          return node[childrenField];\n        },\n        getDisabled(node) {\n          return node[disabledField];\n        },\n        getKey(node) {\n          var _a;\n          return (_a = node[keyField]) !== null && _a !== void 0 ? _a : node.name;\n        }\n      });\n    });\n    const treeKeysLevelOneRef = computed(() => new Set(treeMateRef.value.treeNodes.map(e => e.key)));\n    const {\n      watchProps\n    } = props;\n    const uncontrolledValueRef = ref(null);\n    if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultValue')) {\n      watchEffect(() => {\n        uncontrolledValueRef.value = props.defaultValue;\n      });\n    } else {\n      uncontrolledValueRef.value = props.defaultValue;\n    }\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const uncontrolledExpandedKeysRef = ref([]);\n    const initUncontrolledExpandedKeys = () => {\n      uncontrolledExpandedKeysRef.value = props.defaultExpandAll ? treeMateRef.value.getNonLeafKeys() : props.defaultExpandedNames || props.defaultExpandedKeys || treeMateRef.value.getPath(mergedValueRef.value, {\n        includeSelf: false\n      }).keyPath;\n    };\n    if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultExpandedKeys')) {\n      watchEffect(initUncontrolledExpandedKeys);\n    } else {\n      initUncontrolledExpandedKeys();\n    }\n    const controlledExpandedKeysRef = useCompitable(props, ['expandedNames', 'expandedKeys']);\n    const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n    const tmNodesRef = computed(() => treeMateRef.value.treeNodes);\n    const activePathRef = computed(() => {\n      return treeMateRef.value.getPath(mergedValueRef.value).keyPath;\n    });\n    provide(menuInjectionKey, {\n      props,\n      mergedCollapsedRef,\n      mergedThemeRef: themeRef,\n      mergedValueRef,\n      mergedExpandedKeysRef,\n      activePathRef,\n      mergedClsPrefixRef,\n      isHorizontalRef: computed(() => props.mode === 'horizontal'),\n      invertedRef: toRef(props, 'inverted'),\n      doSelect,\n      toggleExpand\n    });\n    function doSelect(value, item) {\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onSelect\n      } = props;\n      if (onUpdateValue) {\n        call(onUpdateValue, value, item);\n      }\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, item);\n      }\n      if (onSelect) {\n        call(onSelect, value, item);\n      }\n      uncontrolledValueRef.value = value;\n    }\n    function doUpdateExpandedKeys(value) {\n      const {\n        'onUpdate:expandedKeys': _onUpdateExpandedKeys,\n        onUpdateExpandedKeys,\n        onExpandedNamesChange,\n        onOpenNamesChange\n      } = props;\n      if (_onUpdateExpandedKeys) {\n        call(_onUpdateExpandedKeys, value);\n      }\n      if (onUpdateExpandedKeys) {\n        call(onUpdateExpandedKeys, value);\n      }\n      // deprecated\n      if (onExpandedNamesChange) {\n        call(onExpandedNamesChange, value);\n      }\n      if (onOpenNamesChange) {\n        call(onOpenNamesChange, value);\n      }\n      uncontrolledExpandedKeysRef.value = value;\n    }\n    function toggleExpand(key) {\n      const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n      const index = currentExpandedKeys.findIndex(expanededKey => expanededKey === key);\n      if (~index) {\n        currentExpandedKeys.splice(index, 1);\n      } else {\n        if (props.accordion) {\n          if (treeKeysLevelOneRef.value.has(key)) {\n            const closeKeyIndex = currentExpandedKeys.findIndex(e => treeKeysLevelOneRef.value.has(e));\n            if (closeKeyIndex > -1) {\n              currentExpandedKeys.splice(closeKeyIndex, 1);\n            }\n          }\n        }\n        currentExpandedKeys.push(key);\n      }\n      doUpdateExpandedKeys(currentExpandedKeys);\n    }\n    const showOption = key => {\n      const selectedKeyPath = treeMateRef.value.getPath(key !== null && key !== void 0 ? key : mergedValueRef.value, {\n        includeSelf: false\n      }).keyPath;\n      if (!selectedKeyPath.length) return;\n      const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n      const nextExpandedKeys = new Set([...currentExpandedKeys, ...selectedKeyPath]);\n      if (props.accordion) {\n        treeKeysLevelOneRef.value.forEach(firstLevelKey => {\n          if (nextExpandedKeys.has(firstLevelKey) && !selectedKeyPath.includes(firstLevelKey)) {\n            nextExpandedKeys.delete(firstLevelKey);\n          }\n        });\n      }\n      doUpdateExpandedKeys(Array.from(nextExpandedKeys));\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        inverted\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self\n      } = themeRef.value;\n      const {\n        borderRadius,\n        borderColorHorizontal,\n        fontSize,\n        itemHeight,\n        dividerColor\n      } = self;\n      const vars = {\n        '--n-divider-color': dividerColor,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-font-size': fontSize,\n        '--n-border-color-horizontal': borderColorHorizontal,\n        '--n-border-radius': borderRadius,\n        '--n-item-height': itemHeight\n      };\n      if (inverted) {\n        vars['--n-group-text-color'] = self.groupTextColorInverted;\n        vars['--n-color'] = self.colorInverted;\n        vars['--n-item-text-color'] = self.itemTextColorInverted;\n        vars['--n-item-text-color-hover'] = self.itemTextColorHoverInverted;\n        vars['--n-item-text-color-active'] = self.itemTextColorActiveInverted;\n        vars['--n-item-text-color-child-active'] = self.itemTextColorChildActiveInverted;\n        vars['--n-item-text-color-child-active-hover'] = self.itemTextColorChildActiveInverted;\n        vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHoverInverted;\n        vars['--n-item-icon-color'] = self.itemIconColorInverted;\n        vars['--n-item-icon-color-hover'] = self.itemIconColorHoverInverted;\n        vars['--n-item-icon-color-active'] = self.itemIconColorActiveInverted;\n        vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHoverInverted;\n        vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActiveInverted;\n        vars['--n-item-icon-color-child-active-hover'] = self.itemIconColorChildActiveHoverInverted;\n        vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsedInverted;\n        vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontalInverted;\n        vars['--n-item-text-color-hover-horizontal'] = self.itemTextColorHoverHorizontalInverted;\n        vars['--n-item-text-color-active-horizontal'] = self.itemTextColorActiveHorizontalInverted;\n        vars['--n-item-text-color-child-active-horizontal'] = self.itemTextColorChildActiveHorizontalInverted;\n        vars['--n-item-text-color-child-active-hover-horizontal'] = self.itemTextColorChildActiveHoverHorizontalInverted;\n        vars['--n-item-text-color-active-hover-horizontal'] = self.itemTextColorActiveHoverHorizontalInverted;\n        vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontalInverted;\n        vars['--n-item-icon-color-hover-horizontal'] = self.itemIconColorHoverHorizontalInverted;\n        vars['--n-item-icon-color-active-horizontal'] = self.itemIconColorActiveHorizontalInverted;\n        vars['--n-item-icon-color-active-hover-horizontal'] = self.itemIconColorActiveHoverHorizontalInverted;\n        vars['--n-item-icon-color-child-active-horizontal'] = self.itemIconColorChildActiveHorizontalInverted;\n        vars['--n-item-icon-color-child-active-hover-horizontal'] = self.itemIconColorChildActiveHoverHorizontalInverted;\n        vars['--n-arrow-color'] = self.arrowColorInverted;\n        vars['--n-arrow-color-hover'] = self.arrowColorHoverInverted;\n        vars['--n-arrow-color-active'] = self.arrowColorActiveInverted;\n        vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHoverInverted;\n        vars['--n-arrow-color-child-active'] = self.arrowColorChildActiveInverted;\n        vars['--n-arrow-color-child-active-hover'] = self.arrowColorChildActiveHoverInverted;\n        vars['--n-item-color-hover'] = self.itemColorHoverInverted;\n        vars['--n-item-color-active'] = self.itemColorActiveInverted;\n        vars['--n-item-color-active-hover'] = self.itemColorActiveHoverInverted;\n        vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsedInverted;\n      } else {\n        vars['--n-group-text-color'] = self.groupTextColor;\n        vars['--n-color'] = self.color;\n        vars['--n-item-text-color'] = self.itemTextColor;\n        vars['--n-item-text-color-hover'] = self.itemTextColorHover;\n        vars['--n-item-text-color-active'] = self.itemTextColorActive;\n        vars['--n-item-text-color-child-active'] = self.itemTextColorChildActive;\n        vars['--n-item-text-color-child-active-hover'] = self.itemTextColorChildActiveHover;\n        vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHover;\n        vars['--n-item-icon-color'] = self.itemIconColor;\n        vars['--n-item-icon-color-hover'] = self.itemIconColorHover;\n        vars['--n-item-icon-color-active'] = self.itemIconColorActive;\n        vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHover;\n        vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActive;\n        vars['--n-item-icon-color-child-active-hover'] = self.itemIconColorChildActiveHover;\n        vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsed;\n        vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontal;\n        vars['--n-item-text-color-hover-horizontal'] = self.itemTextColorHoverHorizontal;\n        vars['--n-item-text-color-active-horizontal'] = self.itemTextColorActiveHorizontal;\n        vars['--n-item-text-color-child-active-horizontal'] = self.itemTextColorChildActiveHorizontal;\n        vars['--n-item-text-color-child-active-hover-horizontal'] = self.itemTextColorChildActiveHoverHorizontal;\n        vars['--n-item-text-color-active-hover-horizontal'] = self.itemTextColorActiveHoverHorizontal;\n        vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontal;\n        vars['--n-item-icon-color-hover-horizontal'] = self.itemIconColorHoverHorizontal;\n        vars['--n-item-icon-color-active-horizontal'] = self.itemIconColorActiveHorizontal;\n        vars['--n-item-icon-color-active-hover-horizontal'] = self.itemIconColorActiveHoverHorizontal;\n        vars['--n-item-icon-color-child-active-horizontal'] = self.itemIconColorChildActiveHorizontal;\n        vars['--n-item-icon-color-child-active-hover-horizontal'] = self.itemIconColorChildActiveHoverHorizontal;\n        vars['--n-arrow-color'] = self.arrowColor;\n        vars['--n-arrow-color-hover'] = self.arrowColorHover;\n        vars['--n-arrow-color-active'] = self.arrowColorActive;\n        vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHover;\n        vars['--n-arrow-color-child-active'] = self.arrowColorChildActive;\n        vars['--n-arrow-color-child-active-hover'] = self.arrowColorChildActiveHover;\n        vars['--n-item-color-hover'] = self.itemColorHover;\n        vars['--n-item-color-active'] = self.itemColorActive;\n        vars['--n-item-color-active-hover'] = self.itemColorActiveHover;\n        vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsed;\n      }\n      return vars;\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('menu', computed(() => props.inverted ? 'a' : 'b'), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      controlledExpandedKeys: controlledExpandedKeysRef,\n      uncontrolledExpanededKeys: uncontrolledExpandedKeysRef,\n      mergedExpandedKeys: mergedExpandedKeysRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      activePath: activePathRef,\n      tmNodes: tmNodesRef,\n      mergedTheme: themeRef,\n      mergedCollapsed: mergedCollapsedRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      showOption\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      mode,\n      themeClass,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      role: mode === 'horizontal' ? 'menubar' : 'menu',\n      class: [`${mergedClsPrefix}-menu`, themeClass, `${mergedClsPrefix}-menu--${mode}`, this.mergedCollapsed && `${mergedClsPrefix}-menu--collapsed`],\n      style: this.cssVars\n    }, this.tmNodes.map(tmNode => itemRenderer(tmNode, this.$props)));\n  }\n});","map":{"version":3,"names":["h","ref","toRef","computed","defineComponent","provide","inject","watchEffect","createTreeMate","useCompitable","useMergedState","layoutSiderInjectionKey","useConfig","useTheme","useThemeClass","call","isIgnoredNode","itemRenderer","menuLight","useCheckDeprecated","menuInjectionKey","style","menuProps","Object","assign","props","options","type","Array","default","collapsed","Boolean","undefined","collapsedWidth","Number","iconSize","collapsedIconSize","rootIndent","indent","labelField","String","keyField","childrenField","disabledField","defaultExpandAll","defaultExpandedKeys","expandedKeys","value","defaultValue","mode","watchProps","disabled","show","defalut","inverted","Function","onUpdateExpandedKeys","onUpdateValue","expandIcon","renderIcon","renderLabel","renderExtra","dropdownProps","accordion","nodeProps","items","onOpenNamesChange","onSelect","onExpandedNamesChange","expandedNames","defaultExpandedNames","dropdownPlacement","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","inlineThemeDisabled","themeRef","layoutSider","mergedCollapsedRef","_a","collapseModeRef","collapsedRef","treeMateRef","getIgnored","node","getChildren","getDisabled","getKey","treeKeysLevelOneRef","Set","treeNodes","map","e","key","uncontrolledValueRef","includes","controlledValueRef","mergedValueRef","uncontrolledExpandedKeysRef","initUncontrolledExpandedKeys","getNonLeafKeys","getPath","includeSelf","keyPath","controlledExpandedKeysRef","mergedExpandedKeysRef","tmNodesRef","activePathRef","mergedThemeRef","isHorizontalRef","invertedRef","doSelect","toggleExpand","item","_onUpdateValue","doUpdateExpandedKeys","_onUpdateExpandedKeys","currentExpandedKeys","from","index","findIndex","expanededKey","splice","has","closeKeyIndex","push","showOption","selectedKeyPath","length","nextExpandedKeys","forEach","firstLevelKey","delete","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","borderColorHorizontal","fontSize","itemHeight","dividerColor","vars","groupTextColorInverted","colorInverted","itemTextColorInverted","itemTextColorHoverInverted","itemTextColorActiveInverted","itemTextColorChildActiveInverted","itemTextColorActiveHoverInverted","itemIconColorInverted","itemIconColorHoverInverted","itemIconColorActiveInverted","itemIconColorActiveHoverInverted","itemIconColorChildActiveInverted","itemIconColorChildActiveHoverInverted","itemIconColorCollapsedInverted","itemTextColorHorizontalInverted","itemTextColorHoverHorizontalInverted","itemTextColorActiveHorizontalInverted","itemTextColorChildActiveHorizontalInverted","itemTextColorChildActiveHoverHorizontalInverted","itemTextColorActiveHoverHorizontalInverted","itemIconColorHorizontalInverted","itemIconColorHoverHorizontalInverted","itemIconColorActiveHorizontalInverted","itemIconColorActiveHoverHorizontalInverted","itemIconColorChildActiveHorizontalInverted","itemIconColorChildActiveHoverHorizontalInverted","arrowColorInverted","arrowColorHoverInverted","arrowColorActiveInverted","arrowColorActiveHoverInverted","arrowColorChildActiveInverted","arrowColorChildActiveHoverInverted","itemColorHoverInverted","itemColorActiveInverted","itemColorActiveHoverInverted","itemColorActiveCollapsedInverted","groupTextColor","color","itemTextColor","itemTextColorHover","itemTextColorActive","itemTextColorChildActive","itemTextColorChildActiveHover","itemTextColorActiveHover","itemIconColor","itemIconColorHover","itemIconColorActive","itemIconColorActiveHover","itemIconColorChildActive","itemIconColorChildActiveHover","itemIconColorCollapsed","itemTextColorHorizontal","itemTextColorHoverHorizontal","itemTextColorActiveHorizontal","itemTextColorChildActiveHorizontal","itemTextColorChildActiveHoverHorizontal","itemTextColorActiveHoverHorizontal","itemIconColorHorizontal","itemIconColorHoverHorizontal","itemIconColorActiveHorizontal","itemIconColorActiveHoverHorizontal","itemIconColorChildActiveHorizontal","itemIconColorChildActiveHoverHorizontal","arrowColor","arrowColorHover","arrowColorActive","arrowColorActiveHover","arrowColorChildActive","arrowColorChildActiveHover","itemColorHover","itemColorActive","itemColorActiveHover","itemColorActiveCollapsed","themeClassHandle","mergedClsPrefix","controlledExpandedKeys","uncontrolledExpanededKeys","mergedExpandedKeys","uncontrolledValue","mergedValue","activePath","tmNodes","mergedTheme","mergedCollapsed","cssVars","themeClass","onRender","render","role","class","tmNode","$props"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/menu/src/Menu.js"],"sourcesContent":["import { h, ref, toRef, computed, defineComponent, provide, inject, watchEffect } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useCompitable, useMergedState } from 'vooks';\nimport { layoutSiderInjectionKey } from '../../layout/src/interface';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call } from '../../_utils';\nimport { isIgnoredNode, itemRenderer } from './utils';\nimport { menuLight } from '../styles';\nimport { useCheckDeprecated } from './useCheckDeprecated';\nimport { menuInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const menuProps = Object.assign(Object.assign({}, useTheme.props), { options: {\n        type: Array,\n        default: () => []\n    }, collapsed: {\n        type: Boolean,\n        default: undefined\n    }, collapsedWidth: {\n        type: Number,\n        default: 48\n    }, iconSize: {\n        type: Number,\n        default: 20\n    }, collapsedIconSize: {\n        type: Number,\n        default: 24\n    }, rootIndent: Number, indent: {\n        type: Number,\n        default: 32\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, keyField: {\n        type: String,\n        default: 'key'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, disabledField: {\n        type: String,\n        default: 'disabled'\n    }, defaultExpandAll: Boolean, defaultExpandedKeys: Array, expandedKeys: Array, value: [String, Number], defaultValue: {\n        type: [String, Number],\n        default: null\n    }, mode: {\n        type: String,\n        default: 'vertical'\n    }, watchProps: {\n        type: Array,\n        default: undefined\n    }, disabled: Boolean, show: {\n        type: Boolean,\n        defalut: true\n    }, inverted: Boolean, 'onUpdate:expandedKeys': [Function, Array], onUpdateExpandedKeys: [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:value': [Function, Array], expandIcon: Function, renderIcon: Function, renderLabel: Function, renderExtra: Function, dropdownProps: Object, accordion: Boolean, nodeProps: Function, \n    // deprecated\n    items: Array, onOpenNamesChange: [Function, Array], onSelect: [Function, Array], onExpandedNamesChange: [Function, Array], expandedNames: Array, defaultExpandedNames: Array, dropdownPlacement: {\n        type: String,\n        default: 'bottom'\n    } });\nexport default defineComponent({\n    name: 'Menu',\n    props: menuProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            useCheckDeprecated(props);\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Menu', '-menu', style, menuLight, props, mergedClsPrefixRef);\n        const layoutSider = inject(layoutSiderInjectionKey, null);\n        const mergedCollapsedRef = computed(() => {\n            var _a;\n            const { collapsed } = props;\n            if (collapsed !== undefined)\n                return collapsed;\n            if (layoutSider) {\n                const { collapseModeRef, collapsedRef } = layoutSider;\n                if (collapseModeRef.value === 'width') {\n                    return (_a = collapsedRef.value) !== null && _a !== void 0 ? _a : false;\n                }\n            }\n            return false;\n        });\n        const treeMateRef = computed(() => {\n            const { keyField, childrenField, disabledField } = props;\n            return createTreeMate(props.items || props.options, {\n                getIgnored(node) {\n                    return isIgnoredNode(node);\n                },\n                getChildren(node) {\n                    return node[childrenField];\n                },\n                getDisabled(node) {\n                    return node[disabledField];\n                },\n                getKey(node) {\n                    var _a;\n                    return (_a = node[keyField]) !== null && _a !== void 0 ? _a : node.name;\n                }\n            });\n        });\n        const treeKeysLevelOneRef = computed(() => new Set(treeMateRef.value.treeNodes.map((e) => e.key)));\n        const { watchProps } = props;\n        const uncontrolledValueRef = ref(null);\n        if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultValue')) {\n            watchEffect(() => {\n                uncontrolledValueRef.value = props.defaultValue;\n            });\n        }\n        else {\n            uncontrolledValueRef.value = props.defaultValue;\n        }\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const uncontrolledExpandedKeysRef = ref([]);\n        const initUncontrolledExpandedKeys = () => {\n            uncontrolledExpandedKeysRef.value = props.defaultExpandAll\n                ? treeMateRef.value.getNonLeafKeys()\n                : props.defaultExpandedNames ||\n                    props.defaultExpandedKeys ||\n                    treeMateRef.value.getPath(mergedValueRef.value, {\n                        includeSelf: false\n                    }).keyPath;\n        };\n        if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultExpandedKeys')) {\n            watchEffect(initUncontrolledExpandedKeys);\n        }\n        else {\n            initUncontrolledExpandedKeys();\n        }\n        const controlledExpandedKeysRef = useCompitable(props, [\n            'expandedNames',\n            'expandedKeys'\n        ]);\n        const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n        const tmNodesRef = computed(() => treeMateRef.value.treeNodes);\n        const activePathRef = computed(() => {\n            return treeMateRef.value.getPath(mergedValueRef.value).keyPath;\n        });\n        provide(menuInjectionKey, {\n            props,\n            mergedCollapsedRef,\n            mergedThemeRef: themeRef,\n            mergedValueRef,\n            mergedExpandedKeysRef,\n            activePathRef,\n            mergedClsPrefixRef,\n            isHorizontalRef: computed(() => props.mode === 'horizontal'),\n            invertedRef: toRef(props, 'inverted'),\n            doSelect,\n            toggleExpand\n        });\n        function doSelect(value, item) {\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue, onSelect } = props;\n            if (onUpdateValue) {\n                call(onUpdateValue, value, item);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, item);\n            }\n            if (onSelect) {\n                call(onSelect, value, item);\n            }\n            uncontrolledValueRef.value = value;\n        }\n        function doUpdateExpandedKeys(value) {\n            const { 'onUpdate:expandedKeys': _onUpdateExpandedKeys, onUpdateExpandedKeys, onExpandedNamesChange, onOpenNamesChange } = props;\n            if (_onUpdateExpandedKeys) {\n                call(_onUpdateExpandedKeys, value);\n            }\n            if (onUpdateExpandedKeys) {\n                call(onUpdateExpandedKeys, value);\n            }\n            // deprecated\n            if (onExpandedNamesChange) {\n                call(onExpandedNamesChange, value);\n            }\n            if (onOpenNamesChange) {\n                call(onOpenNamesChange, value);\n            }\n            uncontrolledExpandedKeysRef.value = value;\n        }\n        function toggleExpand(key) {\n            const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n            const index = currentExpandedKeys.findIndex((expanededKey) => expanededKey === key);\n            if (~index) {\n                currentExpandedKeys.splice(index, 1);\n            }\n            else {\n                if (props.accordion) {\n                    if (treeKeysLevelOneRef.value.has(key)) {\n                        const closeKeyIndex = currentExpandedKeys.findIndex((e) => treeKeysLevelOneRef.value.has(e));\n                        if (closeKeyIndex > -1) {\n                            currentExpandedKeys.splice(closeKeyIndex, 1);\n                        }\n                    }\n                }\n                currentExpandedKeys.push(key);\n            }\n            doUpdateExpandedKeys(currentExpandedKeys);\n        }\n        const showOption = (key) => {\n            const selectedKeyPath = treeMateRef.value.getPath(key !== null && key !== void 0 ? key : mergedValueRef.value, {\n                includeSelf: false\n            }).keyPath;\n            if (!selectedKeyPath.length)\n                return;\n            const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n            const nextExpandedKeys = new Set([\n                ...currentExpandedKeys,\n                ...selectedKeyPath\n            ]);\n            if (props.accordion) {\n                treeKeysLevelOneRef.value.forEach((firstLevelKey) => {\n                    if (nextExpandedKeys.has(firstLevelKey) &&\n                        !selectedKeyPath.includes(firstLevelKey)) {\n                        nextExpandedKeys.delete(firstLevelKey);\n                    }\n                });\n            }\n            doUpdateExpandedKeys(Array.from(nextExpandedKeys));\n        };\n        const cssVarsRef = computed(() => {\n            const { inverted } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { borderRadius, borderColorHorizontal, fontSize, itemHeight, dividerColor } = self;\n            const vars = {\n                '--n-divider-color': dividerColor,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-font-size': fontSize,\n                '--n-border-color-horizontal': borderColorHorizontal,\n                '--n-border-radius': borderRadius,\n                '--n-item-height': itemHeight\n            };\n            if (inverted) {\n                vars['--n-group-text-color'] = self.groupTextColorInverted;\n                vars['--n-color'] = self.colorInverted;\n                vars['--n-item-text-color'] = self.itemTextColorInverted;\n                vars['--n-item-text-color-hover'] = self.itemTextColorHoverInverted;\n                vars['--n-item-text-color-active'] = self.itemTextColorActiveInverted;\n                vars['--n-item-text-color-child-active'] =\n                    self.itemTextColorChildActiveInverted;\n                vars['--n-item-text-color-child-active-hover'] =\n                    self.itemTextColorChildActiveInverted;\n                vars['--n-item-text-color-active-hover'] =\n                    self.itemTextColorActiveHoverInverted;\n                vars['--n-item-icon-color'] = self.itemIconColorInverted;\n                vars['--n-item-icon-color-hover'] = self.itemIconColorHoverInverted;\n                vars['--n-item-icon-color-active'] = self.itemIconColorActiveInverted;\n                vars['--n-item-icon-color-active-hover'] =\n                    self.itemIconColorActiveHoverInverted;\n                vars['--n-item-icon-color-child-active'] =\n                    self.itemIconColorChildActiveInverted;\n                vars['--n-item-icon-color-child-active-hover'] =\n                    self.itemIconColorChildActiveHoverInverted;\n                vars['--n-item-icon-color-collapsed'] =\n                    self.itemIconColorCollapsedInverted;\n                vars['--n-item-text-color-horizontal'] =\n                    self.itemTextColorHorizontalInverted;\n                vars['--n-item-text-color-hover-horizontal'] =\n                    self.itemTextColorHoverHorizontalInverted;\n                vars['--n-item-text-color-active-horizontal'] =\n                    self.itemTextColorActiveHorizontalInverted;\n                vars['--n-item-text-color-child-active-horizontal'] =\n                    self.itemTextColorChildActiveHorizontalInverted;\n                vars['--n-item-text-color-child-active-hover-horizontal'] =\n                    self.itemTextColorChildActiveHoverHorizontalInverted;\n                vars['--n-item-text-color-active-hover-horizontal'] =\n                    self.itemTextColorActiveHoverHorizontalInverted;\n                vars['--n-item-icon-color-horizontal'] =\n                    self.itemIconColorHorizontalInverted;\n                vars['--n-item-icon-color-hover-horizontal'] =\n                    self.itemIconColorHoverHorizontalInverted;\n                vars['--n-item-icon-color-active-horizontal'] =\n                    self.itemIconColorActiveHorizontalInverted;\n                vars['--n-item-icon-color-active-hover-horizontal'] =\n                    self.itemIconColorActiveHoverHorizontalInverted;\n                vars['--n-item-icon-color-child-active-horizontal'] =\n                    self.itemIconColorChildActiveHorizontalInverted;\n                vars['--n-item-icon-color-child-active-hover-horizontal'] =\n                    self.itemIconColorChildActiveHoverHorizontalInverted;\n                vars['--n-arrow-color'] = self.arrowColorInverted;\n                vars['--n-arrow-color-hover'] = self.arrowColorHoverInverted;\n                vars['--n-arrow-color-active'] = self.arrowColorActiveInverted;\n                vars['--n-arrow-color-active-hover'] =\n                    self.arrowColorActiveHoverInverted;\n                vars['--n-arrow-color-child-active'] =\n                    self.arrowColorChildActiveInverted;\n                vars['--n-arrow-color-child-active-hover'] =\n                    self.arrowColorChildActiveHoverInverted;\n                vars['--n-item-color-hover'] = self.itemColorHoverInverted;\n                vars['--n-item-color-active'] = self.itemColorActiveInverted;\n                vars['--n-item-color-active-hover'] = self.itemColorActiveHoverInverted;\n                vars['--n-item-color-active-collapsed'] =\n                    self.itemColorActiveCollapsedInverted;\n            }\n            else {\n                vars['--n-group-text-color'] = self.groupTextColor;\n                vars['--n-color'] = self.color;\n                vars['--n-item-text-color'] = self.itemTextColor;\n                vars['--n-item-text-color-hover'] = self.itemTextColorHover;\n                vars['--n-item-text-color-active'] = self.itemTextColorActive;\n                vars['--n-item-text-color-child-active'] = self.itemTextColorChildActive;\n                vars['--n-item-text-color-child-active-hover'] =\n                    self.itemTextColorChildActiveHover;\n                vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHover;\n                vars['--n-item-icon-color'] = self.itemIconColor;\n                vars['--n-item-icon-color-hover'] = self.itemIconColorHover;\n                vars['--n-item-icon-color-active'] = self.itemIconColorActive;\n                vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHover;\n                vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActive;\n                vars['--n-item-icon-color-child-active-hover'] =\n                    self.itemIconColorChildActiveHover;\n                vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsed;\n                vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontal;\n                vars['--n-item-text-color-hover-horizontal'] =\n                    self.itemTextColorHoverHorizontal;\n                vars['--n-item-text-color-active-horizontal'] =\n                    self.itemTextColorActiveHorizontal;\n                vars['--n-item-text-color-child-active-horizontal'] =\n                    self.itemTextColorChildActiveHorizontal;\n                vars['--n-item-text-color-child-active-hover-horizontal'] =\n                    self.itemTextColorChildActiveHoverHorizontal;\n                vars['--n-item-text-color-active-hover-horizontal'] =\n                    self.itemTextColorActiveHoverHorizontal;\n                vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontal;\n                vars['--n-item-icon-color-hover-horizontal'] =\n                    self.itemIconColorHoverHorizontal;\n                vars['--n-item-icon-color-active-horizontal'] =\n                    self.itemIconColorActiveHorizontal;\n                vars['--n-item-icon-color-active-hover-horizontal'] =\n                    self.itemIconColorActiveHoverHorizontal;\n                vars['--n-item-icon-color-child-active-horizontal'] =\n                    self.itemIconColorChildActiveHorizontal;\n                vars['--n-item-icon-color-child-active-hover-horizontal'] =\n                    self.itemIconColorChildActiveHoverHorizontal;\n                vars['--n-arrow-color'] = self.arrowColor;\n                vars['--n-arrow-color-hover'] = self.arrowColorHover;\n                vars['--n-arrow-color-active'] = self.arrowColorActive;\n                vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHover;\n                vars['--n-arrow-color-child-active'] = self.arrowColorChildActive;\n                vars['--n-arrow-color-child-active-hover'] =\n                    self.arrowColorChildActiveHover;\n                vars['--n-item-color-hover'] = self.itemColorHover;\n                vars['--n-item-color-active'] = self.itemColorActive;\n                vars['--n-item-color-active-hover'] = self.itemColorActiveHover;\n                vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsed;\n            }\n            return vars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('menu', computed(() => (props.inverted ? 'a' : 'b')), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            controlledExpandedKeys: controlledExpandedKeysRef,\n            uncontrolledExpanededKeys: uncontrolledExpandedKeysRef,\n            mergedExpandedKeys: mergedExpandedKeysRef,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            activePath: activePathRef,\n            tmNodes: tmNodesRef,\n            mergedTheme: themeRef,\n            mergedCollapsed: mergedCollapsedRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            showOption\n        };\n    },\n    render() {\n        const { mergedClsPrefix, mode, themeClass, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { role: mode === 'horizontal' ? 'menubar' : 'menu', class: [\n                `${mergedClsPrefix}-menu`,\n                themeClass,\n                `${mergedClsPrefix}-menu--${mode}`,\n                this.mergedCollapsed && `${mergedClsPrefix}-menu--collapsed`\n            ], style: this.cssVars }, this.tmNodes.map((tmNode) => itemRenderer(tmNode, this.$props))));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}