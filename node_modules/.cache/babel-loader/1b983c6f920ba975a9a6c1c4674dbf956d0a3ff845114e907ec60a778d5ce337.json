{"ast":null,"code":"import { userList } from \"@/views/config/api\";\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    isSingel: {\n      type: Boolean,\n      default: false\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => []\n    },\n    dialogShow: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      memberList: [],\n      selectTags: [],\n      // dialogVisible: false,\n      dialogFormVisible: this.dialogShow,\n      internalVisible: false,\n      tags: this.tagsValue\n    };\n  },\n  mounted() {\n    userList().then(res => {\n      this.memberList = res.data;\n    });\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit(\"updateVisible\", val);\n        console.log(123);\n        this.$nextTick(() => {\n          for (let i = 0; i < this.$refs.multipleTable.length; i++) {\n            this.$refs.memberTables[i].clearSelection();\n            this.tags.forEach(item => {\n              this.memberList.forEach(subItem => {\n                if (item.id === subItem.id) {\n                  this.$refs.memberTables[i].toggleRowSelection(subItem, true);\n                }\n              });\n            });\n          }\n          /*this.$refs.memberTables.clearSelection();\n          this.tags.forEach((item) => {\n            this.memberList.forEach((subItem) => {\n              if (item.id === subItem.id) {\n                this.$refs.memberTables.toggleRowSelection(subItem, true);\n              }\n            });\n          });*/\n        });\n      }\n    }\n  },\n\n  methods: {\n    // table選擇框\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n      this.$emit(\"selected-user\", val);\n    },\n    // 確認按鈕\n    confirmButton() {\n      this.tags = this.selectTags;\n      const rows = this.tags;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", rows);\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n    }\n  },\n  watch: {\n    dialogShow(val) {\n      this.dialogFormVisible = val;\n    }\n  }\n};","map":{"version":3,"mappings":"AAkCA,SAASA,QAAO,QAAS,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;IACJC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACD;IACAC,SAAS,EAAE;MACTH,IAAI,EAAEI,KAAK;MACXF,OAAO,EAAE,MAAM;IACjB,CAAC;IACDG,UAAU,EAAE;MACVL,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACd;MACAC,iBAAiB,EAAE,IAAI,CAACJ,UAAU;MAClCK,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,IAAI,CAACR;IACb,CAAC;EACH,CAAC;EACDS,OAAO,GAAG;IACRhB,QAAQ,EAAE,CAACiB,IAAI,CAAEC,GAAG,IAAK;MACvB,IAAI,CAACP,UAAS,GAAIO,GAAG,CAACR,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC;EACDS,QAAQ,EAAE;IACRC,aAAa,EAAE;MACbC,GAAG,GAAG;QACJ,OAAO,IAAI,CAACC,OAAO;MACrB,CAAC;MACDC,GAAG,CAACC,GAAG,EAAE;QACP;QACA,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;QAChCE,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAChB,IAAI,CAACC,SAAS,CAAC,MAAM;UACnB,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACC,KAAK,CAACC,aAAa,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;YACxD,IAAI,CAACC,KAAK,CAACG,YAAY,CAACJ,CAAC,CAAC,CAACK,cAAc,EAAE;YAC3C,IAAI,CAACnB,IAAI,CAACoB,OAAO,CAAEC,IAAI,IAAK;cAC1B,IAAI,CAACzB,UAAU,CAACwB,OAAO,CAAEE,OAAO,IAAK;gBACnC,IAAID,IAAI,CAACE,EAAC,KAAMD,OAAO,CAACC,EAAE,EAAE;kBAC1B,IAAI,CAACR,KAAK,CAACG,YAAY,CAACJ,CAAC,CAAC,CAACU,kBAAkB,CAACF,OAAO,EAAE,IAAI,CAAC;gBAC9D;cACF,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ;UACA;;;;;;;;QAQF,CAAC,CAAC;MACJ;IACF;EACF,CAAC;;EACDG,OAAO,EAAE;IACP;IACAC,MAAM,CAACjB,GAAG,EAAE;MACV,IAAI,CAACZ,UAAS,GAAI8B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACpB,GAAG,CAAC,CAAC;MACjD,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;IAClC,CAAC;IACD;IACAqB,aAAa,GAAG;MACd,IAAI,CAAC9B,IAAG,GAAI,IAAI,CAACH,UAAU;MAC3B,MAAMkC,IAAG,GAAI,IAAI,CAAC/B,IAAI;MACtB,IAAI,CAACU,KAAK,CAAC,iBAAiB,EAAE,mBAAmB,EAAEqB,IAAI,CAAC;IAC1D,CAAC;IACD;IACAC,YAAY,GAAG;MACb,IAAI,CAACtB,KAAK,CAAC,gBAAgB,CAAC;IAC9B;EACF,CAAC;EACDuB,KAAK,EAAE;IACLvC,UAAU,CAACe,GAAG,EAAE;MACd,IAAI,CAACX,iBAAgB,GAAIW,GAAE;IAC7B;EACF;AACF,CAAC","names":["userList","name","prop","isSingel","type","Boolean","default","tagsValue","Array","dialogShow","data","memberList","selectTags","dialogFormVisible","internalVisible","tags","mounted","then","res","computed","dialogVisible","get","visible","set","val","$emit","console","log","$nextTick","i","$refs","multipleTable","length","memberTables","clearSelection","forEach","item","subItem","id","toggleRowSelection","methods","select","JSON","parse","stringify","confirmButton","rows","cancelButton","watch"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-dialog title=\"選擇人員\" draggable :visible=\"dialogFormVisible\" :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button type=\"primary\" @click=\"confirmButton\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    isSingel: {\n      type: Boolean,\n      default: false,\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => [],\n    },\n    dialogShow: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      memberList: [],\n      selectTags: [],\n      // dialogVisible: false,\n      dialogFormVisible: this.dialogShow,\n      internalVisible: false,\n      tags: this.tagsValue,\n    };\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit(\"updateVisible\", val);\n        console.log(123);\n        this.$nextTick(() => {\n          for (let i = 0; i < this.$refs.multipleTable.length; i++) {\n            this.$refs.memberTables[i].clearSelection();\n            this.tags.forEach((item) => {\n              this.memberList.forEach((subItem) => {\n                if (item.id === subItem.id) {\n                  this.$refs.memberTables[i].toggleRowSelection(subItem, true);\n                }\n              });\n            });\n          }\n          /*this.$refs.memberTables.clearSelection();\n          this.tags.forEach((item) => {\n            this.memberList.forEach((subItem) => {\n              if (item.id === subItem.id) {\n                this.$refs.memberTables.toggleRowSelection(subItem, true);\n              }\n            });\n          });*/\n        });\n      },\n    },\n  },\n  methods: {\n    // table選擇框\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n      this.$emit(\"selected-user\", val);\n    },\n    // 確認按鈕\n    confirmButton() {\n      this.tags = this.selectTags;\n      const rows = this.tags;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", rows);\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n    },\n  },\n  watch: {\n    dialogShow(val) {\n      this.dialogFormVisible = val\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}