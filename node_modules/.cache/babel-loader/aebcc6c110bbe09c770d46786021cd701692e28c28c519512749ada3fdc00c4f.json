{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, toRef } from 'vue';\nimport { useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props) {\n  const uncontrolledValueRef = ref(props.defaultValue);\n  const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n  const optionsMapRef = computed(() => {\n    const map = new Map();\n    (props.options || []).forEach(opt => map.set(opt.value, opt));\n    return map;\n  });\n  const targetValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n  const targetOptionsRef = computed(() => {\n    const optionMap = optionsMapRef.value;\n    const targetOptions = [];\n    (mergedValueRef.value || []).forEach(v => {\n      const option = optionMap.get(v);\n      if (option) {\n        targetOptions.push(option);\n      }\n    });\n    return targetOptions;\n  });\n  const srcPatternRef = ref('');\n  const tgtPatternRef = ref('');\n  const mergedSrcFilterableRef = computed(() => {\n    return props.sourceFilterable || !!props.filterable;\n  });\n  const filteredSrcOptionsRef = computed(() => {\n    if (!mergedSrcFilterableRef.value) return props.options;\n    const {\n      filter\n    } = props;\n    return props.options.filter(opt => filter(srcPatternRef.value, opt, 'source'));\n  });\n  const filteredTgtOptionsRef = computed(() => {\n    if (!props.targetFilterable) return targetOptionsRef.value;\n    const {\n      filter\n    } = props;\n    return targetOptionsRef.value.filter(opt => filter(tgtPatternRef.value, opt, 'target'));\n  });\n  const mergedValueSetRef = computed(() => {\n    const {\n      value\n    } = mergedValueRef;\n    if (value === null) return new Set();\n    return new Set(value);\n  });\n  const valueSetForCheckAllRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredSrcOptionsRef.value.forEach(option => {\n      if (!option.disabled && !values.has(option.value)) {\n        values.add(option.value);\n      }\n    });\n    return values;\n  });\n  const valueSetForUncheckAllRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredSrcOptionsRef.value.forEach(option => {\n      if (!option.disabled && values.has(option.value)) {\n        values.delete(option.value);\n      }\n    });\n    return values;\n  });\n  const valueSetForClearRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredTgtOptionsRef.value.forEach(option => {\n      if (!option.disabled) {\n        values.delete(option.value);\n      }\n    });\n    return values;\n  });\n  const canNotSelectAnythingRef = computed(() => {\n    return filteredSrcOptionsRef.value.every(option => option.disabled);\n  });\n  const allCheckedRef = computed(() => {\n    if (!filteredSrcOptionsRef.value.length) {\n      return false;\n    }\n    const mergedValueSet = mergedValueSetRef.value;\n    return filteredSrcOptionsRef.value.every(option => option.disabled || mergedValueSet.has(option.value));\n  });\n  const canBeClearedRef = computed(() => {\n    return filteredTgtOptionsRef.value.some(option => !option.disabled);\n  });\n  function handleSrcFilterUpdateValue(value) {\n    srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n  function handleTgtFilterUpdateValue(value) {\n    tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n  return {\n    uncontrolledValueRef,\n    mergedValueRef,\n    targetValueSetRef,\n    valueSetForCheckAllRef,\n    valueSetForUncheckAllRef,\n    valueSetForClearRef,\n    filteredTgtOptionsRef,\n    filteredSrcOptionsRef,\n    targetOptionsRef,\n    canNotSelectAnythingRef,\n    canBeClearedRef,\n    allCheckedRef,\n    srcPatternRef,\n    tgtPatternRef,\n    mergedSrcFilterableRef,\n    handleSrcFilterUpdateValue,\n    handleTgtFilterUpdateValue\n  };\n}","map":{"version":3,"names":["ref","computed","toRef","useMergedState","useTransferData","props","uncontrolledValueRef","defaultValue","mergedValueRef","optionsMapRef","map","Map","options","forEach","opt","set","value","targetValueSetRef","Set","targetOptionsRef","optionMap","targetOptions","v","option","get","push","srcPatternRef","tgtPatternRef","mergedSrcFilterableRef","sourceFilterable","filterable","filteredSrcOptionsRef","filter","filteredTgtOptionsRef","targetFilterable","mergedValueSetRef","valueSetForCheckAllRef","values","disabled","has","add","valueSetForUncheckAllRef","delete","valueSetForClearRef","canNotSelectAnythingRef","every","allCheckedRef","length","mergedValueSet","canBeClearedRef","some","handleSrcFilterUpdateValue","handleTgtFilterUpdateValue"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/transfer/src/use-transfer-data.js"],"sourcesContent":["import { ref, computed, toRef } from 'vue';\nimport { useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props) {\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const optionsMapRef = computed(() => {\n        const map = new Map();\n        (props.options || []).forEach((opt) => map.set(opt.value, opt));\n        return map;\n    });\n    const targetValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n    const targetOptionsRef = computed(() => {\n        const optionMap = optionsMapRef.value;\n        const targetOptions = [];\n        (mergedValueRef.value || []).forEach((v) => {\n            const option = optionMap.get(v);\n            if (option) {\n                targetOptions.push(option);\n            }\n        });\n        return targetOptions;\n    });\n    const srcPatternRef = ref('');\n    const tgtPatternRef = ref('');\n    const mergedSrcFilterableRef = computed(() => {\n        return props.sourceFilterable || !!props.filterable;\n    });\n    const filteredSrcOptionsRef = computed(() => {\n        if (!mergedSrcFilterableRef.value)\n            return props.options;\n        const { filter } = props;\n        return props.options.filter((opt) => filter(srcPatternRef.value, opt, 'source'));\n    });\n    const filteredTgtOptionsRef = computed(() => {\n        if (!props.targetFilterable)\n            return targetOptionsRef.value;\n        const { filter } = props;\n        return targetOptionsRef.value.filter((opt) => filter(tgtPatternRef.value, opt, 'target'));\n    });\n    const mergedValueSetRef = computed(() => {\n        const { value } = mergedValueRef;\n        if (value === null)\n            return new Set();\n        return new Set(value);\n    });\n    const valueSetForCheckAllRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredSrcOptionsRef.value.forEach((option) => {\n            if (!option.disabled && !values.has(option.value)) {\n                values.add(option.value);\n            }\n        });\n        return values;\n    });\n    const valueSetForUncheckAllRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredSrcOptionsRef.value.forEach((option) => {\n            if (!option.disabled && values.has(option.value)) {\n                values.delete(option.value);\n            }\n        });\n        return values;\n    });\n    const valueSetForClearRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredTgtOptionsRef.value.forEach((option) => {\n            if (!option.disabled) {\n                values.delete(option.value);\n            }\n        });\n        return values;\n    });\n    const canNotSelectAnythingRef = computed(() => {\n        return filteredSrcOptionsRef.value.every((option) => option.disabled);\n    });\n    const allCheckedRef = computed(() => {\n        if (!filteredSrcOptionsRef.value.length) {\n            return false;\n        }\n        const mergedValueSet = mergedValueSetRef.value;\n        return filteredSrcOptionsRef.value.every((option) => option.disabled || mergedValueSet.has(option.value));\n    });\n    const canBeClearedRef = computed(() => {\n        return filteredTgtOptionsRef.value.some((option) => !option.disabled);\n    });\n    function handleSrcFilterUpdateValue(value) {\n        srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    function handleTgtFilterUpdateValue(value) {\n        tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    return {\n        uncontrolledValueRef,\n        mergedValueRef,\n        targetValueSetRef,\n        valueSetForCheckAllRef,\n        valueSetForUncheckAllRef,\n        valueSetForClearRef,\n        filteredTgtOptionsRef,\n        filteredSrcOptionsRef,\n        targetOptionsRef,\n        canNotSelectAnythingRef,\n        canBeClearedRef,\n        allCheckedRef,\n        srcPatternRef,\n        tgtPatternRef,\n        mergedSrcFilterableRef,\n        handleSrcFilterUpdateValue,\n        handleTgtFilterUpdateValue\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}