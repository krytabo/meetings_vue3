{"ast":null,"code":"import Vue from \"vue\";\nimport VeeValidate, { Validator } from \"vee-validate\";\nimport zh from \"vee-validate/dist/locale/zh_TW\"; // 引入中文文件\nValidator.addLocale(zh);\nconst config = {\n  locale: \"zh_CN\",\n  fieldsBagName: \"fieldBags\"\n};\nVue.use(VeeValidate, config);\n\n// 自定义validate\nconst dictionary = {\n  zh_CN: {\n    messages: {\n      required: field => \"请\" + field,\n      number: field => field + \"必须为数值\",\n      url: () => \"请输入正确格式的服务器地址\",\n      ip: () => \"请输入正确的IP地址\"\n    },\n    attributes: {\n      ip: \"输入IP地址\",\n      httpPort: \"输入HTTP端口\",\n      userName: \"输入用户昵称\",\n      mobile: \"输入手机号码\",\n      emailAdd: \"输入邮件地址\",\n      authCode: \"输入您收到的验证码\",\n      loginPwd: \"输入登录密码（6~18位\",\n      traderpwd: \"输入交易密码（6~18位\",\n      recommender: \"输入您的推荐人\",\n      isSee: \"阅读用户协议，并同意\",\n      npwdLog: \"输入新的登录密码\",\n      qrwdLog: \"输入确认登录密码\"\n    }\n  }\n};\nValidator.updateDictionary(dictionary);\n\n// 1.IPV4地址\nValidator.extend(\"ipAddr\", {\n  messages: {\n    zh_CN: field => \"请输入正确的IPV4地址\"\n  },\n  validate: value => {\n    return /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/.test(value);\n  }\n});\n\n// 2.端口【0~65535】\nValidator.extend(\"port\", {\n  messages: {\n    zh_CN: field => \"请输入正确格式的端口号\"\n  },\n  validate: value => {\n    return /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/.test(value);\n  }\n});\n\n// 3.用户昵称\nValidator.extend(\"name\", {\n  messages: {\n    zh_CN: field => \"用户昵称不允许特殊符号\"\n  },\n  validate: value => {\n    return /^[\\u4e00-\\u9fa5A-Za-z0-9]*$/.test(value);\n  }\n});\n\n// 4.用户昵称\nValidator.extend(\"phone\", {\n  messages: {\n    zh_CN: field => \"手机号格式不正确\"\n  },\n  validate: value => {\n    return /^1[2-9]\\d{9}$/.test(value);\n  }\n});\n\n// 5.邮箱\nValidator.extend(\"email\", {\n  messages: {\n    zh_CN: field => \"邮箱格式不正确\"\n  },\n  validate: value => {\n    return /^[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$/.test(value);\n  }\n});\n\n// 6.验证码\nValidator.extend(\"code\", {\n  messages: {\n    zh_CN: field => \"验证码格式不正确\"\n  },\n  validate: value => {\n    return /^[0-9]*$/.test(value);\n  }\n});\n\n// 6.登录密码\nValidator.extend(\"logpwd\", {\n  messages: {\n    zh_CN: field => \"登录密码格式不正确\"\n  },\n  validate: value => {\n    return /^\\S{6,18}$/.test(value);\n  }\n});\n\n// 7.交易密码\nValidator.extend(\"tradpwd\", {\n  messages: {\n    zh_CN: field => \"交易密码格式不正确\"\n  },\n  validate: value => {\n    return /^\\S{6,18}$/.test(value);\n  }\n});\n\n// 8.推荐人\nValidator.extend(\"recom\", {\n  messages: {\n    zh_CN: field => \"推荐人格式不正确\"\n  },\n  validate: value => {\n    return /^[^\\u4e00-\\u9fa5]{0,}$/.test(value);\n  }\n});\n\n// 9.用户协议\nValidator.extend(\"see\", {\n  messages: {\n    zh_CN: field => \"请阅读用户协议，并同意\"\n  },\n  validate: value => {\n    return true;\n  }\n});\n\n// 10.忘记密码，新的登录密码\nValidator.extend(\"npwd\", {\n  messages: {\n    zh_CN: field => \"登录密码格式不正确[6~18位]\"\n  },\n  validate: value => {\n    return /^\\S{6,18}$/.test(value);\n  }\n});\n\n// 11.忘记密码，确认新的登录密码\nValidator.extend(\"qrwd\", {\n  messages: {\n    zh_CN: field => \"登录密码格式不正确[6~18位]\"\n  },\n  validate: value => {\n    return /^\\S{6,18}$/.test(value);\n  }\n});","map":{"version":3,"names":["Vue","VeeValidate","Validator","zh","addLocale","config","locale","fieldsBagName","use","dictionary","zh_CN","messages","required","field","number","url","ip","attributes","httpPort","userName","mobile","emailAdd","authCode","loginPwd","traderpwd","recommender","isSee","npwdLog","qrwdLog","updateDictionary","extend","validate","value","test"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/common/validate.js"],"sourcesContent":["import Vue from \"vue\";\nimport VeeValidate, { Validator } from \"vee-validate\";\nimport zh from \"vee-validate/dist/locale/zh_TW\"; // 引入中文文件\nValidator.addLocale(zh);\nconst config = {\n  locale: \"zh_CN\",\n  fieldsBagName: \"fieldBags\",\n};\nVue.use(VeeValidate, config);\n\n// 自定义validate\nconst dictionary = {\n  zh_CN: {\n    messages: {\n      required: (field) => \"请\" + field,\n      number: (field) => field + \"必须为数值\",\n      url: () => \"请输入正确格式的服务器地址\",\n      ip: () => \"请输入正确的IP地址\",\n    },\n    attributes: {\n      ip: \"输入IP地址\",\n      httpPort: \"输入HTTP端口\",\n      userName: \"输入用户昵称\",\n      mobile: \"输入手机号码\",\n      emailAdd: \"输入邮件地址\",\n      authCode: \"输入您收到的验证码\",\n      loginPwd: \"输入登录密码（6~18位\",\n      traderpwd: \"输入交易密码（6~18位\",\n      recommender: \"输入您的推荐人\",\n      isSee: \"阅读用户协议，并同意\",\n      npwdLog: \"输入新的登录密码\",\n      qrwdLog: \"输入确认登录密码\",\n    },\n  },\n};\nValidator.updateDictionary(dictionary);\n\n// 1.IPV4地址\nValidator.extend(\"ipAddr\", {\n  messages: {\n    zh_CN: (field) => \"请输入正确的IPV4地址\",\n  },\n  validate: (value) => {\n    return /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/.test(value);\n  },\n});\n\n// 2.端口【0~65535】\nValidator.extend(\"port\", {\n  messages: {\n    zh_CN: (field) => \"请输入正确格式的端口号\",\n  },\n  validate: (value) => {\n    return /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/.test(value);\n  },\n});\n\n// 3.用户昵称\nValidator.extend(\"name\", {\n  messages: {\n    zh_CN: (field) => \"用户昵称不允许特殊符号\",\n  },\n  validate: (value) => {\n    return /^[\\u4e00-\\u9fa5A-Za-z0-9]*$/.test(value);\n  },\n});\n\n// 4.用户昵称\nValidator.extend(\"phone\", {\n  messages: {\n    zh_CN: (field) => \"手机号格式不正确\",\n  },\n  validate: (value) => {\n    return /^1[2-9]\\d{9}$/.test(value);\n  },\n});\n\n// 5.邮箱\nValidator.extend(\"email\", {\n  messages: {\n    zh_CN: (field) => \"邮箱格式不正确\",\n  },\n  validate: (value) => {\n    return /^[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$/.test(value);\n  },\n});\n\n// 6.验证码\nValidator.extend(\"code\", {\n  messages: {\n    zh_CN: (field) => \"验证码格式不正确\",\n  },\n  validate: (value) => {\n    return /^[0-9]*$/.test(value);\n  },\n});\n\n// 6.登录密码\nValidator.extend(\"logpwd\", {\n  messages: {\n    zh_CN: (field) => \"登录密码格式不正确\",\n  },\n  validate: (value) => {\n    return /^\\S{6,18}$/.test(value);\n  },\n});\n\n// 7.交易密码\nValidator.extend(\"tradpwd\", {\n  messages: {\n    zh_CN: (field) => \"交易密码格式不正确\",\n  },\n  validate: (value) => {\n    return /^\\S{6,18}$/.test(value);\n  },\n});\n\n// 8.推荐人\nValidator.extend(\"recom\", {\n  messages: {\n    zh_CN: (field) => \"推荐人格式不正确\",\n  },\n  validate: (value) => {\n    return /^[^\\u4e00-\\u9fa5]{0,}$/.test(value);\n  },\n});\n\n// 9.用户协议\nValidator.extend(\"see\", {\n  messages: {\n    zh_CN: (field) => \"请阅读用户协议，并同意\",\n  },\n  validate: (value) => {\n    return true;\n  },\n});\n\n// 10.忘记密码，新的登录密码\nValidator.extend(\"npwd\", {\n  messages: {\n    zh_CN: (field) => \"登录密码格式不正确[6~18位]\",\n  },\n  validate: (value) => {\n    return /^\\S{6,18}$/.test(value);\n  },\n});\n\n// 11.忘记密码，确认新的登录密码\nValidator.extend(\"qrwd\", {\n  messages: {\n    zh_CN: (field) => \"登录密码格式不正确[6~18位]\",\n  },\n  validate: (value) => {\n    return /^\\S{6,18}$/.test(value);\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}