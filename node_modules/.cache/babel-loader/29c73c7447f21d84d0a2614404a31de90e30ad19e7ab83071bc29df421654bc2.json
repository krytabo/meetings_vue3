{"ast":null,"code":"import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from 'date-fns/esm';\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from '../utils';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { datePickerInjectionKey } from '../interface';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  defaultCalendarStartTime: Number,\n  defaultCalendarEndTime: Number,\n  bindCalendarMonths: Boolean,\n  actions: {\n    type: Array,\n    default: () => ['clear', 'confirm']\n  }\n});\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type) {\n  var _a, _b;\n  const {\n    isDateDisabledRef,\n    isStartHourDisabledRef,\n    isEndHourDisabledRef,\n    isStartMinuteDisabledRef,\n    isEndMinuteDisabledRef,\n    isStartSecondDisabledRef,\n    isEndSecondDisabledRef,\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef,\n    localeRef,\n    rangesRef,\n    closeOnSelectRef,\n    updateValueOnCloseRef,\n    firstDayOfWeekRef,\n    datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isDateDisabled: isDateDisabledRef,\n    isStartHourDisabled: isStartHourDisabledRef,\n    isEndHourDisabled: isEndHourDisabledRef,\n    isStartMinuteDisabled: isStartMinuteDisabledRef,\n    isEndMinuteDisabled: isEndMinuteDisabledRef,\n    isStartSecondDisabled: isStartSecondDisabledRef,\n    isEndSecondDisabled: isEndSecondDisabledRef,\n    isStartDateInvalid: isStartDateInvalidRef,\n    isEndDateInvalid: isEndDateInvalidRef,\n    isStartTimeInvalid: isStartTimeInvalidRef,\n    isEndTimeInvalid: isEndTimeInvalidRef,\n    isStartValueInvalid: isStartValueInvalidRef,\n    isEndValueInvalid: isEndValueInvalidRef,\n    isRangeInvalid: isRangeInvalidRef\n  };\n  const panelCommon = usePanelCommon(props);\n  const startDatesElRef = ref(null);\n  const endDatesElRef = ref(null);\n  const startYearScrollbarRef = ref(null);\n  const endYearScrollbarRef = ref(null);\n  const startYearVlRef = ref(null);\n  const endYearVlRef = ref(null);\n  const startMonthScrollbarRef = ref(null);\n  const endMonthScrollbarRef = ref(null);\n  const {\n    value\n  } = props;\n  const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : Array.isArray(value) && typeof value[0] === 'number' ? value[0] : Date.now();\n  const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n  const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : Array.isArray(value) && typeof value[1] === 'number' ? value[1] : getTime(addMonths(defaultCalendarStartTime, 1)));\n  adjustCalendarTimes(true);\n  const nowRef = ref(Date.now());\n  const isSelectingRef = ref(false);\n  const memorizedStartDateTimeRef = ref(0);\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const startDateInput = ref(Array.isArray(value) ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  const endDateInputRef = ref(Array.isArray(value) ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  // derived computed\n  const selectingPhaseRef = computed(() => {\n    if (isSelectingRef.value) return 'end';else return 'start';\n  });\n  const startDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const endDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const weekdaysRef = computed(() => {\n    return startDateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const startCalendarMonthRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarMonthRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startCalendarYearRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarYearRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[0];\n    return null;\n  });\n  const endTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[1];\n    return null;\n  });\n  const shortcutsRef = computed(() => {\n    const {\n      shortcuts\n    } = props;\n    return shortcuts || rangesRef.value;\n  });\n  const startYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value);\n  });\n  const endYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value);\n  });\n  const startQuarterArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n  });\n  const endQuarterArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n  });\n  const startMonthArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n  });\n  const endMonthArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && Array.isArray(value)) {\n      const [startMoment, endMoment] = value;\n      startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      if (!isSelectingRef.value) {\n        syncCalendarTimeWithValue(value);\n      }\n    } else {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n    }\n  });\n  function handleCalendarChange(value, oldValue) {\n    if (type === 'daterange' || type === 'datetimerange') {\n      if (getYear(value) !== getYear(oldValue) || getMonth(value) !== getMonth(oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  }\n  watch(startCalendarDateTimeRef, handleCalendarChange);\n  watch(endCalendarDateTimeRef, handleCalendarChange);\n  // change calendar\n  function adjustCalendarTimes(byStartCalendarTime) {\n    const startTime = startOfMonth(startCalendarDateTimeRef.value);\n    const endTime = startOfMonth(endCalendarDateTimeRef.value);\n    if (props.bindCalendarMonths || startTime >= endTime) {\n      if (byStartCalendarTime) {\n        endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n      } else {\n        startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n      }\n    }\n  }\n  function startCalendarNextYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarNextMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(true);\n  }\n  function endCalendarNextYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarNextMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(false);\n  }\n  function onUpdateStartCalendarValue(value) {\n    startCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(true);\n  }\n  function onUpdateEndCalendarValue(value) {\n    endCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(false);\n  }\n  // The function is used on date panel, not the date-picker value validation\n  function mergedIsDateDisabled(ts) {\n    const isDateDisabled = isDateDisabledRef.value;\n    if (!isDateDisabled) return false;\n    if (!Array.isArray(props.value)) return isDateDisabled(ts, 'start', null);\n    if (selectingPhaseRef.value === 'start') {\n      // before you really start to select\n      return isDateDisabled(ts, 'start', null);\n    } else {\n      const {\n        value: memorizedStartDateTime\n      } = memorizedStartDateTimeRef;\n      // after you starting to select\n      if (ts < memorizedStartDateTimeRef.value) {\n        return isDateDisabled(ts, 'start', [memorizedStartDateTime, memorizedStartDateTime]);\n      } else {\n        return isDateDisabled(ts, 'end', [memorizedStartDateTime, memorizedStartDateTime]);\n      }\n    }\n  }\n  function syncCalendarTimeWithValue(value) {\n    if (value === null) return;\n    const [startMoment, endMoment] = value;\n    startCalendarDateTimeRef.value = startMoment;\n    if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n    } else {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n    }\n  }\n  // for daterange & datetimerange\n  function handleDateClick(dateItem) {\n    if (!isSelectingRef.value) {\n      isSelectingRef.value = true;\n      memorizedStartDateTimeRef.value = dateItem.ts;\n      changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n    } else {\n      isSelectingRef.value = false;\n      const {\n        value\n      } = props;\n      if (props.panel && Array.isArray(value)) {\n        changeStartEndTime(value[0], value[1], 'done');\n      } else {\n        if (closeOnSelectRef.value && type === 'daterange') {\n          if (updateValueOnCloseRef.value) {\n            closeCalendar();\n          } else {\n            handleConfirmClick();\n          }\n        }\n      }\n    }\n  }\n  function handleDateMouseEnter(dateItem) {\n    if (isSelectingRef.value) {\n      if (mergedIsDateDisabled(dateItem.ts)) return;\n      if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n        changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n      } else {\n        changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n      }\n    }\n  }\n  function handleConfirmClick() {\n    if (isRangeInvalidRef.value) {\n      return;\n    }\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n  function closeCalendar() {\n    isSelectingRef.value = false;\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n  function changeStartDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n    }\n  }\n  function changeEndDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n    }\n  }\n  function changeStartEndTime(startTime, endTime, source) {\n    if (typeof startTime !== 'number') {\n      startTime = getTime(startTime);\n    }\n    if (source !== 'shortcutPreview') {\n      let startDefaultTime;\n      let endDefaultTime;\n      if (type === 'datetimerange') {\n        const {\n          defaultTime\n        } = props;\n        if (Array.isArray(defaultTime)) {\n          startDefaultTime = getDefaultTime(defaultTime[0]);\n          endDefaultTime = getDefaultTime(defaultTime[1]);\n        } else {\n          startDefaultTime = getDefaultTime(defaultTime);\n          endDefaultTime = startDefaultTime;\n        }\n      }\n      if (startDefaultTime) {\n        startTime = getTime(set(startTime, startDefaultTime));\n      }\n      if (endDefaultTime) {\n        endTime = getTime(set(endTime, endDefaultTime));\n      }\n    }\n    panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n  }\n  function sanitizeValue(datetime) {\n    if (type === 'datetimerange') {\n      return getTime(startOfSecond(datetime));\n    } else if (type === 'monthrange') {\n      return getTime(startOfMonth(datetime));\n    } else {\n      // daterange\n      return getTime(startOfDay(datetime));\n    }\n  }\n  function handleStartDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (!props.value) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      startDateInput.value = value;\n    }\n  }\n  function handleEndDateInput(value) {\n    /** strict check when input */\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (props.value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      endDateInputRef.value = value;\n    }\n  }\n  function handleStartDateInputBlur() {\n    const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function handleEndDateInputBlur() {\n    const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function refreshDisplayDateString(times) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    const {\n      value\n    } = props;\n    if (value === null || !Array.isArray(value)) {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n      return;\n    }\n    if (times === undefined) {\n      times = value;\n    }\n    startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n  function handleStartTimePickerChange(value) {\n    if (value === null) return;\n    changeStartDateTime(value);\n  }\n  function handleEndTimePickerChange(value) {\n    if (value === null) return;\n    changeEndDateTime(value);\n  }\n  function handleRangeShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n  }\n  function handleRangeShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n  function justifyColumnsScrollState(value, type) {\n    const mergedValue = value === undefined ? props.value : value;\n    if (value === undefined || type === 'start') {\n      if (startMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[0]);\n        startMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (startYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[0])) - START_YEAR;\n        startYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n    if (value === undefined || type === 'end') {\n      if (endMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[1]);\n        endMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (endYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[1])) - START_YEAR;\n        endYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n  }\n  // only for monthrange\n  function handleColItemClick(dateItem, clickType) {\n    const {\n      value\n    } = props;\n    const noCurrentValue = !Array.isArray(value);\n    const itemTs = dateItem.type === 'year' && type !== 'yearrange' ? noCurrentValue ? set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(new Date()) : new Date())\n    }).valueOf() : set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(value[clickType === 'start' ? 0 : 1]) : value[clickType === 'start' ? 0 : 1])\n    }).valueOf() : dateItem.ts;\n    if (noCurrentValue) {\n      const partialValue = sanitizeValue(itemTs);\n      const nextValue = [partialValue, partialValue];\n      panelCommon.doUpdateValue(nextValue, props.panel);\n      justifyColumnsScrollState(nextValue, 'start');\n      justifyColumnsScrollState(nextValue, 'end');\n      panelCommon.disableTransitionOneTick();\n      return;\n    }\n    const nextValue = [value[0], value[1]];\n    let otherPartsChanged = false;\n    if (clickType === 'start') {\n      nextValue[0] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[1] = nextValue[0];\n        otherPartsChanged = true;\n      }\n    } else {\n      nextValue[1] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[0] = nextValue[1];\n        otherPartsChanged = true;\n      }\n    }\n    panelCommon.doUpdateValue(nextValue, props.panel);\n    switch (type) {\n      case 'monthrange':\n      case 'quarterrange':\n        panelCommon.disableTransitionOneTick();\n        if (otherPartsChanged) {\n          justifyColumnsScrollState(nextValue, 'start');\n          justifyColumnsScrollState(nextValue, 'end');\n        } else {\n          justifyColumnsScrollState(nextValue, clickType);\n        }\n        break;\n      case 'yearrange':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(nextValue, 'start');\n        justifyColumnsScrollState(nextValue, 'end');\n    }\n  }\n  function handleStartYearVlScroll() {\n    var _a;\n    (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function handleEndYearVlScroll() {\n    var _a;\n    (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function virtualListContainer(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n    } else {\n      return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef;\n    }\n  }\n  function virtualListContent(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n    } else {\n      return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef;\n    }\n  }\n  const childComponentRefs = {\n    startYearVlRef,\n    endYearVlRef,\n    startMonthScrollbarRef,\n    endMonthScrollbarRef,\n    startYearScrollbarRef,\n    endYearScrollbarRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    startDatesElRef,\n    endDatesElRef,\n    handleDateClick,\n    handleColItemClick,\n    handleDateMouseEnter,\n    handleConfirmClick,\n    startCalendarPrevYear,\n    startCalendarPrevMonth,\n    startCalendarNextYear,\n    startCalendarNextMonth,\n    endCalendarPrevYear,\n    endCalendarPrevMonth,\n    endCalendarNextMonth,\n    endCalendarNextYear,\n    mergedIsDateDisabled,\n    changeStartEndTime,\n    ranges: rangesRef,\n    startCalendarMonth: startCalendarMonthRef,\n    startCalendarYear: startCalendarYearRef,\n    endCalendarMonth: endCalendarMonthRef,\n    endCalendarYear: endCalendarYearRef,\n    weekdays: weekdaysRef,\n    startDateArray: startDateArrayRef,\n    endDateArray: endDateArrayRef,\n    startYearArray: startYearArrayRef,\n    startMonthArray: startMonthArrayRef,\n    startQuarterArray: startQuarterArrayRef,\n    endYearArray: endYearArrayRef,\n    endMonthArray: endMonthArrayRef,\n    endQuarterArray: endQuarterArrayRef,\n    isSelecting: isSelectingRef,\n    handleRangeShortcutMouseenter,\n    handleRangeShortcutClick\n  }, panelCommon), validation), childComponentRefs), {\n    // datetimerangeonly\n    startDateDisplayString: startDateInput,\n    endDateInput: endDateInputRef,\n    timePickerSize: panelCommon.timePickerSize,\n    startTimeValue: startTimeValueRef,\n    endTimeValue: endTimeValueRef,\n    datePickerSlots,\n    shortcuts: shortcutsRef,\n    startCalendarDateTime: startCalendarDateTimeRef,\n    endCalendarDateTime: endCalendarDateTimeRef,\n    justifyColumnsScrollState,\n    handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus,\n    handleStartTimePickerChange,\n    handleEndTimePickerChange,\n    handleStartDateInput,\n    handleStartDateInputBlur,\n    handleEndDateInput,\n    handleEndDateInputBlur,\n    handleStartYearVlScroll,\n    handleEndYearVlScroll,\n    virtualListContainer,\n    virtualListContent,\n    onUpdateStartCalendarValue,\n    onUpdateEndCalendarValue\n  });\n}\nexport { useDualCalendar, useDualCalendarProps };","map":{"version":3,"names":["inject","computed","watch","ref","addMonths","format","getYear","getMonth","startOfMonth","isValid","startOfSecond","startOfDay","set","getDate","getTime","startOfQuarter","dateArray","strictParse","yearArray","monthArray","getDefaultTime","pluckValueFromRange","quarterArray","usePanelCommon","usePanelCommonProps","datePickerInjectionKey","MONTH_ITEM_HEIGHT","START_YEAR","useDualCalendarProps","Object","assign","defaultCalendarStartTime","Number","defaultCalendarEndTime","bindCalendarMonths","Boolean","actions","type","Array","default","useDualCalendar","props","_a","_b","isDateDisabledRef","isStartHourDisabledRef","isEndHourDisabledRef","isStartMinuteDisabledRef","isEndMinuteDisabledRef","isStartSecondDisabledRef","isEndSecondDisabledRef","isStartDateInvalidRef","isEndDateInvalidRef","isStartTimeInvalidRef","isEndTimeInvalidRef","isStartValueInvalidRef","isEndValueInvalidRef","isRangeInvalidRef","localeRef","rangesRef","closeOnSelectRef","updateValueOnCloseRef","firstDayOfWeekRef","datePickerSlots","validation","isDateDisabled","isStartHourDisabled","isEndHourDisabled","isStartMinuteDisabled","isEndMinuteDisabled","isStartSecondDisabled","isEndSecondDisabled","isStartDateInvalid","isEndDateInvalid","isStartTimeInvalid","isEndTimeInvalid","isStartValueInvalid","isEndValueInvalid","isRangeInvalid","panelCommon","startDatesElRef","endDatesElRef","startYearScrollbarRef","endYearScrollbarRef","startYearVlRef","endYearVlRef","startMonthScrollbarRef","endMonthScrollbarRef","value","isArray","Date","now","startCalendarDateTimeRef","endCalendarDateTimeRef","adjustCalendarTimes","nowRef","isSelectingRef","memorizedStartDateTimeRef","mergedDateFormatRef","dateFormat","startDateInput","dateFnsOptions","endDateInputRef","selectingPhaseRef","startDateArrayRef","firstDayOfWeek","endDateArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","startCalendarMonthRef","monthFormat","endCalendarMonthRef","startCalendarYearRef","yearFormat","endCalendarYearRef","startTimeValueRef","endTimeValueRef","shortcutsRef","shortcuts","startYearArrayRef","endYearArrayRef","startQuarterArrayRef","startValue","endQuarterArrayRef","endValue","startMonthArrayRef","endMonthArrayRef","startMoment","endMoment","syncCalendarTimeWithValue","handleCalendarChange","oldValue","disableTransitionOneTick","byStartCalendarTime","startTime","endTime","startCalendarNextYear","startCalendarPrevYear","startCalendarNextMonth","startCalendarPrevMonth","endCalendarNextYear","endCalendarPrevYear","endCalendarNextMonth","endCalendarPrevMonth","onUpdateStartCalendarValue","onUpdateEndCalendarValue","mergedIsDateDisabled","memorizedStartDateTime","handleDateClick","changeStartEndTime","panel","closeCalendar","handleConfirmClick","handleDateMouseEnter","doConfirm","active","doClose","changeStartDateTime","time","doUpdateValue","Math","max","changeEndDateTime","min","source","startDefaultTime","endDefaultTime","defaultTime","sanitizeValue","datetime","handleStartDateInput","date","newValue","year","month","handleEndDateInput","handleStartDateInputBlur","refreshDisplayDateString","handleEndDateInputBlur","times","undefined","handleStartTimePickerChange","handleEndTimePickerChange","handleRangeShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleRangeShortcutClick","clearPendingValue","justifyColumnsScrollState","mergedValue","monthIndex","scrollTo","debounce","index","elSize","yearIndex","handleColItemClick","clickType","noCurrentValue","itemTs","valueOf","partialValue","nextValue","otherPartsChanged","handleStartYearVlScroll","sync","handleEndYearVlScroll","virtualListContainer","listElRef","virtualListContent","itemsElRef","childComponentRefs","ranges","startCalendarMonth","startCalendarYear","endCalendarMonth","endCalendarYear","weekdays","startDateArray","endDateArray","startYearArray","startMonthArray","startQuarterArray","endYearArray","endMonthArray","endQuarterArray","isSelecting","startDateDisplayString","endDateInput","timePickerSize","startTimeValue","endTimeValue","startCalendarDateTime","endCalendarDateTime","handleFocusDetectorFocus"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/date-picker/src/panel/use-dual-calendar.js"],"sourcesContent":["import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from 'date-fns/esm';\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from '../utils';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { datePickerInjectionKey } from '../interface';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { defaultCalendarStartTime: Number, defaultCalendarEndTime: Number, bindCalendarMonths: Boolean, actions: {\n        type: Array,\n        default: () => ['clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type) {\n    var _a, _b;\n    const { isDateDisabledRef, isStartHourDisabledRef, isEndHourDisabledRef, isStartMinuteDisabledRef, isEndMinuteDisabledRef, isStartSecondDisabledRef, isEndSecondDisabledRef, isStartDateInvalidRef, isEndDateInvalidRef, isStartTimeInvalidRef, isEndTimeInvalidRef, isStartValueInvalidRef, isEndValueInvalidRef, isRangeInvalidRef, localeRef, rangesRef, closeOnSelectRef, updateValueOnCloseRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isDateDisabled: isDateDisabledRef,\n        isStartHourDisabled: isStartHourDisabledRef,\n        isEndHourDisabled: isEndHourDisabledRef,\n        isStartMinuteDisabled: isStartMinuteDisabledRef,\n        isEndMinuteDisabled: isEndMinuteDisabledRef,\n        isStartSecondDisabled: isStartSecondDisabledRef,\n        isEndSecondDisabled: isEndSecondDisabledRef,\n        isStartDateInvalid: isStartDateInvalidRef,\n        isEndDateInvalid: isEndDateInvalidRef,\n        isStartTimeInvalid: isStartTimeInvalidRef,\n        isEndTimeInvalid: isEndTimeInvalidRef,\n        isStartValueInvalid: isStartValueInvalidRef,\n        isEndValueInvalid: isEndValueInvalidRef,\n        isRangeInvalid: isRangeInvalidRef\n    };\n    const panelCommon = usePanelCommon(props);\n    const startDatesElRef = ref(null);\n    const endDatesElRef = ref(null);\n    const startYearScrollbarRef = ref(null);\n    const endYearScrollbarRef = ref(null);\n    const startYearVlRef = ref(null);\n    const endYearVlRef = ref(null);\n    const startMonthScrollbarRef = ref(null);\n    const endMonthScrollbarRef = ref(null);\n    const { value } = props;\n    const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : (Array.isArray(value) && typeof value[0] === 'number'\n        ? value[0]\n        : Date.now());\n    const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n    const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : (Array.isArray(value) && typeof value[1] === 'number'\n        ? value[1]\n        : getTime(addMonths(defaultCalendarStartTime, 1))));\n    adjustCalendarTimes(true);\n    const nowRef = ref(Date.now());\n    const isSelectingRef = ref(false);\n    const memorizedStartDateTimeRef = ref(0);\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const startDateInput = ref(Array.isArray(value)\n        ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    const endDateInputRef = ref(Array.isArray(value)\n        ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    // derived computed\n    const selectingPhaseRef = computed(() => {\n        if (isSelectingRef.value)\n            return 'end';\n        else\n            return 'start';\n    });\n    const startDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const endDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const weekdaysRef = computed(() => {\n        return startDateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const startCalendarMonthRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarMonthRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startCalendarYearRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarYearRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[0];\n        return null;\n    });\n    const endTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[1];\n        return null;\n    });\n    const shortcutsRef = computed(() => {\n        const { shortcuts } = props;\n        return shortcuts || rangesRef.value;\n    });\n    const startYearArrayRef = computed(() => {\n        return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value);\n    });\n    const endYearArrayRef = computed(() => {\n        return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value);\n    });\n    const startQuarterArrayRef = computed(() => {\n        const startValue = pluckValueFromRange(props.value, 'start');\n        return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n    });\n    const endQuarterArrayRef = computed(() => {\n        const endValue = pluckValueFromRange(props.value, 'end');\n        return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n    });\n    const startMonthArrayRef = computed(() => {\n        const startValue = pluckValueFromRange(props.value, 'start');\n        return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n    });\n    const endMonthArrayRef = computed(() => {\n        const endValue = pluckValueFromRange(props.value, 'end');\n        return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && Array.isArray(value)) {\n            const [startMoment, endMoment] = value;\n            startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            if (!isSelectingRef.value) {\n                syncCalendarTimeWithValue(value);\n            }\n        }\n        else {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n        }\n    });\n    function handleCalendarChange(value, oldValue) {\n        if (type === 'daterange' || type === 'datetimerange') {\n            if (getYear(value) !== getYear(oldValue) ||\n                getMonth(value) !== getMonth(oldValue)) {\n                panelCommon.disableTransitionOneTick();\n            }\n        }\n    }\n    watch(startCalendarDateTimeRef, handleCalendarChange);\n    watch(endCalendarDateTimeRef, handleCalendarChange);\n    // change calendar\n    function adjustCalendarTimes(byStartCalendarTime) {\n        const startTime = startOfMonth(startCalendarDateTimeRef.value);\n        const endTime = startOfMonth(endCalendarDateTimeRef.value);\n        if (props.bindCalendarMonths || startTime >= endTime) {\n            if (byStartCalendarTime) {\n                endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n            }\n            else {\n                startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n            }\n        }\n    }\n    function startCalendarNextYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarNextMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(true);\n    }\n    function endCalendarNextYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarNextMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(false);\n    }\n    function onUpdateStartCalendarValue(value) {\n        startCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(true);\n    }\n    function onUpdateEndCalendarValue(value) {\n        endCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(false);\n    }\n    // The function is used on date panel, not the date-picker value validation\n    function mergedIsDateDisabled(ts) {\n        const isDateDisabled = isDateDisabledRef.value;\n        if (!isDateDisabled)\n            return false;\n        if (!Array.isArray(props.value))\n            return isDateDisabled(ts, 'start', null);\n        if (selectingPhaseRef.value === 'start') {\n            // before you really start to select\n            return isDateDisabled(ts, 'start', null);\n        }\n        else {\n            const { value: memorizedStartDateTime } = memorizedStartDateTimeRef;\n            // after you starting to select\n            if (ts < memorizedStartDateTimeRef.value) {\n                return isDateDisabled(ts, 'start', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n            else {\n                return isDateDisabled(ts, 'end', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n        }\n    }\n    function syncCalendarTimeWithValue(value) {\n        if (value === null)\n            return;\n        const [startMoment, endMoment] = value;\n        startCalendarDateTimeRef.value = startMoment;\n        if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n        }\n        else {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n        }\n    }\n    // for daterange & datetimerange\n    function handleDateClick(dateItem) {\n        if (!isSelectingRef.value) {\n            isSelectingRef.value = true;\n            memorizedStartDateTimeRef.value = dateItem.ts;\n            changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n        }\n        else {\n            isSelectingRef.value = false;\n            const { value } = props;\n            if (props.panel && Array.isArray(value)) {\n                changeStartEndTime(value[0], value[1], 'done');\n            }\n            else {\n                if (closeOnSelectRef.value && type === 'daterange') {\n                    if (updateValueOnCloseRef.value) {\n                        closeCalendar();\n                    }\n                    else {\n                        handleConfirmClick();\n                    }\n                }\n            }\n        }\n    }\n    function handleDateMouseEnter(dateItem) {\n        if (isSelectingRef.value) {\n            if (mergedIsDateDisabled(dateItem.ts))\n                return;\n            if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n                changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n            }\n            else {\n                changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n            }\n        }\n    }\n    function handleConfirmClick() {\n        if (isRangeInvalidRef.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        isSelectingRef.value = false;\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function changeStartDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], props.panel);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n        }\n    }\n    function changeEndDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], props.panel);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n        }\n    }\n    function changeStartEndTime(startTime, endTime, source) {\n        if (typeof startTime !== 'number') {\n            startTime = getTime(startTime);\n        }\n        if (source !== 'shortcutPreview') {\n            let startDefaultTime;\n            let endDefaultTime;\n            if (type === 'datetimerange') {\n                const { defaultTime } = props;\n                if (Array.isArray(defaultTime)) {\n                    startDefaultTime = getDefaultTime(defaultTime[0]);\n                    endDefaultTime = getDefaultTime(defaultTime[1]);\n                }\n                else {\n                    startDefaultTime = getDefaultTime(defaultTime);\n                    endDefaultTime = startDefaultTime;\n                }\n            }\n            if (startDefaultTime) {\n                startTime = getTime(set(startTime, startDefaultTime));\n            }\n            if (endDefaultTime) {\n                endTime = getTime(set(endTime, endDefaultTime));\n            }\n        }\n        panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n    }\n    function sanitizeValue(datetime) {\n        if (type === 'datetimerange') {\n            return getTime(startOfSecond(datetime));\n        }\n        else if (type === 'monthrange') {\n            return getTime(startOfMonth(datetime));\n        }\n        else {\n            // daterange\n            return getTime(startOfDay(datetime));\n        }\n    }\n    function handleStartDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (!props.value) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            startDateInput.value = value;\n        }\n    }\n    function handleEndDateInput(value) {\n        /** strict check when input */\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            endDateInputRef.value = value;\n        }\n    }\n    function handleStartDateInputBlur() {\n        const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function handleEndDateInputBlur() {\n        const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function refreshDisplayDateString(times) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        const { value } = props;\n        if (value === null || !Array.isArray(value)) {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n            return;\n        }\n        if (times === undefined) {\n            times = value;\n        }\n        startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n        endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleStartTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeStartDateTime(value);\n    }\n    function handleEndTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeEndDateTime(value);\n    }\n    function handleRangeShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n    }\n    function handleRangeShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    function justifyColumnsScrollState(value, type) {\n        const mergedValue = value === undefined ? props.value : value;\n        if (value === undefined || type === 'start') {\n            if (startMonthScrollbarRef.value) {\n                const monthIndex = !Array.isArray(mergedValue)\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue[0]);\n                startMonthScrollbarRef.value.scrollTo({\n                    debounce: false,\n                    index: monthIndex,\n                    elSize: MONTH_ITEM_HEIGHT\n                });\n            }\n            if (startYearVlRef.value) {\n                const yearIndex = (!Array.isArray(mergedValue)\n                    ? getYear(Date.now())\n                    : getYear(mergedValue[0])) - START_YEAR;\n                startYearVlRef.value.scrollTo({ index: yearIndex, debounce: false });\n            }\n        }\n        if (value === undefined || type === 'end') {\n            if (endMonthScrollbarRef.value) {\n                const monthIndex = !Array.isArray(mergedValue)\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue[1]);\n                endMonthScrollbarRef.value.scrollTo({\n                    debounce: false,\n                    index: monthIndex,\n                    elSize: MONTH_ITEM_HEIGHT\n                });\n            }\n            if (endYearVlRef.value) {\n                const yearIndex = (!Array.isArray(mergedValue)\n                    ? getYear(Date.now())\n                    : getYear(mergedValue[1])) - START_YEAR;\n                endYearVlRef.value.scrollTo({ index: yearIndex, debounce: false });\n            }\n        }\n    }\n    // only for monthrange\n    function handleColItemClick(dateItem, clickType) {\n        const { value } = props;\n        const noCurrentValue = !Array.isArray(value);\n        const itemTs = dateItem.type === 'year' && type !== 'yearrange'\n            ? noCurrentValue\n                ? set(dateItem.ts, {\n                    month: getMonth(type === 'quarterrange'\n                        ? startOfQuarter(new Date())\n                        : new Date())\n                }).valueOf()\n                : set(dateItem.ts, {\n                    month: getMonth(type === 'quarterrange'\n                        ? startOfQuarter(value[clickType === 'start' ? 0 : 1])\n                        : value[clickType === 'start' ? 0 : 1])\n                }).valueOf()\n            : dateItem.ts;\n        if (noCurrentValue) {\n            const partialValue = sanitizeValue(itemTs);\n            const nextValue = [partialValue, partialValue];\n            panelCommon.doUpdateValue(nextValue, props.panel);\n            justifyColumnsScrollState(nextValue, 'start');\n            justifyColumnsScrollState(nextValue, 'end');\n            panelCommon.disableTransitionOneTick();\n            return;\n        }\n        const nextValue = [value[0], value[1]];\n        let otherPartsChanged = false;\n        if (clickType === 'start') {\n            nextValue[0] = sanitizeValue(itemTs);\n            if (nextValue[0] > nextValue[1]) {\n                nextValue[1] = nextValue[0];\n                otherPartsChanged = true;\n            }\n        }\n        else {\n            nextValue[1] = sanitizeValue(itemTs);\n            if (nextValue[0] > nextValue[1]) {\n                nextValue[0] = nextValue[1];\n                otherPartsChanged = true;\n            }\n        }\n        panelCommon.doUpdateValue(nextValue, props.panel);\n        switch (type) {\n            case 'monthrange':\n            case 'quarterrange':\n                panelCommon.disableTransitionOneTick();\n                if (otherPartsChanged) {\n                    justifyColumnsScrollState(nextValue, 'start');\n                    justifyColumnsScrollState(nextValue, 'end');\n                }\n                else {\n                    justifyColumnsScrollState(nextValue, clickType);\n                }\n                break;\n            case 'yearrange':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(nextValue, 'start');\n                justifyColumnsScrollState(nextValue, 'end');\n        }\n    }\n    function handleStartYearVlScroll() {\n        var _a;\n        (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function handleEndYearVlScroll() {\n        var _a;\n        (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function virtualListContainer(type) {\n        var _a, _b;\n        if (type === 'start') {\n            return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n        }\n        else {\n            return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef;\n        }\n    }\n    function virtualListContent(type) {\n        var _a, _b;\n        if (type === 'start') {\n            return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n        }\n        else {\n            return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef;\n        }\n    }\n    const childComponentRefs = {\n        startYearVlRef,\n        endYearVlRef,\n        startMonthScrollbarRef,\n        endMonthScrollbarRef,\n        startYearScrollbarRef,\n        endYearScrollbarRef\n    };\n    return Object.assign(Object.assign(Object.assign(Object.assign({ startDatesElRef,\n        endDatesElRef,\n        handleDateClick,\n        handleColItemClick,\n        handleDateMouseEnter,\n        handleConfirmClick,\n        startCalendarPrevYear,\n        startCalendarPrevMonth,\n        startCalendarNextYear,\n        startCalendarNextMonth,\n        endCalendarPrevYear,\n        endCalendarPrevMonth,\n        endCalendarNextMonth,\n        endCalendarNextYear,\n        mergedIsDateDisabled,\n        changeStartEndTime, ranges: rangesRef, startCalendarMonth: startCalendarMonthRef, startCalendarYear: startCalendarYearRef, endCalendarMonth: endCalendarMonthRef, endCalendarYear: endCalendarYearRef, weekdays: weekdaysRef, startDateArray: startDateArrayRef, endDateArray: endDateArrayRef, startYearArray: startYearArrayRef, startMonthArray: startMonthArrayRef, startQuarterArray: startQuarterArrayRef, endYearArray: endYearArrayRef, endMonthArray: endMonthArrayRef, endQuarterArray: endQuarterArrayRef, isSelecting: isSelectingRef, handleRangeShortcutMouseenter,\n        handleRangeShortcutClick }, panelCommon), validation), childComponentRefs), { \n        // datetimerangeonly\n        startDateDisplayString: startDateInput, endDateInput: endDateInputRef, timePickerSize: panelCommon.timePickerSize, startTimeValue: startTimeValueRef, endTimeValue: endTimeValueRef, datePickerSlots, shortcuts: shortcutsRef, startCalendarDateTime: startCalendarDateTimeRef, endCalendarDateTime: endCalendarDateTimeRef, justifyColumnsScrollState, handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus, handleStartTimePickerChange,\n        handleEndTimePickerChange,\n        handleStartDateInput,\n        handleStartDateInputBlur,\n        handleEndDateInput,\n        handleEndDateInputBlur,\n        handleStartYearVlScroll,\n        handleEndYearVlScroll,\n        virtualListContainer,\n        virtualListContent,\n        onUpdateStartCalendarValue,\n        onUpdateEndCalendarValue });\n}\nexport { useDualCalendar, useDualCalendarProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}