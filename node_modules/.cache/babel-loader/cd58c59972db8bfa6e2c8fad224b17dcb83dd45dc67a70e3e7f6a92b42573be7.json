{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"testPage\",\n  data() {\n    return {\n      tags: [{\n        name: \"123\",\n        id: 0\n      }, {\n        id: 1,\n        name: \"222\"\n      }],\n      inputValue: \"\"\n    };\n  },\n  methods: {\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push(inputValue);\n      }\n      this.inputValue = \"\";\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAWA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,CACJ;QACEF,IAAI,EAAE,KAAK;QACXG,EAAE,EAAE;MACN,CAAC,EACD;QACEA,EAAE,EAAE,CAAC;QACLH,IAAI,EAAE;MACR,CAAC,CACF;MACDI,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,CAACC,GAAG,EAAE;MACf,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,IAAI,CAACN,IAAI,CAACO,OAAO,CAACF,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IACDG,kBAAkB,GAAG;MACnB,IAAIN,UAAS,GAAI,IAAI,CAACA,UAAU;MAChC,IAAIA,UAAU,EAAE;QACd,IAAI,CAACF,IAAI,CAACS,IAAI,CAACP,UAAU,CAAC;MAC5B;MACA,IAAI,CAACA,UAAS,GAAI,EAAE;IACtB;EACF,CAAC;EACDQ,OAAO,GAAG,CAAC;AACb,CAAC","names":["name","data","tags","id","inputValue","methods","handleClose","tag","splice","indexOf","handleInputConfirm","push","mounted"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  {{ tags }}\n  <div class=\"flex space-x-2 bg-white px-4 py-2\">\n    <el-tag v-for=\"tag in tags\" :key=\"tag.name\" closable :type=\"tag.type\" @close=\"handleClose(tag)\">\n      {{ tag.name }}\n    </el-tag>\n    <input v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"testPage\",\n  data() {\n    return {\n      tags: [\n        {\n          name: \"123\",\n          id: 0,\n        },\n        {\n          id: 1,\n          name: \"222\",\n        },\n      ],\n      inputValue: \"\",\n    };\n  },\n  methods: {\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push(inputValue);\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {},\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}