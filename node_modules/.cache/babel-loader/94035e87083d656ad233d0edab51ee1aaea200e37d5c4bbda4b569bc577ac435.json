{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {},\n  props: {\n    type: {\n      type: String,\n      default: null\n    },\n    // 可新增\n    allowCreate: {\n      type: Boolean,\n      default: true\n    },\n    // 輸入欄位\n    tagsInput: {\n      type: Boolean,\n      default: true\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: this.tagsValue,\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n      validateState: \"success\"\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then(res => {\n        this.memberList = res.data;\n        //object中新增數值\n        /*for (let stage of this.memberList) {\n          Object.assign(stage, { isSelected: false });\n        }*/\n      });\n    },\n\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.$refs.memberTables.clearSelection();\n        this.tags.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員(驗證)\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm2() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      const rows = this.tags;\n      this.$emit(\"sand-form\", rows);\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n    },\n    // 刪除tag\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n      this.selectTags.splice(this.tags.indexOf(tag), 1);\n    },\n    // input輸入\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\"\n        });\n      }\n      this.inputValue = \"\";\n    },\n    getRowKeys(row) {\n      return row.id;\n    },\n    test() {\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    }\n  },\n  mounted() {\n    this.getApi();\n    this.test();\n  },\n  created() {}\n};","map":{"version":3,"mappings":"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","names":["GenNonDuplicateID","userList","name","components","props","type","String","default","allowCreate","Boolean","tagsInput","rulesOption","tagsValue","Array","data","dialogVisible","tags","inputValue","memberList","selectTags","validateState","methods","getApi","then","res","select","val","JSON","parse","stringify","edit_countersign","$nextTick","$refs","memberTables","clearSelection","forEach","item","subItem","id","toggleRowSelection","memberListDialog_Confirm","length","rows","$emit","memberListDialog_Confirm2","memberListDialog_Cancel","handleClose","tag","splice","indexOf","handleInputConfirm","push","department","getRowKeys","row","test","mounted","created"],"sourceRoot":"","sources":["/Users/elmo/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  <div>\n    <p class=\"text-red-500\">{{ tags }}</p>\n    <div class=\"flex w-full items-center\">\n      <div v-show=\"tagsInput === true\" class=\"relative w-full\">\n        <div class=\"flex h-8 flex-1 items-center space-x-2 rounded border border-gray-200 bg-white px-4 hover:border-gray-300\" :class=\"{ inputError: validateState === 'error' }\">\n          <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable @close=\"handleClose(tag)\">{{ tag.name }}</a-tag>\n          <input v-show=\"allowCreate === true\" v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" @blur=\"handleInputConfirm\" />\n        </div>\n        <p v-show=\"validateState === 'error'\" class=\"absolute text-red-500\" style=\"bottom: -20px\">請選擇對象</p>\n      </div>\n      <el-button :type=\"type\" plain @click=\"edit_countersign\">選擇</el-button>\n    </div>\n    <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n      <div class=\"flax mb-5 space-x-4\">\n        <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\" :row-key=\"getRowKeys\">\n          <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n          <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n          <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n          <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n        </el-table>\n      </div>\n      <div class=\"flex w-full items-center justify-center space-x-2\">\n        <a-button status=\"primary\" @click=\"memberListDialog_Cancel\">取消</a-button>\n        <a-button v-if=\"rulesOption === true\" type=\"primary\" @click=\"memberListDialog_Confirm\">確定</a-button>\n        <a-button v-else type=\"primary\" @click=\"memberListDialog_Confirm2\">確定</a-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {},\n  props: {\n    type: {\n      type: String,\n      default: null\n    },\n    // 可新增\n    allowCreate: {\n      type: Boolean,\n      default: true,\n    },\n    // 輸入欄位\n    tagsInput: {\n      type: Boolean,\n      default: true,\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true,\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: this.tagsValue,\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n      validateState: \"success\",\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n        //object中新增數值\n        /*for (let stage of this.memberList) {\n          Object.assign(stage, { isSelected: false });\n        }*/\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.$refs.memberTables.clearSelection();\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員(驗證)\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm2() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      const rows = this.tags;\n      this.$emit(\"sand-form\", rows);\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n    },\n\n    // 刪除tag\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n      this.selectTags.splice(this.tags.indexOf(tag), 1);\n    },\n    // input輸入\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n\n    getRowKeys(row) {\n      return row.id;\n    },\n\n    test() {\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n  },\n  mounted() {\n    this.getApi();\n    this.test();\n  },\n  created() {},\n};\n</script>\n\n<style scoped lang=\"scss\">\n.inputError {\n  border: #f56c6c 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}