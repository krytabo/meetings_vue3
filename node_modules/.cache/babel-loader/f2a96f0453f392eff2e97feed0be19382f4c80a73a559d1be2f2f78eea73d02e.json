{"ast":null,"code":"import { defineComponent, h, computed } from 'vue';\nimport { formatLength } from '../../_utils';\nimport { NBaseIcon } from '../../_internal';\nimport { WarningIcon, InfoIcon as InfoCircleIcon, ErrorIcon as ErrorCircleIcon, SuccessIcon as SuccessCircleIcon } from '../../_internal/icons';\nconst iconMap = {\n  success: h(SuccessCircleIcon, null),\n  error: h(ErrorCircleIcon, null),\n  warning: h(WarningIcon, null),\n  info: h(InfoCircleIcon, null)\n};\nexport default defineComponent({\n  name: 'ProgressLine',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    percentage: {\n      type: Number,\n      default: 0\n    },\n    railColor: String,\n    railStyle: [String, Object],\n    fillColor: String,\n    status: {\n      type: String,\n      required: true\n    },\n    indicatorPlacement: {\n      type: String,\n      required: true\n    },\n    indicatorTextColor: String,\n    unit: {\n      type: String,\n      default: '%'\n    },\n    processing: {\n      type: Boolean,\n      required: true\n    },\n    showIndicator: {\n      type: Boolean,\n      required: true\n    },\n    height: [String, Number],\n    railBorderRadius: [String, Number],\n    fillBorderRadius: [String, Number]\n  },\n  setup(props, {\n    slots\n  }) {\n    const styleHeightRef = computed(() => {\n      return formatLength(props.height);\n    });\n    const styleRailBorderRadiusRef = computed(() => {\n      if (props.railBorderRadius !== undefined) {\n        return formatLength(props.railBorderRadius);\n      }\n      if (props.height !== undefined) {\n        return formatLength(props.height, {\n          c: 0.5\n        });\n      }\n      return '';\n    });\n    const styleFillBorderRadiusRef = computed(() => {\n      if (props.fillBorderRadius !== undefined) {\n        return formatLength(props.fillBorderRadius);\n      }\n      if (props.railBorderRadius !== undefined) {\n        return formatLength(props.railBorderRadius);\n      }\n      if (props.height !== undefined) {\n        return formatLength(props.height, {\n          c: 0.5\n        });\n      }\n      return '';\n    });\n    return () => {\n      const {\n        indicatorPlacement,\n        railColor,\n        railStyle,\n        percentage,\n        unit,\n        indicatorTextColor,\n        status,\n        showIndicator,\n        fillColor,\n        processing,\n        clsPrefix\n      } = props;\n      return h(\"div\", {\n        class: `${clsPrefix}-progress-content`,\n        role: \"none\"\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph`,\n        \"aria-hidden\": true\n      }, h(\"div\", {\n        class: [`${clsPrefix}-progress-graph-line`, {\n          [`${clsPrefix}-progress-graph-line--indicator-${indicatorPlacement}`]: true\n        }]\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph-line-rail`,\n        style: [{\n          backgroundColor: railColor,\n          height: styleHeightRef.value,\n          borderRadius: styleRailBorderRadiusRef.value\n        }, railStyle]\n      }, h(\"div\", {\n        class: [`${clsPrefix}-progress-graph-line-fill`, processing && `${clsPrefix}-progress-graph-line-fill--processing`],\n        style: {\n          maxWidth: `${props.percentage}%`,\n          backgroundColor: fillColor,\n          height: styleHeightRef.value,\n          lineHeight: styleHeightRef.value,\n          borderRadius: styleFillBorderRadiusRef.value\n        }\n      }, indicatorPlacement === 'inside' ? h(\"div\", {\n        class: `${clsPrefix}-progress-graph-line-indicator`\n      }, percentage, unit) : null)))), showIndicator && indicatorPlacement === 'outside' ? h(\"div\", null, slots.default ? h(\"div\", {\n        class: `${clsPrefix}-progress-custom-content`,\n        style: {\n          color: indicatorTextColor\n        },\n        role: \"none\"\n      }, slots.default()) : status === 'default' ? h(\"div\", {\n        role: \"none\",\n        class: `${clsPrefix}-progress-icon ${clsPrefix}-progress-icon--as-text`,\n        style: {\n          color: indicatorTextColor\n        }\n      }, percentage, unit) : h(\"div\", {\n        class: `${clsPrefix}-progress-icon`,\n        \"aria-hidden\": true\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => iconMap[status]\n      }))) : null);\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","h","computed","formatLength","NBaseIcon","WarningIcon","InfoIcon","InfoCircleIcon","ErrorIcon","ErrorCircleIcon","SuccessIcon","SuccessCircleIcon","iconMap","success","error","warning","info","name","props","clsPrefix","type","String","required","percentage","Number","default","railColor","railStyle","Object","fillColor","status","indicatorPlacement","indicatorTextColor","unit","processing","Boolean","showIndicator","height","railBorderRadius","fillBorderRadius","setup","slots","styleHeightRef","styleRailBorderRadiusRef","undefined","c","styleFillBorderRadiusRef","class","role","style","backgroundColor","value","borderRadius","maxWidth","lineHeight","color"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/progress/src/Line.js"],"sourcesContent":["import { defineComponent, h, computed } from 'vue';\nimport { formatLength } from '../../_utils';\nimport { NBaseIcon } from '../../_internal';\nimport { WarningIcon, InfoIcon as InfoCircleIcon, ErrorIcon as ErrorCircleIcon, SuccessIcon as SuccessCircleIcon } from '../../_internal/icons';\nconst iconMap = {\n    success: h(SuccessCircleIcon, null),\n    error: h(ErrorCircleIcon, null),\n    warning: h(WarningIcon, null),\n    info: h(InfoCircleIcon, null)\n};\nexport default defineComponent({\n    name: 'ProgressLine',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        percentage: {\n            type: Number,\n            default: 0\n        },\n        railColor: String,\n        railStyle: [String, Object],\n        fillColor: String,\n        status: {\n            type: String,\n            required: true\n        },\n        indicatorPlacement: {\n            type: String,\n            required: true\n        },\n        indicatorTextColor: String,\n        unit: {\n            type: String,\n            default: '%'\n        },\n        processing: {\n            type: Boolean,\n            required: true\n        },\n        showIndicator: {\n            type: Boolean,\n            required: true\n        },\n        height: [String, Number],\n        railBorderRadius: [String, Number],\n        fillBorderRadius: [String, Number]\n    },\n    setup(props, { slots }) {\n        const styleHeightRef = computed(() => {\n            return formatLength(props.height);\n        });\n        const styleRailBorderRadiusRef = computed(() => {\n            if (props.railBorderRadius !== undefined) {\n                return formatLength(props.railBorderRadius);\n            }\n            if (props.height !== undefined) {\n                return formatLength(props.height, { c: 0.5 });\n            }\n            return '';\n        });\n        const styleFillBorderRadiusRef = computed(() => {\n            if (props.fillBorderRadius !== undefined) {\n                return formatLength(props.fillBorderRadius);\n            }\n            if (props.railBorderRadius !== undefined) {\n                return formatLength(props.railBorderRadius);\n            }\n            if (props.height !== undefined) {\n                return formatLength(props.height, { c: 0.5 });\n            }\n            return '';\n        });\n        return () => {\n            const { indicatorPlacement, railColor, railStyle, percentage, unit, indicatorTextColor, status, showIndicator, fillColor, processing, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: [\n                            `${clsPrefix}-progress-graph-line`,\n                            {\n                                [`${clsPrefix}-progress-graph-line--indicator-${indicatorPlacement}`]: true\n                            }\n                        ] },\n                        h(\"div\", { class: `${clsPrefix}-progress-graph-line-rail`, style: [\n                                {\n                                    backgroundColor: railColor,\n                                    height: styleHeightRef.value,\n                                    borderRadius: styleRailBorderRadiusRef.value\n                                },\n                                railStyle\n                            ] },\n                            h(\"div\", { class: [\n                                    `${clsPrefix}-progress-graph-line-fill`,\n                                    processing &&\n                                        `${clsPrefix}-progress-graph-line-fill--processing`\n                                ], style: {\n                                    maxWidth: `${props.percentage}%`,\n                                    backgroundColor: fillColor,\n                                    height: styleHeightRef.value,\n                                    lineHeight: styleHeightRef.value,\n                                    borderRadius: styleFillBorderRadiusRef.value\n                                } }, indicatorPlacement === 'inside' ? (h(\"div\", { class: `${clsPrefix}-progress-graph-line-indicator` },\n                                percentage,\n                                unit)) : null)))),\n                showIndicator && indicatorPlacement === 'outside' ? (h(\"div\", null, slots.default ? (h(\"div\", { class: `${clsPrefix}-progress-custom-content`, style: {\n                        color: indicatorTextColor\n                    }, role: \"none\" }, slots.default())) : status === 'default' ? (h(\"div\", { role: \"none\", class: `${clsPrefix}-progress-icon ${clsPrefix}-progress-icon--as-text`, style: {\n                        color: indicatorTextColor\n                    } },\n                    percentage,\n                    unit)) : (h(\"div\", { class: `${clsPrefix}-progress-icon`, \"aria-hidden\": true },\n                    h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => iconMap[status] }))))) : null));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}