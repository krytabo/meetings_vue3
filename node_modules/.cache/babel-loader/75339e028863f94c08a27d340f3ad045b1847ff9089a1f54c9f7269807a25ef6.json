{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<el-dialog title=\\\"選擇人員\\\" draggable>\\n    <div class=\\\"flax space-x-4\\\">\\n      <div class=\\\"\\\"></div>\\n      <el-table :data=\\\"memberList\\\" ref=\\\"multipleTable\\\" @selection-change=\\\"select\\\">\\n        <el-table-column type=\\\"selection\\\" width=\\\"50\\\"></el-table-column>\\n        <el-table-column label=\\\"編號\\\" prop=\\\"id\\\"></el-table-column>\\n        <el-table-column label=\\\"姓名\\\" prop=\\\"name\\\"></el-table-column>\\n        <el-table-column label=\\\"部門\\\" prop=\\\"department\\\"></el-table-column>\\n      </el-table>\\n    </div>\\n\\n    &lt;!&ndash;    <el-input v-model=\\\"searchText\\\"></el-input>&ndash;&gt;\\n    <el-button @click=\\\"confirmButton\\\">確定</el-button>\\n  </el-dialog>\"), _createVNode(_component_el_table, {\n    data: _ctx.dataSource,\n    onSelectionChange: $options.select\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      type: \"selection\",\n      width: \"50\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"編號\",\n      prop: \"id\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"姓名\",\n      prop: \"name\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"部門\",\n      prop: \"department\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n    data: $options.data2,\n    onSelectionChange: $options.select\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      type: \"selection\",\n      width: \"50\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"編號\",\n      prop: \"id\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"姓名\",\n      prop: \"name\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"部門\",\n      prop: \"department\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"])]), _createCommentVNode(\"<el-dialog title=\\\"選擇人員\\\" draggable :show-close=\\\"false\\\" v-model=\\\"dialogVisible\\\">\\n    <div class=\\\"flax mb-5 space-x-4\\\">\\n      <el-table ref=\\\"multipleTables\\\" :data=\\\"data\\\" @selection-change=\\\"select\\\">\\n    <el-table-column type=\\\"selection\\\" width=\\\"50\\\"></el-table-column>\\n    <el-table-column label=\\\"編號\\\" prop=\\\"id\\\"></el-table-column>\\n    <el-table-column label=\\\"姓名\\\" prop=\\\"name\\\"></el-table-column>\\n    <el-table-column label=\\\"部門\\\" prop=\\\"department\\\"></el-table-column>\\n  </el-table>\\n    </div>\\n\\n    {{ checkedDetail }}\\n\\n    <div class=\\\"flex w-full items-center justify-center space-x-2\\\">\\n      <a-button status=\\\"primary\\\" @click=\\\"cancelButton\\\">取消</a-button>\\n      <a-button type=\\\"primary\\\" @click=\\\"confirmButton\\\">確定</a-button>\\n    </div>\\n  </el-dialog>\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAsBOA,KAAK,EAAC;AAAE;;;;6DArBbC,srBAae,EAEfC,aAKWC;IALAC,IAAI,EAAEC,eAAU;IAAGC,iBAAgB,EAAEC;;sBAC9C,MAA+D,CAA/DL,aAA+DM;MAA9CC,IAAI,EAAC,WAAW;MAACC,KAAK,EAAC;QACxCR,aAAwDM;MAAvCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCV,aAA0DM;MAAzCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCV,aAAgEM;MAA/CG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;;oDAEnCC,oBAOM,OAPNC,UAOM,GANJZ,aAKWC;IALAC,IAAI,EAAEG,cAAK;IAAGD,iBAAgB,EAAEC;;sBACzC,MAA+D,CAA/DL,aAA+DM;MAA9CC,IAAI,EAAC,WAAW;MAACC,KAAK,EAAC;QACxCR,aAAwDM;MAAvCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCV,aAA0DM;MAAzCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCV,aAAgEM;MAA/CG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;;sDAIrCX,gzBAgBe","names":["class","_createCommentVNode","_createVNode","_component_el_table","data","_ctx","onSelectionChange","$options","_component_el_table_column","type","width","label","prop","_createElementVNode","_hoisted_1"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-table :data=\"dataSource\" @selection-change=\"select\">\n    <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n    <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n    <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n    <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n  </el-table>\n  <div class=\"\">\n    <el-table :data=\"data2\" @selection-change=\"select\">\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n      <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n      <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n      <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n    </el-table>\n  </div>\n\n  <!--<el-dialog title=\"選擇人員\" draggable :show-close=\"false\" v-model=\"dialogVisible\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"data\" @selection-change=\"select\">\n    <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n    <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n    <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n    <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n  </el-table>\n    </div>\n\n    {{ checkedDetail }}\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button type=\"primary\" @click=\"confirmButton\">確定</a-button>\n    </div>\n  </el-dialog>-->\n</template>\n\n<script>\n// import { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    dataSource: {\n      type: Array,\n      default: () => [],\n    },\n    isSingel: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  // emits: [\"selected-user\"],\n  /*setup(props, { emit }) {\n    // 选择用户\n    const setSelectRows = (selection) => {\n      // 单选\n      if (props.isSingel) {\n        if (selection.length > 1) {\n          const del_row = selection.shift();\n          state.table.toggleRowSelection(del_row, false); //设置这一行取消选中\n        }\n      }\n      // 多选\n      state.selectRows = selection;\n    };\n\n    // 打开弹框\n    const showModel = () => {\n      state.dialogFormVisible = true;\n    };\n\n    // 关闭弹框\n    const close = () => {\n      state.dialogFormVisible = false;\n    };\n\n    // 保存选择的用户\n    const save = () => {\n      emit(\"selected-user\", state.selectRows); // 派发事件，具体逻辑在父组件中实现\n      close();\n    };\n\n    return {\n      ...toRefs(state),\n      setSelectRows,\n      showModel,\n      close,\n      save,\n    };\n  },*/\n  data() {\n    return {\n      memberList: this.data,\n      search: this.value,\n      checkedDetail: [],\n    };\n  },\n  mounted() {\n    /*userList().then((res) => {\n      this.memberList = res.data;\n    });*/\n  },\n  methods: {\n    data2(val) {\n      this.$emit(\"sizeChange\", val);\n    },\n    // table選擇框\n    select(rows) {\n      this.checkedDetail = rows;\n      this.$emit(\"selected-user\", rows);\n    },\n    // 確認按鈕\n    confirmButton() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      /* this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });*/\n    },\n  },\n  watch: {\n    /*multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    },*/\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      },\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}