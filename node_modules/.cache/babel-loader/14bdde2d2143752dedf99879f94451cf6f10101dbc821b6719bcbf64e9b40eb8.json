{"ast":null,"code":"import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from '../interface';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n  active: Boolean,\n  dateFormat: String,\n  timeFormat: {\n    type: String,\n    value: TIME_FORMAT\n  },\n  value: {\n    type: [Array, Number],\n    default: null\n  },\n  shortcuts: Object,\n  defaultTime: [Number, String, Array],\n  onClear: Function,\n  onConfirm: Function,\n  onClose: Function,\n  onTabOut: Function,\n  onUpdateValue: {\n    type: Function,\n    required: true\n  },\n  themeClass: String,\n  onRender: Function,\n  panel: Boolean\n};\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction usePanelCommon(props) {\n  const {\n    dateLocaleRef,\n    timePickerSizeRef,\n    timePickerPropsRef,\n    localeRef,\n    mergedClsPrefixRef,\n    mergedThemeRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const dateFnsOptionsRef = computed(() => {\n    return {\n      locale: dateLocaleRef.value.locale\n    };\n  });\n  const selfRef = ref(null);\n  const keyboardState = useKeyboard();\n  function doClear() {\n    const {\n      onClear\n    } = props;\n    if (onClear) onClear();\n  }\n  function doConfirm() {\n    const {\n      onConfirm,\n      value\n    } = props;\n    if (onConfirm) onConfirm(value);\n  }\n  function doUpdateValue(value, doUpdate) {\n    const {\n      onUpdateValue\n    } = props;\n    onUpdateValue(value, doUpdate);\n  }\n  function doClose(disableUpdateOnClose = false) {\n    const {\n      onClose\n    } = props;\n    if (onClose) onClose(disableUpdateOnClose);\n  }\n  function doTabOut() {\n    const {\n      onTabOut\n    } = props;\n    if (onTabOut) onTabOut();\n  }\n  function handleClearClick() {\n    doUpdateValue(null, true);\n    doClose(true);\n    doClear();\n  }\n  function handleFocusDetectorFocus() {\n    doTabOut();\n  }\n  function disableTransitionOneTick() {\n    if (props.active || props.panel) {\n      void nextTick(() => {\n        const {\n          value: selfEl\n        } = selfRef;\n        if (!selfEl) return;\n        const dateEls = selfEl.querySelectorAll('[data-n-date]');\n        dateEls.forEach(el => {\n          el.classList.add('transition-disabled');\n        });\n        void selfEl.offsetWidth;\n        dateEls.forEach(el => {\n          el.classList.remove('transition-disabled');\n        });\n      });\n    }\n  }\n  function handlePanelKeyDown(e) {\n    if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n      e.preventDefault();\n      doTabOut();\n    }\n  }\n  function handlePanelFocus(e) {\n    const {\n      value: el\n    } = selfRef;\n    if (keyboardState.tab && e.target === el && (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n      doTabOut();\n    }\n  }\n  let cachedValue = null;\n  let cached = false;\n  function cachePendingValue() {\n    cachedValue = props.value;\n    cached = true;\n  }\n  function clearPendingValue() {\n    cached = false;\n  }\n  function restorePendingValue() {\n    if (cached) {\n      doUpdateValue(cachedValue, false);\n      cached = false;\n    }\n  }\n  function getShortcutValue(shortcut) {\n    if (typeof shortcut === 'function') {\n      return shortcut();\n    }\n    return shortcut;\n  }\n  const showMonthYearPanel = ref(false);\n  function handleOpenQuickSelectMonthPanel() {\n    showMonthYearPanel.value = !showMonthYearPanel.value;\n  }\n  return {\n    mergedTheme: mergedThemeRef,\n    mergedClsPrefix: mergedClsPrefixRef,\n    dateFnsOptions: dateFnsOptionsRef,\n    timePickerSize: timePickerSizeRef,\n    timePickerProps: timePickerPropsRef,\n    selfRef,\n    locale: localeRef,\n    doConfirm,\n    doClose,\n    doUpdateValue,\n    doTabOut,\n    handleClearClick,\n    handleFocusDetectorFocus,\n    disableTransitionOneTick,\n    handlePanelKeyDown,\n    handlePanelFocus,\n    cachePendingValue,\n    clearPendingValue,\n    restorePendingValue,\n    getShortcutValue,\n    handleShortcutMouseleave: restorePendingValue,\n    showMonthYearPanel,\n    handleOpenQuickSelectMonthPanel\n  };\n}\nexport { usePanelCommon, usePanelCommonProps };","map":{"version":3,"names":["computed","inject","ref","nextTick","useKeyboard","datePickerInjectionKey","TIME_FORMAT","usePanelCommonProps","active","Boolean","dateFormat","String","timeFormat","type","value","Array","Number","default","shortcuts","Object","defaultTime","onClear","Function","onConfirm","onClose","onTabOut","onUpdateValue","required","themeClass","onRender","panel","usePanelCommon","props","dateLocaleRef","timePickerSizeRef","timePickerPropsRef","localeRef","mergedClsPrefixRef","mergedThemeRef","dateFnsOptionsRef","locale","selfRef","keyboardState","doClear","doConfirm","doUpdateValue","doUpdate","doClose","disableUpdateOnClose","doTabOut","handleClearClick","handleFocusDetectorFocus","disableTransitionOneTick","selfEl","dateEls","querySelectorAll","forEach","el","classList","add","offsetWidth","remove","handlePanelKeyDown","e","key","target","shift","preventDefault","handlePanelFocus","tab","contains","relatedTarget","cachedValue","cached","cachePendingValue","clearPendingValue","restorePendingValue","getShortcutValue","shortcut","showMonthYearPanel","handleOpenQuickSelectMonthPanel","mergedTheme","mergedClsPrefix","dateFnsOptions","timePickerSize","timePickerProps","handleShortcutMouseleave"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/date-picker/src/panel/use-panel-common.js"],"sourcesContent":["import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from '../interface';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n    active: Boolean,\n    dateFormat: String,\n    timeFormat: {\n        type: String,\n        value: TIME_FORMAT\n    },\n    value: {\n        type: [Array, Number],\n        default: null\n    },\n    shortcuts: Object,\n    defaultTime: [Number, String, Array],\n    onClear: Function,\n    onConfirm: Function,\n    onClose: Function,\n    onTabOut: Function,\n    onUpdateValue: {\n        type: Function,\n        required: true\n    },\n    themeClass: String,\n    onRender: Function,\n    panel: Boolean\n};\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction usePanelCommon(props) {\n    const { dateLocaleRef, timePickerSizeRef, timePickerPropsRef, localeRef, mergedClsPrefixRef, mergedThemeRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const dateFnsOptionsRef = computed(() => {\n        return {\n            locale: dateLocaleRef.value.locale\n        };\n    });\n    const selfRef = ref(null);\n    const keyboardState = useKeyboard();\n    function doClear() {\n        const { onClear } = props;\n        if (onClear)\n            onClear();\n    }\n    function doConfirm() {\n        const { onConfirm, value } = props;\n        if (onConfirm)\n            onConfirm(value);\n    }\n    function doUpdateValue(value, doUpdate) {\n        const { onUpdateValue } = props;\n        onUpdateValue(value, doUpdate);\n    }\n    function doClose(disableUpdateOnClose = false) {\n        const { onClose } = props;\n        if (onClose)\n            onClose(disableUpdateOnClose);\n    }\n    function doTabOut() {\n        const { onTabOut } = props;\n        if (onTabOut)\n            onTabOut();\n    }\n    function handleClearClick() {\n        doUpdateValue(null, true);\n        doClose(true);\n        doClear();\n    }\n    function handleFocusDetectorFocus() {\n        doTabOut();\n    }\n    function disableTransitionOneTick() {\n        if (props.active || props.panel) {\n            void nextTick(() => {\n                const { value: selfEl } = selfRef;\n                if (!selfEl)\n                    return;\n                const dateEls = selfEl.querySelectorAll('[data-n-date]');\n                dateEls.forEach((el) => {\n                    el.classList.add('transition-disabled');\n                });\n                void selfEl.offsetWidth;\n                dateEls.forEach((el) => {\n                    el.classList.remove('transition-disabled');\n                });\n            });\n        }\n    }\n    function handlePanelKeyDown(e) {\n        if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n            e.preventDefault();\n            doTabOut();\n        }\n    }\n    function handlePanelFocus(e) {\n        const { value: el } = selfRef;\n        if (keyboardState.tab &&\n            e.target === el &&\n            (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n            doTabOut();\n        }\n    }\n    let cachedValue = null;\n    let cached = false;\n    function cachePendingValue() {\n        cachedValue = props.value;\n        cached = true;\n    }\n    function clearPendingValue() {\n        cached = false;\n    }\n    function restorePendingValue() {\n        if (cached) {\n            doUpdateValue(cachedValue, false);\n            cached = false;\n        }\n    }\n    function getShortcutValue(shortcut) {\n        if (typeof shortcut === 'function') {\n            return shortcut();\n        }\n        return shortcut;\n    }\n    const showMonthYearPanel = ref(false);\n    function handleOpenQuickSelectMonthPanel() {\n        showMonthYearPanel.value = !showMonthYearPanel.value;\n    }\n    return {\n        mergedTheme: mergedThemeRef,\n        mergedClsPrefix: mergedClsPrefixRef,\n        dateFnsOptions: dateFnsOptionsRef,\n        timePickerSize: timePickerSizeRef,\n        timePickerProps: timePickerPropsRef,\n        selfRef,\n        locale: localeRef,\n        doConfirm,\n        doClose,\n        doUpdateValue,\n        doTabOut,\n        handleClearClick,\n        handleFocusDetectorFocus,\n        disableTransitionOneTick,\n        handlePanelKeyDown,\n        handlePanelFocus,\n        cachePendingValue,\n        clearPendingValue,\n        restorePendingValue,\n        getShortcutValue,\n        handleShortcutMouseleave: restorePendingValue,\n        showMonthYearPanel,\n        handleOpenQuickSelectMonthPanel\n    };\n}\nexport { usePanelCommon, usePanelCommonProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}