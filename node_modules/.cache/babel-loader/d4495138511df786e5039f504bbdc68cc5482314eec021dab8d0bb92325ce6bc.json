{"ast":null,"code":"import { ref, computed, toRef } from 'vue';\nimport { useMemo, useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props, mergedDisabledRef) {\n  const uncontrolledValueRef = ref(props.defaultValue);\n  const controlledValueRef = toRef(props, 'value');\n  const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n  const optMapRef = computed(() => {\n    const map = new Map();\n    (props.options || []).forEach(opt => map.set(opt.value, opt));\n    return map;\n  });\n  const tgtValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n  const srcOptsRef = computed(() => props.options.filter(option => !tgtValueSetRef.value.has(option.value)));\n  const tgtOptsRef = computed(() => {\n    const optMap = optMapRef.value;\n    return (mergedValueRef.value || []).map(v => optMap.get(v));\n  });\n  const srcPatternRef = ref('');\n  const tgtPatternRef = ref('');\n  const filteredSrcOptsRef = computed(() => {\n    if (!props.filterable) return srcOptsRef.value;\n    const {\n      filter\n    } = props;\n    return srcOptsRef.value.filter(opt => filter(srcPatternRef.value, opt, 'source'));\n  });\n  const filteredTgtOptsRef = computed(() => {\n    if (!props.filterable) return tgtOptsRef.value;\n    const {\n      filter\n    } = props;\n    return tgtOptsRef.value.filter(opt => filter(tgtPatternRef.value, opt, 'target'));\n  });\n  const avlSrcValueSetRef = computed(() => new Set(filteredSrcOptsRef.value.filter(opt => !opt.disabled).map(opt => opt.value)));\n  const avlTgtValueSetRef = computed(() => new Set(filteredTgtOptsRef.value.filter(opt => !opt.disabled).map(opt => opt.value)));\n  const srcCheckedValuesRef = ref([]);\n  const tgtCheckedValuesRef = ref([]);\n  const srcCheckedStatusRef = computed(() => {\n    const srcCheckedLength = srcCheckedValuesRef.value.filter(v => avlSrcValueSetRef.value.has(v)).length;\n    const avlValueCount = avlSrcValueSetRef.value.size;\n    if (avlValueCount === 0) {\n      return {\n        checked: false,\n        indeterminate: false,\n        disabled: true\n      };\n    } else if (srcCheckedLength === 0) {\n      return {\n        checked: false,\n        indeterminate: false\n      };\n    } else if (srcCheckedLength === avlValueCount) {\n      return {\n        checked: true,\n        indeterminate: false\n      };\n    } else {\n      return {\n        checked: false,\n        indeterminate: true\n      };\n    }\n  });\n  const tgtCheckedStatusRef = computed(() => {\n    const tgtCheckedLength = tgtCheckedValuesRef.value.filter(v => avlTgtValueSetRef.value.has(v)).length;\n    const avlValueCount = avlTgtValueSetRef.value.size;\n    if (avlValueCount === 0) {\n      return {\n        checked: false,\n        indeterminate: false,\n        disabled: true\n      };\n    } else if (tgtCheckedLength === 0) {\n      return {\n        checked: false,\n        indeterminate: false\n      };\n    } else if (tgtCheckedLength === avlValueCount) {\n      return {\n        checked: true,\n        indeterminate: false\n      };\n    } else {\n      return {\n        checked: false,\n        indeterminate: true\n      };\n    }\n  });\n  const fromButtonDisabledRef = useMemo(() => {\n    if (mergedDisabledRef.value) return true;\n    return tgtCheckedValuesRef.value.length === 0;\n  });\n  const toButtonDisabledRef = useMemo(() => {\n    if (mergedDisabledRef.value) return true;\n    return srcCheckedValuesRef.value.length === 0;\n  });\n  const isInputingRef = ref(false);\n  function handleInputFocus() {\n    isInputingRef.value = true;\n  }\n  function handleInputBlur() {\n    isInputingRef.value = false;\n  }\n  function handleSrcFilterUpdateValue(value) {\n    srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n  function handleTgtFilterUpdateValue(value) {\n    tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n  return {\n    uncontrolledValue: uncontrolledValueRef,\n    mergedValue: mergedValueRef,\n    avlSrcValueSet: avlSrcValueSetRef,\n    avlTgtValueSet: avlTgtValueSetRef,\n    tgtOpts: tgtOptsRef,\n    srcOpts: srcOptsRef,\n    filteredSrcOpts: filteredSrcOptsRef,\n    filteredTgtOpts: filteredTgtOptsRef,\n    srcCheckedValues: srcCheckedValuesRef,\n    tgtCheckedValues: tgtCheckedValuesRef,\n    srcCheckedStatus: srcCheckedStatusRef,\n    tgtCheckedStatus: tgtCheckedStatusRef,\n    srcPattern: srcPatternRef,\n    tgtPattern: tgtPatternRef,\n    isInputing: isInputingRef,\n    fromButtonDisabled: fromButtonDisabledRef,\n    toButtonDisabled: toButtonDisabledRef,\n    handleInputFocus,\n    handleInputBlur,\n    handleTgtFilterUpdateValue,\n    handleSrcFilterUpdateValue\n  };\n}","map":{"version":3,"names":["ref","computed","toRef","useMemo","useMergedState","useTransferData","props","mergedDisabledRef","uncontrolledValueRef","defaultValue","controlledValueRef","mergedValueRef","optMapRef","map","Map","options","forEach","opt","set","value","tgtValueSetRef","Set","srcOptsRef","filter","option","has","tgtOptsRef","optMap","v","get","srcPatternRef","tgtPatternRef","filteredSrcOptsRef","filterable","filteredTgtOptsRef","avlSrcValueSetRef","disabled","avlTgtValueSetRef","srcCheckedValuesRef","tgtCheckedValuesRef","srcCheckedStatusRef","srcCheckedLength","length","avlValueCount","size","checked","indeterminate","tgtCheckedStatusRef","tgtCheckedLength","fromButtonDisabledRef","toButtonDisabledRef","isInputingRef","handleInputFocus","handleInputBlur","handleSrcFilterUpdateValue","handleTgtFilterUpdateValue","uncontrolledValue","mergedValue","avlSrcValueSet","avlTgtValueSet","tgtOpts","srcOpts","filteredSrcOpts","filteredTgtOpts","srcCheckedValues","tgtCheckedValues","srcCheckedStatus","tgtCheckedStatus","srcPattern","tgtPattern","isInputing","fromButtonDisabled","toButtonDisabled"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/legacy-transfer/src/use-transfer-data.js"],"sourcesContent":["import { ref, computed, toRef } from 'vue';\nimport { useMemo, useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props, mergedDisabledRef) {\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const optMapRef = computed(() => {\n        const map = new Map();\n        (props.options || []).forEach((opt) => map.set(opt.value, opt));\n        return map;\n    });\n    const tgtValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n    const srcOptsRef = computed(() => props.options.filter((option) => !tgtValueSetRef.value.has(option.value)));\n    const tgtOptsRef = computed(() => {\n        const optMap = optMapRef.value;\n        return (mergedValueRef.value || []).map((v) => optMap.get(v));\n    });\n    const srcPatternRef = ref('');\n    const tgtPatternRef = ref('');\n    const filteredSrcOptsRef = computed(() => {\n        if (!props.filterable)\n            return srcOptsRef.value;\n        const { filter } = props;\n        return srcOptsRef.value.filter((opt) => filter(srcPatternRef.value, opt, 'source'));\n    });\n    const filteredTgtOptsRef = computed(() => {\n        if (!props.filterable)\n            return tgtOptsRef.value;\n        const { filter } = props;\n        return tgtOptsRef.value.filter((opt) => filter(tgtPatternRef.value, opt, 'target'));\n    });\n    const avlSrcValueSetRef = computed(() => new Set(filteredSrcOptsRef.value\n        .filter((opt) => !opt.disabled)\n        .map((opt) => opt.value)));\n    const avlTgtValueSetRef = computed(() => new Set(filteredTgtOptsRef.value\n        .filter((opt) => !opt.disabled)\n        .map((opt) => opt.value)));\n    const srcCheckedValuesRef = ref([]);\n    const tgtCheckedValuesRef = ref([]);\n    const srcCheckedStatusRef = computed(() => {\n        const srcCheckedLength = srcCheckedValuesRef.value.filter((v) => avlSrcValueSetRef.value.has(v)).length;\n        const avlValueCount = avlSrcValueSetRef.value.size;\n        if (avlValueCount === 0) {\n            return {\n                checked: false,\n                indeterminate: false,\n                disabled: true\n            };\n        }\n        else if (srcCheckedLength === 0) {\n            return {\n                checked: false,\n                indeterminate: false\n            };\n        }\n        else if (srcCheckedLength === avlValueCount) {\n            return {\n                checked: true,\n                indeterminate: false\n            };\n        }\n        else {\n            return {\n                checked: false,\n                indeterminate: true\n            };\n        }\n    });\n    const tgtCheckedStatusRef = computed(() => {\n        const tgtCheckedLength = tgtCheckedValuesRef.value.filter((v) => avlTgtValueSetRef.value.has(v)).length;\n        const avlValueCount = avlTgtValueSetRef.value.size;\n        if (avlValueCount === 0) {\n            return {\n                checked: false,\n                indeterminate: false,\n                disabled: true\n            };\n        }\n        else if (tgtCheckedLength === 0) {\n            return {\n                checked: false,\n                indeterminate: false\n            };\n        }\n        else if (tgtCheckedLength === avlValueCount) {\n            return {\n                checked: true,\n                indeterminate: false\n            };\n        }\n        else {\n            return {\n                checked: false,\n                indeterminate: true\n            };\n        }\n    });\n    const fromButtonDisabledRef = useMemo(() => {\n        if (mergedDisabledRef.value)\n            return true;\n        return tgtCheckedValuesRef.value.length === 0;\n    });\n    const toButtonDisabledRef = useMemo(() => {\n        if (mergedDisabledRef.value)\n            return true;\n        return srcCheckedValuesRef.value.length === 0;\n    });\n    const isInputingRef = ref(false);\n    function handleInputFocus() {\n        isInputingRef.value = true;\n    }\n    function handleInputBlur() {\n        isInputingRef.value = false;\n    }\n    function handleSrcFilterUpdateValue(value) {\n        srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    function handleTgtFilterUpdateValue(value) {\n        tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    return {\n        uncontrolledValue: uncontrolledValueRef,\n        mergedValue: mergedValueRef,\n        avlSrcValueSet: avlSrcValueSetRef,\n        avlTgtValueSet: avlTgtValueSetRef,\n        tgtOpts: tgtOptsRef,\n        srcOpts: srcOptsRef,\n        filteredSrcOpts: filteredSrcOptsRef,\n        filteredTgtOpts: filteredTgtOptsRef,\n        srcCheckedValues: srcCheckedValuesRef,\n        tgtCheckedValues: tgtCheckedValuesRef,\n        srcCheckedStatus: srcCheckedStatusRef,\n        tgtCheckedStatus: tgtCheckedStatusRef,\n        srcPattern: srcPatternRef,\n        tgtPattern: tgtPatternRef,\n        isInputing: isInputingRef,\n        fromButtonDisabled: fromButtonDisabledRef,\n        toButtonDisabled: toButtonDisabledRef,\n        handleInputFocus,\n        handleInputBlur,\n        handleTgtFilterUpdateValue,\n        handleSrcFilterUpdateValue\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}