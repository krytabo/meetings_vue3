{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { Form, Field } from \"vee-validate\";\n// import memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    // memberDialog,\n    Form,\n    Field\n  },\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      dialogVisible: false,\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入活动名称\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 5,\n          message: \"长度在 3 到 5 个字符\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请选择活动区域\",\n          trigger: \"change\"\n        }]\n      },\n      tags: [{\n        id: \"t0095\",\n        department: \"建一部\",\n        name: \"王大明\"\n      }, {\n        id: \"t0096\",\n        department: \"建二部\",\n        name: \"蔡先生\"\n      }, {\n        id: \"t0097\",\n        department: \"建三部\",\n        name: \"吳先生\"\n      }],\n      inputValue: \"\",\n      memberList: [],\n      selectTags: []\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then(res => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\"\n        });\n      }\n      this.inputValue = \"\";\n    }\n  },\n  mounted() {\n    this.getApi();\n  }\n};","map":{"version":3,"mappings":"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","names":["GenNonDuplicateID","Form","Field","userList","name","components","data","form","username","password","dialogVisible","rules","required","message","trigger","min","max","tags","id","department","inputValue","memberList","selectTags","methods","getApi","then","res","select","val","JSON","parse","stringify","edit_countersign","$nextTick","forEach","item","subItem","$refs","multipleTables","toggleRowSelection","memberListDialog_Confirm","memberListDialog_Cancel","handleClose","tag","splice","indexOf","handleInputConfirm","push","mounted"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  <Form :validation-schema=\"rules\">\n    <a-input v-model=\"form.username\"></a-input>\n    <Field v-model=\"form.username\" name=\"usernameFn\" type=\"text\" placeholder=\"请输入手机号\" />\n  </Form>\n  {{ tags }}\n  <div class=\"flex w-full items-center\">\n    <div class=\"flex h-8 flex-1 items-center space-x-2 rounded bg-white px-4\" :class=\"{ inputError: tags === [] }\">\n      <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable>{{ tag.name }}</a-tag>\n      <input v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" @blur=\"handleInputConfirm\" />\n    </div>\n    <el-button plain @click=\"edit_countersign\">選擇</el-button>\n  </div>\n  <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"memberListDialog_Cancel\">取消</a-button>\n      <a-button type=\"primary\" @click=\"memberListDialog_Confirm\">確定</a-button>\n    </div>\n  </el-dialog>\n  <!--<memberDialog v-model=\"dialogVisible\" @resetPopupData=\"memberListDialog_Cancel\" @submitPopupData=\"memberListDialog_Confirm\" @selected-user=\"selectedUser\"></memberDialog>-->\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { Form, Field } from \"vee-validate\";\n// import memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    // memberDialog,\n    Form,\n    Field,\n  },\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      dialogVisible: false,\n      rules: {\n        username: [\n          { required: true, message: \"请输入活动名称\", trigger: \"blur\" },\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\n        ],\n        password: [{ required: true, message: \"请选择活动区域\", trigger: \"change\" }],\n      },\n      tags: [\n        {\n          id: \"t0095\",\n          department: \"建一部\",\n          name: \"王大明\",\n        },\n        {\n          id: \"t0096\",\n          department: \"建二部\",\n          name: \"蔡先生\",\n        },\n        {\n          id: \"t0097\",\n          department: \"建三部\",\n          name: \"吳先生\",\n        },\n      ],\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {\n    this.getApi();\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.inputError {\n  border: #f56c6c 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}