{"ast":null,"code":"import { onActivated, onDeactivated } from 'vue';\nexport function useReactivated(callback) {\n  const isDeactivatedRef = {\n    isDeactivated: false\n  };\n  let activateStateInitialized = false;\n  onActivated(() => {\n    isDeactivatedRef.isDeactivated = false;\n    if (!activateStateInitialized) {\n      activateStateInitialized = true;\n      return;\n    }\n    callback();\n  });\n  onDeactivated(() => {\n    isDeactivatedRef.isDeactivated = true;\n    if (!activateStateInitialized) {\n      activateStateInitialized = true;\n    }\n  });\n  return isDeactivatedRef;\n}","map":{"version":3,"names":["onActivated","onDeactivated","useReactivated","callback","isDeactivatedRef","isDeactivated","activateStateInitialized"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/_utils/composable/use-reactivated.js"],"sourcesContent":["import { onActivated, onDeactivated } from 'vue';\nexport function useReactivated(callback) {\n    const isDeactivatedRef = { isDeactivated: false };\n    let activateStateInitialized = false;\n    onActivated(() => {\n        isDeactivatedRef.isDeactivated = false;\n        if (!activateStateInitialized) {\n            activateStateInitialized = true;\n            return;\n        }\n        callback();\n    });\n    onDeactivated(() => {\n        isDeactivatedRef.isDeactivated = true;\n        if (!activateStateInitialized) {\n            activateStateInitialized = true;\n        }\n    });\n    return isDeactivatedRef;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,KAAK;AAChD,OAAO,SAASC,cAAc,CAACC,QAAQ,EAAE;EACrC,MAAMC,gBAAgB,GAAG;IAAEC,aAAa,EAAE;EAAM,CAAC;EACjD,IAAIC,wBAAwB,GAAG,KAAK;EACpCN,WAAW,CAAC,MAAM;IACdI,gBAAgB,CAACC,aAAa,GAAG,KAAK;IACtC,IAAI,CAACC,wBAAwB,EAAE;MAC3BA,wBAAwB,GAAG,IAAI;MAC/B;IACJ;IACAH,QAAQ,EAAE;EACd,CAAC,CAAC;EACFF,aAAa,CAAC,MAAM;IAChBG,gBAAgB,CAACC,aAAa,GAAG,IAAI;IACrC,IAAI,CAACC,wBAAwB,EAAE;MAC3BA,wBAAwB,GAAG,IAAI;IACnC;EACJ,CAAC,CAAC;EACF,OAAOF,gBAAgB;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}