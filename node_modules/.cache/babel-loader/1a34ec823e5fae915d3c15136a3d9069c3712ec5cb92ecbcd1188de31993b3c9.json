{"ast":null,"code":"import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nimport { getTitleAttribute } from '../../_utils';\nexport default defineComponent({\n  name: 'NTransferListItem',\n  props: {\n    source: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const {\n      source\n    } = props;\n    const {\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      srcCheckedValuesRef,\n      tgtCheckedValuesRef,\n      handleSrcCheckboxClick,\n      handleTgtCheckboxClick\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(transferInjectionKey);\n    const checkedRef = source ? useMemo(() => srcCheckedValuesRef.value.includes(props.value)) : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n    const handleClick = source ? () => {\n      if (!props.disabled) {\n        handleSrcCheckboxClick(!checkedRef.value, props.value);\n      }\n    } : () => {\n      if (!props.disabled) {\n        handleTgtCheckboxClick(!checkedRef.value, props.value);\n      }\n    };\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      checked: checkedRef,\n      handleClick\n    };\n  },\n  render() {\n    const {\n      disabled,\n      mergedTheme,\n      mergedClsPrefix,\n      label,\n      checked,\n      source\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-legacy-transfer-list-item`, disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`, source ? `${mergedClsPrefix}-legacy-transfer-list-item--source` : `${mergedClsPrefix}-legacy-transfer-list-item--target`],\n      onClick: this.handleClick\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox`\n    }, h(NCheckbox, {\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      disabled: disabled,\n      checked: checked\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__label`,\n      title: getTitleAttribute(label)\n    }, label));\n  }\n});","map":{"version":3,"names":["h","inject","defineComponent","useMemo","NCheckbox","transferInjectionKey","getTitleAttribute","name","props","source","type","Boolean","default","label","String","required","value","Number","disabled","setup","mergedClsPrefixRef","mergedThemeRef","srcCheckedValuesRef","tgtCheckedValuesRef","handleSrcCheckboxClick","handleTgtCheckboxClick","checkedRef","includes","handleClick","mergedClsPrefix","mergedTheme","checked","render","class","onClick","theme","peers","Checkbox","themeOverrides","peerOverrides","title"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/legacy-transfer/src/TransferListItem.js"],"sourcesContent":["import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nimport { getTitleAttribute } from '../../_utils';\nexport default defineComponent({\n    name: 'NTransferListItem',\n    props: {\n        source: {\n            type: Boolean,\n            default: false\n        },\n        label: {\n            type: String,\n            required: true\n        },\n        value: {\n            type: [String, Number],\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    setup(props) {\n        const { source } = props;\n        const { mergedClsPrefixRef, mergedThemeRef, srcCheckedValuesRef, tgtCheckedValuesRef, handleSrcCheckboxClick, handleTgtCheckboxClick\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(transferInjectionKey);\n        const checkedRef = source\n            ? useMemo(() => srcCheckedValuesRef.value.includes(props.value))\n            : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n        const handleClick = source\n            ? () => {\n                if (!props.disabled) {\n                    handleSrcCheckboxClick(!checkedRef.value, props.value);\n                }\n            }\n            : () => {\n                if (!props.disabled) {\n                    handleTgtCheckboxClick(!checkedRef.value, props.value);\n                }\n            };\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: mergedThemeRef,\n            checked: checkedRef,\n            handleClick\n        };\n    },\n    render() {\n        const { disabled, mergedTheme, mergedClsPrefix, label, checked, source } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-legacy-transfer-list-item`,\n                disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`,\n                source\n                    ? `${mergedClsPrefix}-legacy-transfer-list-item--source`\n                    : `${mergedClsPrefix}-legacy-transfer-list-item--target`\n            ], onClick: this.handleClick },\n            h(\"div\", { class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox` },\n                h(NCheckbox, { theme: mergedTheme.peers.Checkbox, themeOverrides: mergedTheme.peerOverrides.Checkbox, disabled: disabled, checked: checked })),\n            h(\"div\", { class: `${mergedClsPrefix}-legacy-transfer-list-item__label`, title: getTitleAttribute(label) }, label)));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}