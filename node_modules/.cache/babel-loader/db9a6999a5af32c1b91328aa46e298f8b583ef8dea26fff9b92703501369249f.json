{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { SwitcherIcon } from '../../_internal/icons';\nimport { NIconSwitchTransition, NBaseLoading, NBaseIcon } from '../../_internal';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NTreeSwitcher',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    expanded: Boolean,\n    hide: Boolean,\n    loading: Boolean,\n    onClick: Function\n  },\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      renderSwitcherIconRef\n    } = inject(treeInjectionKey, null);\n    return () => {\n      const {\n        clsPrefix\n      } = props;\n      return h(\"span\", {\n        \"data-switcher\": true,\n        class: [`${clsPrefix}-tree-node-switcher`, {\n          [`${clsPrefix}-tree-node-switcher--expanded`]: props.expanded,\n          [`${clsPrefix}-tree-node-switcher--hide`]: props.hide\n        }],\n        onClick: props.onClick\n      }, h(\"div\", {\n        class: `${clsPrefix}-tree-node-switcher__icon`\n      }, h(NIconSwitchTransition, null, {\n        default: () => {\n          if (props.loading) {\n            return h(NBaseLoading, {\n              clsPrefix: clsPrefix,\n              key: \"loading\",\n              radius: 85,\n              strokeWidth: 20\n            });\n          }\n          const {\n            value: renderSwitcherIcon\n          } = renderSwitcherIconRef;\n          return renderSwitcherIcon ? renderSwitcherIcon() : h(NBaseIcon, {\n            clsPrefix: clsPrefix,\n            key: \"switcher\"\n          }, {\n            default: () => h(SwitcherIcon, null)\n          });\n        }\n      })));\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","SwitcherIcon","NIconSwitchTransition","NBaseLoading","NBaseIcon","treeInjectionKey","name","props","clsPrefix","type","String","required","expanded","Boolean","hide","loading","onClick","Function","setup","renderSwitcherIconRef","class","default","key","radius","strokeWidth","value","renderSwitcherIcon"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/tree/src/TreeNodeSwitcher.js"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { SwitcherIcon } from '../../_internal/icons';\nimport { NIconSwitchTransition, NBaseLoading, NBaseIcon } from '../../_internal';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NTreeSwitcher',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        expanded: Boolean,\n        hide: Boolean,\n        loading: Boolean,\n        onClick: Function\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { renderSwitcherIconRef } = inject(treeInjectionKey, null);\n        return () => {\n            const { clsPrefix } = props;\n            return (h(\"span\", { \"data-switcher\": true, class: [\n                    `${clsPrefix}-tree-node-switcher`,\n                    {\n                        [`${clsPrefix}-tree-node-switcher--expanded`]: props.expanded,\n                        [`${clsPrefix}-tree-node-switcher--hide`]: props.hide\n                    }\n                ], onClick: props.onClick },\n                h(\"div\", { class: `${clsPrefix}-tree-node-switcher__icon` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => {\n                            if (props.loading) {\n                                return (h(NBaseLoading, { clsPrefix: clsPrefix, key: \"loading\", radius: 85, strokeWidth: 20 }));\n                            }\n                            const { value: renderSwitcherIcon } = renderSwitcherIconRef;\n                            return renderSwitcherIcon ? (renderSwitcherIcon()) : (h(NBaseIcon, { clsPrefix: clsPrefix, key: \"switcher\" }, { default: () => h(SwitcherIcon, null) }));\n                        }\n                    }))));\n        };\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,QAAQ,KAAK;AAChD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,qBAAqB,EAAEC,YAAY,EAAEC,SAAS,QAAQ,iBAAiB;AAChF,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,eAAeN,eAAe,CAAC;EAC3BO,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACHC,SAAS,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,QAAQ,EAAEC,OAAO;IACjBC,IAAI,EAAED,OAAO;IACbE,OAAO,EAAEF,OAAO;IAChBG,OAAO,EAAEC;EACb,CAAC;EACDC,KAAK,CAACX,KAAK,EAAE;IACT;IACA,MAAM;MAAEY;IAAsB,CAAC,GAAGnB,MAAM,CAACK,gBAAgB,EAAE,IAAI,CAAC;IAChE,OAAO,MAAM;MACT,MAAM;QAAEG;MAAU,CAAC,GAAGD,KAAK;MAC3B,OAAQT,CAAC,CAAC,MAAM,EAAE;QAAE,eAAe,EAAE,IAAI;QAAEsB,KAAK,EAAE,CACzC,GAAEZ,SAAU,qBAAoB,EACjC;UACI,CAAE,GAAEA,SAAU,+BAA8B,GAAGD,KAAK,CAACK,QAAQ;UAC7D,CAAE,GAAEJ,SAAU,2BAA0B,GAAGD,KAAK,CAACO;QACrD,CAAC,CACJ;QAAEE,OAAO,EAAET,KAAK,CAACS;MAAQ,CAAC,EAC3BlB,CAAC,CAAC,KAAK,EAAE;QAAEsB,KAAK,EAAG,GAAEZ,SAAU;MAA2B,CAAC,EACvDV,CAAC,CAACI,qBAAqB,EAAE,IAAI,EAAE;QAC3BmB,OAAO,EAAE,MAAM;UACX,IAAId,KAAK,CAACQ,OAAO,EAAE;YACf,OAAQjB,CAAC,CAACK,YAAY,EAAE;cAAEK,SAAS,EAAEA,SAAS;cAAEc,GAAG,EAAE,SAAS;cAAEC,MAAM,EAAE,EAAE;cAAEC,WAAW,EAAE;YAAG,CAAC,CAAC;UAClG;UACA,MAAM;YAAEC,KAAK,EAAEC;UAAmB,CAAC,GAAGP,qBAAqB;UAC3D,OAAOO,kBAAkB,GAAIA,kBAAkB,EAAE,GAAK5B,CAAC,CAACM,SAAS,EAAE;YAAEI,SAAS,EAAEA,SAAS;YAAEc,GAAG,EAAE;UAAW,CAAC,EAAE;YAAED,OAAO,EAAE,MAAMvB,CAAC,CAACG,YAAY,EAAE,IAAI;UAAE,CAAC,CAAE;QAC5J;MACJ,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;EACL;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}