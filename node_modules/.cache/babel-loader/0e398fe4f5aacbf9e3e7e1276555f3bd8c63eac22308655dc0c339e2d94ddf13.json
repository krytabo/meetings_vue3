{"ast":null,"code":"import { computed } from 'vue';\nimport useBreakpoints from './use-breakpoints';\nimport { isBrowser } from './utils';\nfunction useBreakpoint(screens) {\n  if (!isBrowser) return computed(() => undefined);\n  // pass ts check\n  const breakpointsRef = screens !== undefined ? useBreakpoints(screens) : useBreakpoints();\n  return computed(() => {\n    const {\n      value\n    } = breakpointsRef;\n    if (value.length === 0) return undefined;\n    return value[value.length - 1];\n  });\n}\nexport default useBreakpoint;","map":{"version":3,"names":["computed","useBreakpoints","isBrowser","useBreakpoint","screens","undefined","breakpointsRef","value","length"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/vooks/es/use-breakpoint.js"],"sourcesContent":["import { computed } from 'vue';\nimport useBreakpoints from './use-breakpoints';\nimport { isBrowser } from './utils';\nfunction useBreakpoint(screens) {\n    if (!isBrowser)\n        return computed(() => undefined);\n    // pass ts check\n    const breakpointsRef = screens !== undefined ? useBreakpoints(screens) : useBreakpoints();\n    return computed(() => {\n        const { value } = breakpointsRef;\n        if (value.length === 0)\n            return undefined;\n        return value[value.length - 1];\n    });\n}\nexport default useBreakpoint;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,aAAa,CAACC,OAAO,EAAE;EAC5B,IAAI,CAACF,SAAS,EACV,OAAOF,QAAQ,CAAC,MAAMK,SAAS,CAAC;EACpC;EACA,MAAMC,cAAc,GAAGF,OAAO,KAAKC,SAAS,GAAGJ,cAAc,CAACG,OAAO,CAAC,GAAGH,cAAc,EAAE;EACzF,OAAOD,QAAQ,CAAC,MAAM;IAClB,MAAM;MAAEO;IAAM,CAAC,GAAGD,cAAc;IAChC,IAAIC,KAAK,CAACC,MAAM,KAAK,CAAC,EAClB,OAAOH,SAAS;IACpB,OAAOE,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;EAClC,CAAC,CAAC;AACN;AACA,eAAeL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}