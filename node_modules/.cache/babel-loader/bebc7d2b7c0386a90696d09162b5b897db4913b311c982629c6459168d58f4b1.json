{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, provide, ref, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\nimport { beforeNextFrameOnce } from 'seemly';\nimport { on, off } from 'evtd';\nimport { getSlot } from '../../shared/v-node';\nimport { getScrollParent } from './utils';\nconst Binder = defineComponent({\n  name: 'Binder',\n  props: {\n    syncTargetWithParent: Boolean,\n    syncTarget: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup(props) {\n    var _a;\n    provide('VBinder', (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy);\n    const VBinder = inject('VBinder', null);\n    const targetRef = ref(null);\n    /**\n     * If there's no nested vbinder, we can simply set the target ref.\n     *\n     * However, when it comes to:\n     * <VBinder> <- syncTarget = false\n     *\n     *              Should hold target DOM ref, but can't get it directly from\n     *              its VTarget. So if there are nested VBinder, we should:\n     *              1. Stop setting target DOM from level-1 VTarget\n     *              2. Set target DOM from level-2 VTarget\n     *              For (1), we need `syncTarget` to `false`\n     *              For (2), we need to set `syncTargetWithParent` to `true` on\n     *              level-2 VBinder\n     *   <VTarget>\n     *     <VBinder> <- syncTargetWithParent = true\n     *       <VTarget>target</VTarget>\n     *     </VBinder>\n     *     <VFollower>\n     *       content1\n     *     </VFollower>\n     *   </VTarget>\n     *   <VFollower>\n     *     content2\n     *   </VFollower>\n     * </VBinder>\n     */\n    const setTargetRef = el => {\n      targetRef.value = el;\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (VBinder && props.syncTargetWithParent) {\n        VBinder.setTargetRef(el);\n      }\n    };\n    // scroll related\n    let scrollableNodes = [];\n    const ensureScrollListener = () => {\n      let cursor = targetRef.value;\n      while (true) {\n        cursor = getScrollParent(cursor);\n        if (cursor === null) break;\n        scrollableNodes.push(cursor);\n      }\n      for (const el of scrollableNodes) {\n        on('scroll', el, onScroll, true);\n      }\n    };\n    const removeScrollListeners = () => {\n      for (const el of scrollableNodes) {\n        off('scroll', el, onScroll, true);\n      }\n      scrollableNodes = [];\n    };\n    const followerScrollListeners = new Set();\n    const addScrollListener = listener => {\n      if (followerScrollListeners.size === 0) {\n        ensureScrollListener();\n      }\n      if (!followerScrollListeners.has(listener)) {\n        followerScrollListeners.add(listener);\n      }\n    };\n    const removeScrollListener = listener => {\n      if (followerScrollListeners.has(listener)) {\n        followerScrollListeners.delete(listener);\n      }\n      if (followerScrollListeners.size === 0) {\n        removeScrollListeners();\n      }\n    };\n    const onScroll = () => {\n      beforeNextFrameOnce(onScrollRaf);\n    };\n    const onScrollRaf = () => {\n      followerScrollListeners.forEach(listener => listener());\n    };\n    // resize related\n    const followerResizeListeners = new Set();\n    const addResizeListener = listener => {\n      if (followerResizeListeners.size === 0) {\n        on('resize', window, onResize);\n      }\n      if (!followerResizeListeners.has(listener)) {\n        followerResizeListeners.add(listener);\n      }\n    };\n    const removeResizeListener = listener => {\n      if (followerResizeListeners.has(listener)) {\n        followerResizeListeners.delete(listener);\n      }\n      if (followerResizeListeners.size === 0) {\n        off('resize', window, onResize);\n      }\n    };\n    const onResize = () => {\n      followerResizeListeners.forEach(listener => listener());\n    };\n    onBeforeUnmount(() => {\n      off('resize', window, onResize);\n      removeScrollListeners();\n    });\n    return {\n      targetRef,\n      setTargetRef,\n      addScrollListener,\n      removeScrollListener,\n      addResizeListener,\n      removeResizeListener\n    };\n  },\n  render() {\n    return getSlot('binder', this.$slots);\n  }\n});\nexport default Binder;","map":{"version":3,"names":["defineComponent","provide","ref","inject","getCurrentInstance","onBeforeUnmount","beforeNextFrameOnce","on","off","getSlot","getScrollParent","Binder","name","props","syncTargetWithParent","Boolean","syncTarget","type","default","setup","_a","proxy","VBinder","targetRef","setTargetRef","el","value","scrollableNodes","ensureScrollListener","cursor","push","onScroll","removeScrollListeners","followerScrollListeners","Set","addScrollListener","listener","size","has","add","removeScrollListener","delete","onScrollRaf","forEach","followerResizeListeners","addResizeListener","window","onResize","removeResizeListener","render","$slots"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/vueuc/es/binder/src/Binder.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, provide, ref, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\nimport { beforeNextFrameOnce } from 'seemly';\nimport { on, off } from 'evtd';\nimport { getSlot } from '../../shared/v-node';\nimport { getScrollParent } from './utils';\nconst Binder = defineComponent({\n    name: 'Binder',\n    props: {\n        syncTargetWithParent: Boolean,\n        syncTarget: {\n            type: Boolean,\n            default: true\n        }\n    },\n    setup(props) {\n        var _a;\n        provide('VBinder', (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy);\n        const VBinder = inject('VBinder', null);\n        const targetRef = ref(null);\n        /**\n         * If there's no nested vbinder, we can simply set the target ref.\n         *\n         * However, when it comes to:\n         * <VBinder> <- syncTarget = false\n         *\n         *              Should hold target DOM ref, but can't get it directly from\n         *              its VTarget. So if there are nested VBinder, we should:\n         *              1. Stop setting target DOM from level-1 VTarget\n         *              2. Set target DOM from level-2 VTarget\n         *              For (1), we need `syncTarget` to `false`\n         *              For (2), we need to set `syncTargetWithParent` to `true` on\n         *              level-2 VBinder\n         *   <VTarget>\n         *     <VBinder> <- syncTargetWithParent = true\n         *       <VTarget>target</VTarget>\n         *     </VBinder>\n         *     <VFollower>\n         *       content1\n         *     </VFollower>\n         *   </VTarget>\n         *   <VFollower>\n         *     content2\n         *   </VFollower>\n         * </VBinder>\n         */\n        const setTargetRef = (el) => {\n            targetRef.value = el;\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (VBinder && props.syncTargetWithParent) {\n                VBinder.setTargetRef(el);\n            }\n        };\n        // scroll related\n        let scrollableNodes = [];\n        const ensureScrollListener = () => {\n            let cursor = targetRef.value;\n            while (true) {\n                cursor = getScrollParent(cursor);\n                if (cursor === null)\n                    break;\n                scrollableNodes.push(cursor);\n            }\n            for (const el of scrollableNodes) {\n                on('scroll', el, onScroll, true);\n            }\n        };\n        const removeScrollListeners = () => {\n            for (const el of scrollableNodes) {\n                off('scroll', el, onScroll, true);\n            }\n            scrollableNodes = [];\n        };\n        const followerScrollListeners = new Set();\n        const addScrollListener = (listener) => {\n            if (followerScrollListeners.size === 0) {\n                ensureScrollListener();\n            }\n            if (!followerScrollListeners.has(listener)) {\n                followerScrollListeners.add(listener);\n            }\n        };\n        const removeScrollListener = (listener) => {\n            if (followerScrollListeners.has(listener)) {\n                followerScrollListeners.delete(listener);\n            }\n            if (followerScrollListeners.size === 0) {\n                removeScrollListeners();\n            }\n        };\n        const onScroll = () => {\n            beforeNextFrameOnce(onScrollRaf);\n        };\n        const onScrollRaf = () => {\n            followerScrollListeners.forEach((listener) => listener());\n        };\n        // resize related\n        const followerResizeListeners = new Set();\n        const addResizeListener = (listener) => {\n            if (followerResizeListeners.size === 0) {\n                on('resize', window, onResize);\n            }\n            if (!followerResizeListeners.has(listener)) {\n                followerResizeListeners.add(listener);\n            }\n        };\n        const removeResizeListener = (listener) => {\n            if (followerResizeListeners.has(listener)) {\n                followerResizeListeners.delete(listener);\n            }\n            if (followerResizeListeners.size === 0) {\n                off('resize', window, onResize);\n            }\n        };\n        const onResize = () => {\n            followerResizeListeners.forEach((listener) => listener());\n        };\n        onBeforeUnmount(() => {\n            off('resize', window, onResize);\n            removeScrollListeners();\n        });\n        return {\n            targetRef,\n            setTargetRef,\n            addScrollListener,\n            removeScrollListener,\n            addResizeListener,\n            removeResizeListener\n        };\n    },\n    render() {\n        return getSlot('binder', this.$slots);\n    }\n});\nexport default Binder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}