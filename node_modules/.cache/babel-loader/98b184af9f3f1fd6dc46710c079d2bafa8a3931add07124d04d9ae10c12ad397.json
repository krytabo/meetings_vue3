{"ast":null,"code":"import { defineComponent, h, inject } from 'vue';\nimport { NRadio } from '../../../radio';\nimport { dataTableInjectionKey } from '../interface';\n// Extract the radio to avoid useless rendering in table body\nexport default defineComponent({\n  name: 'DataTableBodyRadio',\n  props: {\n    rowKey: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      required: true\n    },\n    onUpdateChecked: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      mergedCheckedRowKeySetRef,\n      componentId\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(dataTableInjectionKey);\n    return () => {\n      const {\n        rowKey\n      } = props;\n      return h(NRadio, {\n        name: componentId,\n        disabled: props.disabled,\n        checked: mergedCheckedRowKeySetRef.value.has(rowKey),\n        onUpdateChecked: props.onUpdateChecked\n      });\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","h","inject","NRadio","dataTableInjectionKey","name","props","rowKey","type","String","Number","required","disabled","Boolean","onUpdateChecked","Function","setup","mergedCheckedRowKeySetRef","componentId","checked","value","has"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/data-table/src/TableParts/BodyRadio.js"],"sourcesContent":["import { defineComponent, h, inject } from 'vue';\nimport { NRadio } from '../../../radio';\nimport { dataTableInjectionKey } from '../interface';\n// Extract the radio to avoid useless rendering in table body\nexport default defineComponent({\n    name: 'DataTableBodyRadio',\n    props: {\n        rowKey: {\n            type: [String, Number],\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            required: true\n        },\n        onUpdateChecked: {\n            type: Function,\n            required: true\n        }\n    },\n    setup(props) {\n        const { mergedCheckedRowKeySetRef, componentId\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dataTableInjectionKey);\n        return () => {\n            const { rowKey } = props;\n            return (h(NRadio, { name: componentId, disabled: props.disabled, checked: mergedCheckedRowKeySetRef.value.has(rowKey), onUpdateChecked: props.onUpdateChecked }));\n        };\n    }\n});\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,CAAC,EAAEC,MAAM,QAAQ,KAAK;AAChD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,qBAAqB,QAAQ,cAAc;AACpD;AACA,eAAeJ,eAAe,CAAC;EAC3BK,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACHC,MAAM,EAAE;MACJC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtBC,QAAQ,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACNJ,IAAI,EAAEK,OAAO;MACbF,QAAQ,EAAE;IACd,CAAC;IACDG,eAAe,EAAE;MACbN,IAAI,EAAEO,QAAQ;MACdJ,QAAQ,EAAE;IACd;EACJ,CAAC;EACDK,KAAK,CAACV,KAAK,EAAE;IACT,MAAM;MAAEW,yBAAyB;MAAEC;MACnC;IACC,CAAC,GAAGhB,MAAM,CAACE,qBAAqB,CAAC;IAClC,OAAO,MAAM;MACT,MAAM;QAAEG;MAAO,CAAC,GAAGD,KAAK;MACxB,OAAQL,CAAC,CAACE,MAAM,EAAE;QAAEE,IAAI,EAAEa,WAAW;QAAEN,QAAQ,EAAEN,KAAK,CAACM,QAAQ;QAAEO,OAAO,EAAEF,yBAAyB,CAACG,KAAK,CAACC,GAAG,CAACd,MAAM,CAAC;QAAEO,eAAe,EAAER,KAAK,CAACQ;MAAgB,CAAC,CAAC;IACpK,CAAC;EACL;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}