{"ast":null,"code":"import { h, Transition, TransitionGroup, defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'FadeInExpandTransition',\n  props: {\n    appear: Boolean,\n    group: Boolean,\n    mode: String,\n    onLeave: Function,\n    onAfterLeave: Function,\n    onAfterEnter: Function,\n    width: Boolean,\n    // reverse mode is only used in tree\n    // it make it from expanded to collapsed after mounted\n    reverse: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    function handleBeforeLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = `${el.offsetWidth}px`;\n      } else {\n        el.style.maxHeight = `${el.offsetHeight}px`;\n      }\n      void el.offsetWidth;\n    }\n    function handleLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = '0';\n      } else {\n        el.style.maxHeight = '0';\n      }\n      void el.offsetWidth;\n      const {\n        onLeave\n      } = props;\n      if (onLeave) onLeave();\n    }\n    function handleAfterLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = '';\n      } else {\n        el.style.maxHeight = '';\n      }\n      const {\n        onAfterLeave\n      } = props;\n      if (onAfterLeave) onAfterLeave();\n    }\n    function handleEnter(el) {\n      el.style.transition = 'none';\n      if (props.width) {\n        const memorizedWidth = el.offsetWidth;\n        el.style.maxWidth = '0';\n        void el.offsetWidth;\n        el.style.transition = '';\n        el.style.maxWidth = `${memorizedWidth}px`;\n      } else {\n        if (props.reverse) {\n          el.style.maxHeight = `${el.offsetHeight}px`;\n          void el.offsetHeight;\n          el.style.transition = '';\n          el.style.maxHeight = '0';\n        } else {\n          const memorizedHeight = el.offsetHeight;\n          el.style.maxHeight = '0';\n          void el.offsetWidth;\n          el.style.transition = '';\n          el.style.maxHeight = `${memorizedHeight}px`;\n        }\n      }\n      void el.offsetWidth;\n    }\n    function handleAfterEnter(el) {\n      var _a;\n      if (props.width) {\n        el.style.maxWidth = '';\n      } else {\n        if (!props.reverse) {\n          el.style.maxHeight = '';\n        }\n      }\n      (_a = props.onAfterEnter) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n    return () => {\n      const type = props.group ? TransitionGroup : Transition;\n      return h(type, {\n        name: props.width ? 'fade-in-width-expand-transition' : 'fade-in-height-expand-transition',\n        mode: props.mode,\n        appear: props.appear,\n        onEnter: handleEnter,\n        onAfterEnter: handleAfterEnter,\n        onBeforeLeave: handleBeforeLeave,\n        onLeave: handleLeave,\n        onAfterLeave: handleAfterLeave\n      }, slots);\n    };\n  }\n});","map":{"version":3,"names":["h","Transition","TransitionGroup","defineComponent","name","props","appear","Boolean","group","mode","String","onLeave","Function","onAfterLeave","onAfterEnter","width","reverse","setup","slots","handleBeforeLeave","el","style","maxWidth","offsetWidth","maxHeight","offsetHeight","handleLeave","handleAfterLeave","handleEnter","transition","memorizedWidth","memorizedHeight","handleAfterEnter","_a","call","type","onEnter","onBeforeLeave"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/_internal/fade-in-expand-transition/src/FadeInExpandTransition.js"],"sourcesContent":["import { h, Transition, TransitionGroup, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'FadeInExpandTransition',\n    props: {\n        appear: Boolean,\n        group: Boolean,\n        mode: String,\n        onLeave: Function,\n        onAfterLeave: Function,\n        onAfterEnter: Function,\n        width: Boolean,\n        // reverse mode is only used in tree\n        // it make it from expanded to collapsed after mounted\n        reverse: Boolean\n    },\n    setup(props, { slots }) {\n        function handleBeforeLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = `${el.offsetWidth}px`;\n            }\n            else {\n                el.style.maxHeight = `${el.offsetHeight}px`;\n            }\n            void el.offsetWidth;\n        }\n        function handleLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '0';\n            }\n            else {\n                el.style.maxHeight = '0';\n            }\n            void el.offsetWidth;\n            const { onLeave } = props;\n            if (onLeave)\n                onLeave();\n        }\n        function handleAfterLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                el.style.maxHeight = '';\n            }\n            const { onAfterLeave } = props;\n            if (onAfterLeave)\n                onAfterLeave();\n        }\n        function handleEnter(el) {\n            el.style.transition = 'none';\n            if (props.width) {\n                const memorizedWidth = el.offsetWidth;\n                el.style.maxWidth = '0';\n                void el.offsetWidth;\n                el.style.transition = '';\n                el.style.maxWidth = `${memorizedWidth}px`;\n            }\n            else {\n                if (props.reverse) {\n                    el.style.maxHeight = `${el.offsetHeight}px`;\n                    void el.offsetHeight;\n                    el.style.transition = '';\n                    el.style.maxHeight = '0';\n                }\n                else {\n                    const memorizedHeight = el.offsetHeight;\n                    el.style.maxHeight = '0';\n                    void el.offsetWidth;\n                    el.style.transition = '';\n                    el.style.maxHeight = `${memorizedHeight}px`;\n                }\n            }\n            void el.offsetWidth;\n        }\n        function handleAfterEnter(el) {\n            var _a;\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                if (!props.reverse) {\n                    el.style.maxHeight = '';\n                }\n            }\n            (_a = props.onAfterEnter) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return () => {\n            const type = props.group ? TransitionGroup : Transition;\n            return h(type, {\n                name: props.width\n                    ? 'fade-in-width-expand-transition'\n                    : 'fade-in-height-expand-transition',\n                mode: props.mode,\n                appear: props.appear,\n                onEnter: handleEnter,\n                onAfterEnter: handleAfterEnter,\n                onBeforeLeave: handleBeforeLeave,\n                onLeave: handleLeave,\n                onAfterLeave: handleAfterLeave\n            }, slots);\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}