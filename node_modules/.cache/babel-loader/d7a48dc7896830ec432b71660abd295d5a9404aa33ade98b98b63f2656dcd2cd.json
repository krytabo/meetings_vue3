{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, nextTick, toRef, watch, ref, inject, defineComponent, provide, withDirectives, vShow, Transition, mergeProps, cloneVNode, computed } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { VFocusTrap } from 'vueuc';\nimport { dialogPropKeys } from '../../dialog/src/dialogProps';\nimport { NDialog } from '../../dialog/src/Dialog';\nimport { cardBasePropKeys } from '../../card/src/Card';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { NCard } from '../../card';\nimport { getFirstSlotVNode, keep, useLockHtmlScroll, warn } from '../../_utils';\nimport { modalBodyInjectionKey, modalInjectionKey } from './interface';\nimport { presetProps } from './presetProps';\nexport default defineComponent({\n  name: 'ModalBody',\n  inheritAttrs: false,\n  props: Object.assign(Object.assign({\n    show: {\n      type: Boolean,\n      required: true\n    },\n    preset: String,\n    displayDirective: {\n      type: String,\n      required: true\n    },\n    trapFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoFocus: {\n      type: Boolean,\n      default: true\n    },\n    blockScroll: Boolean\n  }, presetProps), {\n    renderMask: Function,\n    // events\n    onClickoutside: Function,\n    onBeforeLeave: {\n      type: Function,\n      required: true\n    },\n    onAfterLeave: {\n      type: Function,\n      required: true\n    },\n    onPositiveClick: {\n      type: Function,\n      required: true\n    },\n    onNegativeClick: {\n      type: Function,\n      required: true\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    onAfterEnter: Function,\n    onEsc: Function\n  }),\n  setup(props) {\n    const bodyRef = ref(null);\n    const scrollbarRef = ref(null);\n    const displayedRef = ref(props.show);\n    const transformOriginXRef = ref(null);\n    const transformOriginYRef = ref(null);\n    watch(toRef(props, 'show'), value => {\n      if (value) displayedRef.value = true;\n    });\n    useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NModal = inject(modalInjectionKey);\n    function styleTransformOrigin() {\n      if (NModal.transformOriginRef.value === 'center') {\n        return '';\n      }\n      const {\n        value: transformOriginX\n      } = transformOriginXRef;\n      const {\n        value: transformOriginY\n      } = transformOriginYRef;\n      if (transformOriginX === null || transformOriginY === null) {\n        return '';\n      } else if (scrollbarRef.value) {\n        const scrollTop = scrollbarRef.value.containerScrollTop;\n        return `${transformOriginX}px ${transformOriginY + scrollTop}px`;\n      }\n      return '';\n    }\n    function syncTransformOrigin(el) {\n      if (NModal.transformOriginRef.value === 'center') {\n        return;\n      }\n      const mousePosition = NModal.getMousePosition();\n      if (!mousePosition) {\n        return;\n      }\n      if (!scrollbarRef.value) return;\n      const scrollTop = scrollbarRef.value.containerScrollTop;\n      const {\n        offsetLeft,\n        offsetTop\n      } = el;\n      if (mousePosition) {\n        const top = mousePosition.y;\n        const left = mousePosition.x;\n        transformOriginXRef.value = -(offsetLeft - left);\n        transformOriginYRef.value = -(offsetTop - top - scrollTop);\n      }\n      el.style.transformOrigin = styleTransformOrigin();\n    }\n    function handleEnter(el) {\n      void nextTick(() => {\n        syncTransformOrigin(el);\n      });\n    }\n    function handleBeforeLeave(el) {\n      el.style.transformOrigin = styleTransformOrigin();\n      props.onBeforeLeave();\n    }\n    function handleAfterLeave() {\n      displayedRef.value = false;\n      transformOriginXRef.value = null;\n      transformOriginYRef.value = null;\n      props.onAfterLeave();\n    }\n    function handleCloseClick() {\n      const {\n        onClose\n      } = props;\n      if (onClose) {\n        onClose();\n      }\n    }\n    function handleNegativeClick() {\n      props.onNegativeClick();\n    }\n    function handlePositiveClick() {\n      props.onPositiveClick();\n    }\n    const childNodeRef = ref(null);\n    watch(childNodeRef, node => {\n      if (node) {\n        void nextTick(() => {\n          const el = node.el;\n          if (el && bodyRef.value !== el) {\n            bodyRef.value = el;\n          }\n        });\n      }\n    });\n    provide(modalBodyInjectionKey, bodyRef);\n    provide(drawerBodyInjectionKey, null);\n    provide(popoverBodyInjectionKey, null);\n    return {\n      mergedTheme: NModal.mergedThemeRef,\n      appear: NModal.appearRef,\n      isMounted: NModal.isMountedRef,\n      mergedClsPrefix: NModal.mergedClsPrefixRef,\n      bodyRef,\n      scrollbarRef,\n      displayed: displayedRef,\n      childNodeRef,\n      handlePositiveClick,\n      handleNegativeClick,\n      handleCloseClick,\n      handleAfterLeave,\n      handleBeforeLeave,\n      handleEnter\n    };\n  },\n  render() {\n    const {\n      $slots,\n      $attrs,\n      handleEnter,\n      handleAfterLeave,\n      handleBeforeLeave,\n      preset,\n      mergedClsPrefix\n    } = this;\n    let childNode = null;\n    if (!preset) {\n      childNode = getFirstSlotVNode($slots);\n      if (!childNode) {\n        warn('modal', 'default slot is empty');\n        return;\n      }\n      childNode = cloneVNode(childNode);\n      childNode.props = mergeProps({\n        class: `${mergedClsPrefix}-modal`\n      }, $attrs, childNode.props || {});\n    }\n    return this.displayDirective === 'show' || this.displayed || this.show ? withDirectives(h(\"div\", {\n      role: \"none\",\n      class: `${mergedClsPrefix}-modal-body-wrapper`\n    }, h(NScrollbar, {\n      ref: \"scrollbarRef\",\n      theme: this.mergedTheme.peers.Scrollbar,\n      themeOverrides: this.mergedTheme.peerOverrides.Scrollbar,\n      contentClass: `${mergedClsPrefix}-modal-scroll-content`\n    }, {\n      default: () => {\n        var _a;\n        return [(_a = this.renderMask) === null || _a === void 0 ? void 0 : _a.call(this), h(VFocusTrap, {\n          disabled: !this.trapFocus,\n          active: this.show,\n          onEsc: this.onEsc,\n          autoFocus: this.autoFocus\n        }, {\n          default: () => {\n            var _a;\n            return h(Transition, {\n              name: \"fade-in-scale-up-transition\",\n              appear: (_a = this.appear) !== null && _a !== void 0 ? _a : this.isMounted,\n              onEnter: handleEnter,\n              onAfterEnter: this.onAfterEnter,\n              onAfterLeave: handleAfterLeave,\n              onBeforeLeave: handleBeforeLeave\n            }, {\n              default: () => {\n                const dirs = [[vShow, this.show]];\n                const {\n                  onClickoutside\n                } = this;\n                if (onClickoutside) {\n                  dirs.push([clickoutside, this.onClickoutside, undefined, {\n                    capture: true\n                  }]);\n                }\n                return withDirectives(this.preset === 'confirm' || this.preset === 'dialog' ? h(NDialog, Object.assign({}, this.$attrs, {\n                  class: [`${mergedClsPrefix}-modal`, this.$attrs.class],\n                  ref: \"bodyRef\",\n                  theme: this.mergedTheme.peers.Dialog,\n                  themeOverrides: this.mergedTheme.peerOverrides.Dialog\n                }, keep(this.$props, dialogPropKeys), {\n                  \"aria-modal\": \"true\"\n                }), $slots) : this.preset === 'card' ? h(NCard, Object.assign({}, this.$attrs, {\n                  ref: \"bodyRef\",\n                  class: [`${mergedClsPrefix}-modal`, this.$attrs.class],\n                  theme: this.mergedTheme.peers.Card,\n                  themeOverrides: this.mergedTheme.peerOverrides.Card\n                }, keep(this.$props, cardBasePropKeys), {\n                  \"aria-modal\": \"true\",\n                  role: \"dialog\"\n                }), $slots) : this.childNodeRef = childNode, dirs);\n              }\n            });\n          }\n        })];\n      }\n    })), [[vShow, this.displayDirective === 'if' || this.displayed || this.show]]) : null;\n  }\n});","map":{"version":3,"names":["h","nextTick","toRef","watch","ref","inject","defineComponent","provide","withDirectives","vShow","Transition","mergeProps","cloneVNode","computed","clickoutside","VFocusTrap","dialogPropKeys","NDialog","cardBasePropKeys","drawerBodyInjectionKey","popoverBodyInjectionKey","NScrollbar","NCard","getFirstSlotVNode","keep","useLockHtmlScroll","warn","modalBodyInjectionKey","modalInjectionKey","presetProps","name","inheritAttrs","props","Object","assign","show","type","Boolean","required","preset","String","displayDirective","trapFocus","default","autoFocus","blockScroll","renderMask","Function","onClickoutside","onBeforeLeave","onAfterLeave","onPositiveClick","onNegativeClick","onClose","onAfterEnter","onEsc","setup","bodyRef","scrollbarRef","displayedRef","transformOriginXRef","transformOriginYRef","value","NModal","styleTransformOrigin","transformOriginRef","transformOriginX","transformOriginY","scrollTop","containerScrollTop","syncTransformOrigin","el","mousePosition","getMousePosition","offsetLeft","offsetTop","top","y","left","x","style","transformOrigin","handleEnter","handleBeforeLeave","handleAfterLeave","handleCloseClick","handleNegativeClick","handlePositiveClick","childNodeRef","node","mergedTheme","mergedThemeRef","appear","appearRef","isMounted","isMountedRef","mergedClsPrefix","mergedClsPrefixRef","displayed","render","$slots","$attrs","childNode","class","role","theme","peers","Scrollbar","themeOverrides","peerOverrides","contentClass","_a","call","disabled","active","onEnter","dirs","push","undefined","capture","Dialog","$props","Card"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/modal/src/BodyWrapper.js"],"sourcesContent":["import { h, nextTick, toRef, watch, ref, inject, defineComponent, provide, withDirectives, vShow, Transition, mergeProps, cloneVNode, computed } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { VFocusTrap } from 'vueuc';\nimport { dialogPropKeys } from '../../dialog/src/dialogProps';\nimport { NDialog } from '../../dialog/src/Dialog';\nimport { cardBasePropKeys } from '../../card/src/Card';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { NCard } from '../../card';\nimport { getFirstSlotVNode, keep, useLockHtmlScroll, warn } from '../../_utils';\nimport { modalBodyInjectionKey, modalInjectionKey } from './interface';\nimport { presetProps } from './presetProps';\nexport default defineComponent({\n    name: 'ModalBody',\n    inheritAttrs: false,\n    props: Object.assign(Object.assign({ show: {\n            type: Boolean,\n            required: true\n        }, preset: String, displayDirective: {\n            type: String,\n            required: true\n        }, trapFocus: {\n            type: Boolean,\n            default: true\n        }, autoFocus: {\n            type: Boolean,\n            default: true\n        }, blockScroll: Boolean }, presetProps), { renderMask: Function, \n        // events\n        onClickoutside: Function, onBeforeLeave: {\n            type: Function,\n            required: true\n        }, onAfterLeave: {\n            type: Function,\n            required: true\n        }, onPositiveClick: {\n            type: Function,\n            required: true\n        }, onNegativeClick: {\n            type: Function,\n            required: true\n        }, onClose: {\n            type: Function,\n            required: true\n        }, onAfterEnter: Function, onEsc: Function }),\n    setup(props) {\n        const bodyRef = ref(null);\n        const scrollbarRef = ref(null);\n        const displayedRef = ref(props.show);\n        const transformOriginXRef = ref(null);\n        const transformOriginYRef = ref(null);\n        watch(toRef(props, 'show'), (value) => {\n            if (value)\n                displayedRef.value = true;\n        });\n        useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NModal = inject(modalInjectionKey);\n        function styleTransformOrigin() {\n            if (NModal.transformOriginRef.value === 'center') {\n                return '';\n            }\n            const { value: transformOriginX } = transformOriginXRef;\n            const { value: transformOriginY } = transformOriginYRef;\n            if (transformOriginX === null || transformOriginY === null) {\n                return '';\n            }\n            else if (scrollbarRef.value) {\n                const scrollTop = scrollbarRef.value.containerScrollTop;\n                return `${transformOriginX}px ${transformOriginY + scrollTop}px`;\n            }\n            return '';\n        }\n        function syncTransformOrigin(el) {\n            if (NModal.transformOriginRef.value === 'center') {\n                return;\n            }\n            const mousePosition = NModal.getMousePosition();\n            if (!mousePosition) {\n                return;\n            }\n            if (!scrollbarRef.value)\n                return;\n            const scrollTop = scrollbarRef.value.containerScrollTop;\n            const { offsetLeft, offsetTop } = el;\n            if (mousePosition) {\n                const top = mousePosition.y;\n                const left = mousePosition.x;\n                transformOriginXRef.value = -(offsetLeft - left);\n                transformOriginYRef.value = -(offsetTop - top - scrollTop);\n            }\n            el.style.transformOrigin = styleTransformOrigin();\n        }\n        function handleEnter(el) {\n            void nextTick(() => {\n                syncTransformOrigin(el);\n            });\n        }\n        function handleBeforeLeave(el) {\n            el.style.transformOrigin = styleTransformOrigin();\n            props.onBeforeLeave();\n        }\n        function handleAfterLeave() {\n            displayedRef.value = false;\n            transformOriginXRef.value = null;\n            transformOriginYRef.value = null;\n            props.onAfterLeave();\n        }\n        function handleCloseClick() {\n            const { onClose } = props;\n            if (onClose) {\n                onClose();\n            }\n        }\n        function handleNegativeClick() {\n            props.onNegativeClick();\n        }\n        function handlePositiveClick() {\n            props.onPositiveClick();\n        }\n        const childNodeRef = ref(null);\n        watch(childNodeRef, (node) => {\n            if (node) {\n                void nextTick(() => {\n                    const el = node.el;\n                    if (el && bodyRef.value !== el) {\n                        bodyRef.value = el;\n                    }\n                });\n            }\n        });\n        provide(modalBodyInjectionKey, bodyRef);\n        provide(drawerBodyInjectionKey, null);\n        provide(popoverBodyInjectionKey, null);\n        return {\n            mergedTheme: NModal.mergedThemeRef,\n            appear: NModal.appearRef,\n            isMounted: NModal.isMountedRef,\n            mergedClsPrefix: NModal.mergedClsPrefixRef,\n            bodyRef,\n            scrollbarRef,\n            displayed: displayedRef,\n            childNodeRef,\n            handlePositiveClick,\n            handleNegativeClick,\n            handleCloseClick,\n            handleAfterLeave,\n            handleBeforeLeave,\n            handleEnter\n        };\n    },\n    render() {\n        const { $slots, $attrs, handleEnter, handleAfterLeave, handleBeforeLeave, preset, mergedClsPrefix } = this;\n        let childNode = null;\n        if (!preset) {\n            childNode = getFirstSlotVNode($slots);\n            if (!childNode) {\n                warn('modal', 'default slot is empty');\n                return;\n            }\n            childNode = cloneVNode(childNode);\n            childNode.props = mergeProps({\n                class: `${mergedClsPrefix}-modal`\n            }, $attrs, childNode.props || {});\n        }\n        return this.displayDirective === 'show' || this.displayed || this.show\n            ? withDirectives(h(\"div\", { role: \"none\", class: `${mergedClsPrefix}-modal-body-wrapper` },\n                h(NScrollbar, { ref: \"scrollbarRef\", theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar, contentClass: `${mergedClsPrefix}-modal-scroll-content` }, {\n                    default: () => {\n                        var _a;\n                        return [\n                            (_a = this.renderMask) === null || _a === void 0 ? void 0 : _a.call(this),\n                            h(VFocusTrap, { disabled: !this.trapFocus, active: this.show, onEsc: this.onEsc, autoFocus: this.autoFocus }, {\n                                default: () => {\n                                    var _a;\n                                    return (h(Transition, { name: \"fade-in-scale-up-transition\", appear: (_a = this.appear) !== null && _a !== void 0 ? _a : this.isMounted, onEnter: handleEnter, onAfterEnter: this.onAfterEnter, onAfterLeave: handleAfterLeave, onBeforeLeave: handleBeforeLeave }, {\n                                        default: () => {\n                                            const dirs = [\n                                                [vShow, this.show]\n                                            ];\n                                            const { onClickoutside } = this;\n                                            if (onClickoutside) {\n                                                dirs.push([\n                                                    clickoutside,\n                                                    this.onClickoutside,\n                                                    undefined,\n                                                    { capture: true }\n                                                ]);\n                                            }\n                                            return withDirectives((this.preset === 'confirm' ||\n                                                this.preset === 'dialog' ? (h(NDialog, Object.assign({}, this.$attrs, { class: [\n                                                    `${mergedClsPrefix}-modal`,\n                                                    this.$attrs.class\n                                                ], ref: \"bodyRef\", theme: this.mergedTheme.peers.Dialog, themeOverrides: this.mergedTheme.peerOverrides.Dialog }, keep(this.$props, dialogPropKeys), { \"aria-modal\": \"true\" }), $slots)) : this.preset === 'card' ? (h(NCard, Object.assign({}, this.$attrs, { ref: \"bodyRef\", class: [\n                                                    `${mergedClsPrefix}-modal`,\n                                                    this.$attrs.class\n                                                ], theme: this.mergedTheme.peers.Card, themeOverrides: this.mergedTheme.peerOverrides.Card }, keep(this.$props, cardBasePropKeys), { \"aria-modal\": \"true\", role: \"dialog\" }), $slots)) : ((this.childNodeRef = childNode))), dirs);\n                                        }\n                                    }));\n                                }\n                            })\n                        ];\n                    }\n                })), [\n                [\n                    vShow,\n                    this.displayDirective === 'if' || this.displayed || this.show\n                ]\n            ])\n            : null;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}