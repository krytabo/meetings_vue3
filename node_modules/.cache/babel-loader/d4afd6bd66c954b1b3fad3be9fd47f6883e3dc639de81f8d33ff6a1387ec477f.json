{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, defineComponent, ref, Fragment, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { createId, getPreciseEventTarget } from 'seemly';\nimport { on, off } from 'evtd';\nimport { focusFirstDescendant, focusLastDescendant } from './utils';\nimport { resolveTo } from '../../shared';\nlet stack = [];\nexport const FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    disabled: Boolean,\n    active: Boolean,\n    autoFocus: {\n      type: Boolean,\n      default: true\n    },\n    onEsc: Function,\n    initialFocusTo: String,\n    finalFocusTo: String,\n    returnFocusOnDeactivated: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup(props) {\n    const id = createId();\n    const focusableStartRef = ref(null);\n    const focusableEndRef = ref(null);\n    let activated = false;\n    let ignoreInternalFocusChange = false;\n    const lastFocusedElement = typeof document === 'undefined' ? null : document.activeElement;\n    function isCurrentActive() {\n      const currentActiveId = stack[stack.length - 1];\n      return currentActiveId === id;\n    }\n    function handleDocumentKeydown(e) {\n      var _a;\n      if (e.code === 'Escape') {\n        if (isCurrentActive()) {\n          (_a = props.onEsc) === null || _a === void 0 ? void 0 : _a.call(props, e);\n        }\n      }\n    }\n    onMounted(() => {\n      watch(() => props.active, value => {\n        if (value) {\n          activate();\n          on('keydown', document, handleDocumentKeydown);\n        } else {\n          off('keydown', document, handleDocumentKeydown);\n          if (activated) {\n            deactivate();\n          }\n        }\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(() => {\n      off('keydown', document, handleDocumentKeydown);\n      if (activated) deactivate();\n    });\n    function handleDocumentFocus(e) {\n      if (ignoreInternalFocusChange) return;\n      if (isCurrentActive()) {\n        const mainEl = getMainEl();\n        if (mainEl === null) return;\n        if (mainEl.contains(getPreciseEventTarget(e))) return;\n        // I don't handle shift + tab status since it's too tricky to handle\n        // Not impossible but I need to sleep\n        resetFocusTo('first');\n      }\n    }\n    function getMainEl() {\n      const focusableStartEl = focusableStartRef.value;\n      if (focusableStartEl === null) return null;\n      let mainEl = focusableStartEl;\n      while (true) {\n        mainEl = mainEl.nextSibling;\n        if (mainEl === null) break;\n        if (mainEl instanceof Element && mainEl.tagName === 'DIV') {\n          break;\n        }\n      }\n      return mainEl;\n    }\n    function activate() {\n      var _a;\n      if (props.disabled) return;\n      stack.push(id);\n      if (props.autoFocus) {\n        const {\n          initialFocusTo\n        } = props;\n        if (initialFocusTo === undefined) {\n          resetFocusTo('first');\n        } else {\n          (_a = resolveTo(initialFocusTo)) === null || _a === void 0 ? void 0 : _a.focus({\n            preventScroll: true\n          });\n        }\n      }\n      activated = true;\n      document.addEventListener('focus', handleDocumentFocus, true);\n    }\n    function deactivate() {\n      var _a;\n      if (props.disabled) return;\n      document.removeEventListener('focus', handleDocumentFocus, true);\n      stack = stack.filter(idInStack => idInStack !== id);\n      if (isCurrentActive()) return;\n      const {\n        finalFocusTo\n      } = props;\n      if (finalFocusTo !== undefined) {\n        (_a = resolveTo(finalFocusTo)) === null || _a === void 0 ? void 0 : _a.focus({\n          preventScroll: true\n        });\n      } else if (props.returnFocusOnDeactivated) {\n        if (lastFocusedElement instanceof HTMLElement) {\n          ignoreInternalFocusChange = true;\n          lastFocusedElement.focus({\n            preventScroll: true\n          });\n          ignoreInternalFocusChange = false;\n        }\n      }\n    }\n    function resetFocusTo(target) {\n      if (!isCurrentActive()) return;\n      if (props.active) {\n        const focusableStartEl = focusableStartRef.value;\n        const focusableEndEl = focusableEndRef.value;\n        if (focusableStartEl !== null && focusableEndEl !== null) {\n          const mainEl = getMainEl();\n          if (mainEl == null || mainEl === focusableEndEl) {\n            ignoreInternalFocusChange = true;\n            focusableStartEl.focus({\n              preventScroll: true\n            });\n            ignoreInternalFocusChange = false;\n            return;\n          }\n          ignoreInternalFocusChange = true;\n          const focused = target === 'first' ? focusFirstDescendant(mainEl) : focusLastDescendant(mainEl);\n          ignoreInternalFocusChange = false;\n          if (!focused) {\n            ignoreInternalFocusChange = true;\n            focusableStartEl.focus({\n              preventScroll: true\n            });\n            ignoreInternalFocusChange = false;\n          }\n        }\n      }\n    }\n    function handleStartFocus(e) {\n      if (ignoreInternalFocusChange) return;\n      const mainEl = getMainEl();\n      if (mainEl === null) return;\n      if (e.relatedTarget !== null && mainEl.contains(e.relatedTarget)) {\n        // if it comes from inner, focus last\n        resetFocusTo('last');\n      } else {\n        // otherwise focus first\n        resetFocusTo('first');\n      }\n    }\n    function handleEndFocus(e) {\n      if (ignoreInternalFocusChange) return;\n      if (e.relatedTarget !== null && e.relatedTarget === focusableStartRef.value) {\n        // if it comes from first, focus last\n        resetFocusTo('last');\n      } else {\n        // otherwise focus first\n        resetFocusTo('first');\n      }\n    }\n    return {\n      focusableStartRef,\n      focusableEndRef,\n      focusableStyle: 'position: absolute; height: 0; width: 0;',\n      handleStartFocus,\n      handleEndFocus\n    };\n  },\n  render() {\n    const {\n      default: defaultSlot\n    } = this.$slots;\n    if (defaultSlot === undefined) return null;\n    if (this.disabled) return defaultSlot();\n    const {\n      active,\n      focusableStyle\n    } = this;\n    return h(Fragment, null, [h('div', {\n      'aria-hidden': 'true',\n      tabindex: active ? '0' : '-1',\n      ref: 'focusableStartRef',\n      style: focusableStyle,\n      onFocus: this.handleStartFocus\n    }), defaultSlot(), h('div', {\n      'aria-hidden': 'true',\n      style: focusableStyle,\n      ref: 'focusableEndRef',\n      tabindex: active ? '0' : '-1',\n      onFocus: this.handleEndFocus\n    })]);\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","Fragment","onMounted","onBeforeUnmount","watch","createId","getPreciseEventTarget","on","off","focusFirstDescendant","focusLastDescendant","resolveTo","stack","FocusTrap","name","props","disabled","Boolean","active","autoFocus","type","default","onEsc","Function","initialFocusTo","String","finalFocusTo","returnFocusOnDeactivated","setup","id","focusableStartRef","focusableEndRef","activated","ignoreInternalFocusChange","lastFocusedElement","document","activeElement","isCurrentActive","currentActiveId","length","handleDocumentKeydown","e","_a","code","call","value","activate","deactivate","immediate","handleDocumentFocus","mainEl","getMainEl","contains","resetFocusTo","focusableStartEl","nextSibling","Element","tagName","push","undefined","focus","preventScroll","addEventListener","removeEventListener","filter","idInStack","HTMLElement","target","focusableEndEl","focused","handleStartFocus","relatedTarget","handleEndFocus","focusableStyle","render","defaultSlot","$slots","tabindex","style","onFocus"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/vueuc/es/focus-trap/src/index.js"],"sourcesContent":["import { h, defineComponent, ref, Fragment, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { createId, getPreciseEventTarget } from 'seemly';\nimport { on, off } from 'evtd';\nimport { focusFirstDescendant, focusLastDescendant } from './utils';\nimport { resolveTo } from '../../shared';\nlet stack = [];\nexport const FocusTrap = defineComponent({\n    name: 'FocusTrap',\n    props: {\n        disabled: Boolean,\n        active: Boolean,\n        autoFocus: {\n            type: Boolean,\n            default: true\n        },\n        onEsc: Function,\n        initialFocusTo: String,\n        finalFocusTo: String,\n        returnFocusOnDeactivated: {\n            type: Boolean,\n            default: true\n        }\n    },\n    setup(props) {\n        const id = createId();\n        const focusableStartRef = ref(null);\n        const focusableEndRef = ref(null);\n        let activated = false;\n        let ignoreInternalFocusChange = false;\n        const lastFocusedElement = typeof document === 'undefined' ? null : document.activeElement;\n        function isCurrentActive() {\n            const currentActiveId = stack[stack.length - 1];\n            return currentActiveId === id;\n        }\n        function handleDocumentKeydown(e) {\n            var _a;\n            if (e.code === 'Escape') {\n                if (isCurrentActive()) {\n                    (_a = props.onEsc) === null || _a === void 0 ? void 0 : _a.call(props, e);\n                }\n            }\n        }\n        onMounted(() => {\n            watch(() => props.active, (value) => {\n                if (value) {\n                    activate();\n                    on('keydown', document, handleDocumentKeydown);\n                }\n                else {\n                    off('keydown', document, handleDocumentKeydown);\n                    if (activated) {\n                        deactivate();\n                    }\n                }\n            }, {\n                immediate: true\n            });\n        });\n        onBeforeUnmount(() => {\n            off('keydown', document, handleDocumentKeydown);\n            if (activated)\n                deactivate();\n        });\n        function handleDocumentFocus(e) {\n            if (ignoreInternalFocusChange)\n                return;\n            if (isCurrentActive()) {\n                const mainEl = getMainEl();\n                if (mainEl === null)\n                    return;\n                if (mainEl.contains(getPreciseEventTarget(e)))\n                    return;\n                // I don't handle shift + tab status since it's too tricky to handle\n                // Not impossible but I need to sleep\n                resetFocusTo('first');\n            }\n        }\n        function getMainEl() {\n            const focusableStartEl = focusableStartRef.value;\n            if (focusableStartEl === null)\n                return null;\n            let mainEl = focusableStartEl;\n            while (true) {\n                mainEl = mainEl.nextSibling;\n                if (mainEl === null)\n                    break;\n                if (mainEl instanceof Element && mainEl.tagName === 'DIV') {\n                    break;\n                }\n            }\n            return mainEl;\n        }\n        function activate() {\n            var _a;\n            if (props.disabled)\n                return;\n            stack.push(id);\n            if (props.autoFocus) {\n                const { initialFocusTo } = props;\n                if (initialFocusTo === undefined) {\n                    resetFocusTo('first');\n                }\n                else {\n                    (_a = resolveTo(initialFocusTo)) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });\n                }\n            }\n            activated = true;\n            document.addEventListener('focus', handleDocumentFocus, true);\n        }\n        function deactivate() {\n            var _a;\n            if (props.disabled)\n                return;\n            document.removeEventListener('focus', handleDocumentFocus, true);\n            stack = stack.filter((idInStack) => idInStack !== id);\n            if (isCurrentActive())\n                return;\n            const { finalFocusTo } = props;\n            if (finalFocusTo !== undefined) {\n                (_a = resolveTo(finalFocusTo)) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });\n            }\n            else if (props.returnFocusOnDeactivated) {\n                if (lastFocusedElement instanceof HTMLElement) {\n                    ignoreInternalFocusChange = true;\n                    lastFocusedElement.focus({ preventScroll: true });\n                    ignoreInternalFocusChange = false;\n                }\n            }\n        }\n        function resetFocusTo(target) {\n            if (!isCurrentActive())\n                return;\n            if (props.active) {\n                const focusableStartEl = focusableStartRef.value;\n                const focusableEndEl = focusableEndRef.value;\n                if (focusableStartEl !== null && focusableEndEl !== null) {\n                    const mainEl = getMainEl();\n                    if (mainEl == null || mainEl === focusableEndEl) {\n                        ignoreInternalFocusChange = true;\n                        focusableStartEl.focus({ preventScroll: true });\n                        ignoreInternalFocusChange = false;\n                        return;\n                    }\n                    ignoreInternalFocusChange = true;\n                    const focused = target === 'first'\n                        ? focusFirstDescendant(mainEl)\n                        : focusLastDescendant(mainEl);\n                    ignoreInternalFocusChange = false;\n                    if (!focused) {\n                        ignoreInternalFocusChange = true;\n                        focusableStartEl.focus({ preventScroll: true });\n                        ignoreInternalFocusChange = false;\n                    }\n                }\n            }\n        }\n        function handleStartFocus(e) {\n            if (ignoreInternalFocusChange)\n                return;\n            const mainEl = getMainEl();\n            if (mainEl === null)\n                return;\n            if (e.relatedTarget !== null && mainEl.contains(e.relatedTarget)) {\n                // if it comes from inner, focus last\n                resetFocusTo('last');\n            }\n            else {\n                // otherwise focus first\n                resetFocusTo('first');\n            }\n        }\n        function handleEndFocus(e) {\n            if (ignoreInternalFocusChange)\n                return;\n            if (e.relatedTarget !== null &&\n                e.relatedTarget === focusableStartRef.value) {\n                // if it comes from first, focus last\n                resetFocusTo('last');\n            }\n            else {\n                // otherwise focus first\n                resetFocusTo('first');\n            }\n        }\n        return {\n            focusableStartRef,\n            focusableEndRef,\n            focusableStyle: 'position: absolute; height: 0; width: 0;',\n            handleStartFocus,\n            handleEndFocus\n        };\n    },\n    render() {\n        const { default: defaultSlot } = this.$slots;\n        if (defaultSlot === undefined)\n            return null;\n        if (this.disabled)\n            return defaultSlot();\n        const { active, focusableStyle } = this;\n        return h(Fragment, null, [\n            h('div', {\n                'aria-hidden': 'true',\n                tabindex: active ? '0' : '-1',\n                ref: 'focusableStartRef',\n                style: focusableStyle,\n                onFocus: this.handleStartFocus\n            }),\n            defaultSlot(),\n            h('div', {\n                'aria-hidden': 'true',\n                style: focusableStyle,\n                ref: 'focusableEndRef',\n                tabindex: active ? '0' : '-1',\n                onFocus: this.handleEndFocus\n            })\n        ]);\n    }\n});\n"],"mappings":";AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,KAAK,QAAQ,KAAK;AAC1F,SAASC,QAAQ,EAAEC,qBAAqB,QAAQ,QAAQ;AACxD,SAASC,EAAE,EAAEC,GAAG,QAAQ,MAAM;AAC9B,SAASC,oBAAoB,EAAEC,mBAAmB,QAAQ,SAAS;AACnE,SAASC,SAAS,QAAQ,cAAc;AACxC,IAAIC,KAAK,GAAG,EAAE;AACd,OAAO,MAAMC,SAAS,GAAGd,eAAe,CAAC;EACrCe,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACHC,QAAQ,EAAEC,OAAO;IACjBC,MAAM,EAAED,OAAO;IACfE,SAAS,EAAE;MACPC,IAAI,EAAEH,OAAO;MACbI,OAAO,EAAE;IACb,CAAC;IACDC,KAAK,EAAEC,QAAQ;IACfC,cAAc,EAAEC,MAAM;IACtBC,YAAY,EAAED,MAAM;IACpBE,wBAAwB,EAAE;MACtBP,IAAI,EAAEH,OAAO;MACbI,OAAO,EAAE;IACb;EACJ,CAAC;EACDO,KAAK,CAACb,KAAK,EAAE;IACT,MAAMc,EAAE,GAAGxB,QAAQ,EAAE;IACrB,MAAMyB,iBAAiB,GAAG9B,GAAG,CAAC,IAAI,CAAC;IACnC,MAAM+B,eAAe,GAAG/B,GAAG,CAAC,IAAI,CAAC;IACjC,IAAIgC,SAAS,GAAG,KAAK;IACrB,IAAIC,yBAAyB,GAAG,KAAK;IACrC,MAAMC,kBAAkB,GAAG,OAAOC,QAAQ,KAAK,WAAW,GAAG,IAAI,GAAGA,QAAQ,CAACC,aAAa;IAC1F,SAASC,eAAe,GAAG;MACvB,MAAMC,eAAe,GAAG1B,KAAK,CAACA,KAAK,CAAC2B,MAAM,GAAG,CAAC,CAAC;MAC/C,OAAOD,eAAe,KAAKT,EAAE;IACjC;IACA,SAASW,qBAAqB,CAACC,CAAC,EAAE;MAC9B,IAAIC,EAAE;MACN,IAAID,CAAC,CAACE,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAIN,eAAe,EAAE,EAAE;UACnB,CAACK,EAAE,GAAG3B,KAAK,CAACO,KAAK,MAAM,IAAI,IAAIoB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAAC7B,KAAK,EAAE0B,CAAC,CAAC;QAC7E;MACJ;IACJ;IACAvC,SAAS,CAAC,MAAM;MACZE,KAAK,CAAC,MAAMW,KAAK,CAACG,MAAM,EAAG2B,KAAK,IAAK;QACjC,IAAIA,KAAK,EAAE;UACPC,QAAQ,EAAE;UACVvC,EAAE,CAAC,SAAS,EAAE4B,QAAQ,EAAEK,qBAAqB,CAAC;QAClD,CAAC,MACI;UACDhC,GAAG,CAAC,SAAS,EAAE2B,QAAQ,EAAEK,qBAAqB,CAAC;UAC/C,IAAIR,SAAS,EAAE;YACXe,UAAU,EAAE;UAChB;QACJ;MACJ,CAAC,EAAE;QACCC,SAAS,EAAE;MACf,CAAC,CAAC;IACN,CAAC,CAAC;IACF7C,eAAe,CAAC,MAAM;MAClBK,GAAG,CAAC,SAAS,EAAE2B,QAAQ,EAAEK,qBAAqB,CAAC;MAC/C,IAAIR,SAAS,EACTe,UAAU,EAAE;IACpB,CAAC,CAAC;IACF,SAASE,mBAAmB,CAACR,CAAC,EAAE;MAC5B,IAAIR,yBAAyB,EACzB;MACJ,IAAII,eAAe,EAAE,EAAE;QACnB,MAAMa,MAAM,GAAGC,SAAS,EAAE;QAC1B,IAAID,MAAM,KAAK,IAAI,EACf;QACJ,IAAIA,MAAM,CAACE,QAAQ,CAAC9C,qBAAqB,CAACmC,CAAC,CAAC,CAAC,EACzC;QACJ;QACA;QACAY,YAAY,CAAC,OAAO,CAAC;MACzB;IACJ;IACA,SAASF,SAAS,GAAG;MACjB,MAAMG,gBAAgB,GAAGxB,iBAAiB,CAACe,KAAK;MAChD,IAAIS,gBAAgB,KAAK,IAAI,EACzB,OAAO,IAAI;MACf,IAAIJ,MAAM,GAAGI,gBAAgB;MAC7B,OAAO,IAAI,EAAE;QACTJ,MAAM,GAAGA,MAAM,CAACK,WAAW;QAC3B,IAAIL,MAAM,KAAK,IAAI,EACf;QACJ,IAAIA,MAAM,YAAYM,OAAO,IAAIN,MAAM,CAACO,OAAO,KAAK,KAAK,EAAE;UACvD;QACJ;MACJ;MACA,OAAOP,MAAM;IACjB;IACA,SAASJ,QAAQ,GAAG;MAChB,IAAIJ,EAAE;MACN,IAAI3B,KAAK,CAACC,QAAQ,EACd;MACJJ,KAAK,CAAC8C,IAAI,CAAC7B,EAAE,CAAC;MACd,IAAId,KAAK,CAACI,SAAS,EAAE;QACjB,MAAM;UAAEK;QAAe,CAAC,GAAGT,KAAK;QAChC,IAAIS,cAAc,KAAKmC,SAAS,EAAE;UAC9BN,YAAY,CAAC,OAAO,CAAC;QACzB,CAAC,MACI;UACD,CAACX,EAAE,GAAG/B,SAAS,CAACa,cAAc,CAAC,MAAM,IAAI,IAAIkB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkB,KAAK,CAAC;YAAEC,aAAa,EAAE;UAAK,CAAC,CAAC;QAC3G;MACJ;MACA7B,SAAS,GAAG,IAAI;MAChBG,QAAQ,CAAC2B,gBAAgB,CAAC,OAAO,EAAEb,mBAAmB,EAAE,IAAI,CAAC;IACjE;IACA,SAASF,UAAU,GAAG;MAClB,IAAIL,EAAE;MACN,IAAI3B,KAAK,CAACC,QAAQ,EACd;MACJmB,QAAQ,CAAC4B,mBAAmB,CAAC,OAAO,EAAEd,mBAAmB,EAAE,IAAI,CAAC;MAChErC,KAAK,GAAGA,KAAK,CAACoD,MAAM,CAAEC,SAAS,IAAKA,SAAS,KAAKpC,EAAE,CAAC;MACrD,IAAIQ,eAAe,EAAE,EACjB;MACJ,MAAM;QAAEX;MAAa,CAAC,GAAGX,KAAK;MAC9B,IAAIW,YAAY,KAAKiC,SAAS,EAAE;QAC5B,CAACjB,EAAE,GAAG/B,SAAS,CAACe,YAAY,CAAC,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkB,KAAK,CAAC;UAAEC,aAAa,EAAE;QAAK,CAAC,CAAC;MACzG,CAAC,MACI,IAAI9C,KAAK,CAACY,wBAAwB,EAAE;QACrC,IAAIO,kBAAkB,YAAYgC,WAAW,EAAE;UAC3CjC,yBAAyB,GAAG,IAAI;UAChCC,kBAAkB,CAAC0B,KAAK,CAAC;YAAEC,aAAa,EAAE;UAAK,CAAC,CAAC;UACjD5B,yBAAyB,GAAG,KAAK;QACrC;MACJ;IACJ;IACA,SAASoB,YAAY,CAACc,MAAM,EAAE;MAC1B,IAAI,CAAC9B,eAAe,EAAE,EAClB;MACJ,IAAItB,KAAK,CAACG,MAAM,EAAE;QACd,MAAMoC,gBAAgB,GAAGxB,iBAAiB,CAACe,KAAK;QAChD,MAAMuB,cAAc,GAAGrC,eAAe,CAACc,KAAK;QAC5C,IAAIS,gBAAgB,KAAK,IAAI,IAAIc,cAAc,KAAK,IAAI,EAAE;UACtD,MAAMlB,MAAM,GAAGC,SAAS,EAAE;UAC1B,IAAID,MAAM,IAAI,IAAI,IAAIA,MAAM,KAAKkB,cAAc,EAAE;YAC7CnC,yBAAyB,GAAG,IAAI;YAChCqB,gBAAgB,CAACM,KAAK,CAAC;cAAEC,aAAa,EAAE;YAAK,CAAC,CAAC;YAC/C5B,yBAAyB,GAAG,KAAK;YACjC;UACJ;UACAA,yBAAyB,GAAG,IAAI;UAChC,MAAMoC,OAAO,GAAGF,MAAM,KAAK,OAAO,GAC5B1D,oBAAoB,CAACyC,MAAM,CAAC,GAC5BxC,mBAAmB,CAACwC,MAAM,CAAC;UACjCjB,yBAAyB,GAAG,KAAK;UACjC,IAAI,CAACoC,OAAO,EAAE;YACVpC,yBAAyB,GAAG,IAAI;YAChCqB,gBAAgB,CAACM,KAAK,CAAC;cAAEC,aAAa,EAAE;YAAK,CAAC,CAAC;YAC/C5B,yBAAyB,GAAG,KAAK;UACrC;QACJ;MACJ;IACJ;IACA,SAASqC,gBAAgB,CAAC7B,CAAC,EAAE;MACzB,IAAIR,yBAAyB,EACzB;MACJ,MAAMiB,MAAM,GAAGC,SAAS,EAAE;MAC1B,IAAID,MAAM,KAAK,IAAI,EACf;MACJ,IAAIT,CAAC,CAAC8B,aAAa,KAAK,IAAI,IAAIrB,MAAM,CAACE,QAAQ,CAACX,CAAC,CAAC8B,aAAa,CAAC,EAAE;QAC9D;QACAlB,YAAY,CAAC,MAAM,CAAC;MACxB,CAAC,MACI;QACD;QACAA,YAAY,CAAC,OAAO,CAAC;MACzB;IACJ;IACA,SAASmB,cAAc,CAAC/B,CAAC,EAAE;MACvB,IAAIR,yBAAyB,EACzB;MACJ,IAAIQ,CAAC,CAAC8B,aAAa,KAAK,IAAI,IACxB9B,CAAC,CAAC8B,aAAa,KAAKzC,iBAAiB,CAACe,KAAK,EAAE;QAC7C;QACAQ,YAAY,CAAC,MAAM,CAAC;MACxB,CAAC,MACI;QACD;QACAA,YAAY,CAAC,OAAO,CAAC;MACzB;IACJ;IACA,OAAO;MACHvB,iBAAiB;MACjBC,eAAe;MACf0C,cAAc,EAAE,0CAA0C;MAC1DH,gBAAgB;MAChBE;IACJ,CAAC;EACL,CAAC;EACDE,MAAM,GAAG;IACL,MAAM;MAAErD,OAAO,EAAEsD;IAAY,CAAC,GAAG,IAAI,CAACC,MAAM;IAC5C,IAAID,WAAW,KAAKhB,SAAS,EACzB,OAAO,IAAI;IACf,IAAI,IAAI,CAAC3C,QAAQ,EACb,OAAO2D,WAAW,EAAE;IACxB,MAAM;MAAEzD,MAAM;MAAEuD;IAAe,CAAC,GAAG,IAAI;IACvC,OAAO3E,CAAC,CAACG,QAAQ,EAAE,IAAI,EAAE,CACrBH,CAAC,CAAC,KAAK,EAAE;MACL,aAAa,EAAE,MAAM;MACrB+E,QAAQ,EAAE3D,MAAM,GAAG,GAAG,GAAG,IAAI;MAC7BlB,GAAG,EAAE,mBAAmB;MACxB8E,KAAK,EAAEL,cAAc;MACrBM,OAAO,EAAE,IAAI,CAACT;IAClB,CAAC,CAAC,EACFK,WAAW,EAAE,EACb7E,CAAC,CAAC,KAAK,EAAE;MACL,aAAa,EAAE,MAAM;MACrBgF,KAAK,EAAEL,cAAc;MACrBzE,GAAG,EAAE,iBAAiB;MACtB6E,QAAQ,EAAE3D,MAAM,GAAG,GAAG,GAAG,IAAI;MAC7B6D,OAAO,EAAE,IAAI,CAACP;IAClB,CAAC,CAAC,CACL,CAAC;EACN;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}