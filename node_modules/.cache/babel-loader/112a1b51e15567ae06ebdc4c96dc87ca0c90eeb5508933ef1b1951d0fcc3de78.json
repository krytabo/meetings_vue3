{"ast":null,"code":"import { userList } from \"@/views/config/api\";\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    isSingel: {\n      type: Boolean,\n      default: false\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => []\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      memberList: [],\n      selectTags: [],\n      dialogVisible: false,\n      internalVisible: false,\n      tags: this.tagsValue\n    };\n  },\n  mounted() {\n    userList().then(res => {\n      this.memberList = res.data;\n    });\n    this.$nextTick(() => {\n      for (let i = 0; i < this.$refs.multipleTable.length; i++) {\n        this.$refs.memberTables[i].clearSelection();\n        this.tags.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables[i].toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      }\n      /*this.$refs.memberTables.clearSelection();\n      this.tags.forEach((item) => {\n        this.memberList.forEach((subItem) => {\n          if (item.id === subItem.id) {\n            this.$refs.memberTables.toggleRowSelection(subItem, true);\n          }\n        });\n      });*/\n    });\n  },\n\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit(\"updateVisible\", val);\n      }\n    }\n  },\n  methods: {\n    // table選擇框\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n      this.$emit(\"selected-user\", val);\n    },\n    // 確認按鈕\n    confirmButton() {\n      this.tags = this.selectTags;\n      const rows = this.tags;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", rows);\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n    }\n  },\n  watch: {}\n};","map":{"version":3,"mappings":"AAkCA,SAASA,QAAO,QAAS,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;IACJC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACD;IACAC,SAAS,EAAE;MACTH,IAAI,EAAEI,KAAK;MACXF,OAAO,EAAE,MAAM;IACjB,CAAC;IACDG,OAAO,EAAE;MACPL,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,KAAK;MACpBC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,IAAI,CAACR;IACb,CAAC;EACH,CAAC;EACDS,OAAO,GAAG;IACRhB,QAAQ,EAAE,CAACiB,IAAI,CAAEC,GAAG,IAAK;MACvB,IAAI,CAACP,UAAS,GAAIO,GAAG,CAACR,IAAI;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACS,SAAS,CAAC,MAAM;MACnB,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACC,KAAK,CAACC,aAAa,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QACxD,IAAI,CAACC,KAAK,CAACG,YAAY,CAACJ,CAAC,CAAC,CAACK,cAAc,EAAE;QAC3C,IAAI,CAACV,IAAI,CAACW,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAI,CAAChB,UAAU,CAACe,OAAO,CAAEE,OAAO,IAAK;YACnC,IAAID,IAAI,CAACE,EAAC,KAAMD,OAAO,CAACC,EAAE,EAAE;cAC1B,IAAI,CAACR,KAAK,CAACG,YAAY,CAACJ,CAAC,CAAC,CAACU,kBAAkB,CAACF,OAAO,EAAE,IAAI,CAAC;YAC9D;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;MACA;;;;;;;;IAQF,CAAC,CAAC;EACJ,CAAC;;EACDG,QAAQ,EAAE;IACRlB,aAAa,EAAE;MACbmB,GAAG,GAAG;QACJ,OAAO,IAAI,CAACvB,OAAO;MACrB,CAAC;MACDwB,GAAG,CAACC,GAAG,EAAE;QACP;QACA,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;MAClC;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACP;IACAC,MAAM,CAACH,GAAG,EAAE;MACV,IAAI,CAACtB,UAAS,GAAI0B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,GAAG,CAAC,CAAC;MACjD,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;IAClC,CAAC;IACD;IACAO,aAAa,GAAG;MACd,IAAI,CAAC1B,IAAG,GAAI,IAAI,CAACH,UAAU;MAC3B,MAAM8B,IAAG,GAAI,IAAI,CAAC3B,IAAI;MACtB,IAAI,CAACoB,KAAK,CAAC,iBAAiB,EAAE,mBAAmB,EAAEO,IAAI,CAAC;IAC1D,CAAC;IACD;IACAC,YAAY,GAAG;MACb,IAAI,CAACR,KAAK,CAAC,gBAAgB,CAAC;IAC9B;EACF,CAAC;EACDS,KAAK,EAAE,CAAC;AACV,CAAC","names":["userList","name","prop","isSingel","type","Boolean","default","tagsValue","Array","visible","data","memberList","selectTags","dialogVisible","internalVisible","tags","mounted","then","res","$nextTick","i","$refs","multipleTable","length","memberTables","clearSelection","forEach","item","subItem","id","toggleRowSelection","computed","get","set","val","$emit","methods","select","JSON","parse","stringify","confirmButton","rows","cancelButton","watch"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button type=\"primary\" @click=\"confirmButton\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    isSingel: {\n      type: Boolean,\n      default: false,\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => [],\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      memberList: [],\n      selectTags: [],\n      dialogVisible: false,\n      internalVisible: false,\n      tags: this.tagsValue,\n    };\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n\n    this.$nextTick(() => {\n      for (let i = 0; i < this.$refs.multipleTable.length; i++) {\n        this.$refs.memberTables[i].clearSelection();\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables[i].toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      }\n      /*this.$refs.memberTables.clearSelection();\n      this.tags.forEach((item) => {\n        this.memberList.forEach((subItem) => {\n          if (item.id === subItem.id) {\n            this.$refs.memberTables.toggleRowSelection(subItem, true);\n          }\n        });\n      });*/\n    });\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit(\"updateVisible\", val);\n      },\n    },\n  },\n  methods: {\n    // table選擇框\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n      this.$emit(\"selected-user\", val);\n    },\n    // 確認按鈕\n    confirmButton() {\n      this.tags = this.selectTags;\n      const rows = this.tags;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", rows);\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n    },\n  },\n  watch: {},\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}