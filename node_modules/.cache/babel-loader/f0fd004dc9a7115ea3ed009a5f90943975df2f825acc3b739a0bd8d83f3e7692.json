{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_2 = {\n  class: \"flex space-x-2 rounded bg-white px-4 py-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_memberDialog = _resolveComponent(\"memberDialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($data.tags) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createBlock(_component_a_tag, {\n      key: tag.name,\n      color: \"#165dff\",\n      class: \"rounded\",\n      closable: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(tag.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args), [\"enter\"])),\n    class: \"flex-1\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.inputValue]])]), _createVNode(_component_el_button, {\n    plain: \"\",\n    onClick: $options.edit_countersign\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"選擇\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_memberDialog, {\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.dialogVisible = $event),\n    onResetPopupData: $options.memberListDialog_Cancel,\n    onSubmitPopupData: $options.memberListDialog_Confirm,\n    onSelectedUser: _ctx.selectedUser\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onResetPopupData\", \"onSubmitPopupData\", \"onSelectedUser\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGOA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAA2C;;;;;+FAHrDC,UAAI,IAAG,GAEV,qCAMM,OANNC,UAMM,GALJC,oBAGM,OAHNC,UAGM,sBAFJC,oBAA0GC,6BAArFL,UAAI,EAAXM,GAAG;yBAAjBC,aAA0GC;MAA9EC,GAAG,EAAEH,GAAG,CAACI,IAAI;MAAEC,KAAK,EAAC,SAAS;MAACZ,KAAK,EAAC,SAAS;MAACa,QAAQ,EAAR;;wBAAS,MAAc,mCAAXN,GAAG,CAACI,IAAI;;;;kDAC/FR,oBAA+E;+DAA/DF,gBAAU;IAAGa,OAAK,mDAAQC,mEAAkB;IAAEf,KAAK,EAAC;iEAApDC,gBAAU,OAE5Be,aAAyDC;IAA9CC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAEJ;;sBAAkB,MAAE,kBAAF,IAAE;;oCAE/CC,aAAyKI;gBAAlJnB,mBAAa;+DAAbA,mBAAa;IAAGoB,gBAAc,EAAEN,gCAAuB;IAAGO,iBAAe,EAAEP,iCAAwB;IAAGQ,cAAa,EAAEC","names":["class","$data","_hoisted_1","_createElementVNode","_hoisted_2","_createElementBlock","_Fragment","tag","_createBlock","_component_a_tag","key","name","color","closable","onKeyup","$options","_createVNode","_component_el_button","plain","onClick","_component_memberDialog","onResetPopupData","onSubmitPopupData","onSelectedUser","_ctx"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  {{ tags }}\n\n  <div class=\"flex items-center\">\n    <div class=\"flex space-x-2 rounded bg-white px-4 py-1\">\n      <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable>{{ tag.name }}</a-tag>\n      <input v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" />\n    </div>\n    <el-button plain @click=\"edit_countersign\">選擇</el-button>\n  </div>\n  <memberDialog v-model=\"dialogVisible\" @resetPopupData=\"memberListDialog_Cancel\" @submitPopupData=\"memberListDialog_Confirm\" @selected-user=\"selectedUser\"></memberDialog>\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    memberDialog,\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: [\n        {\n          id: \"t0095\",\n          department: \"建一部\",\n          name: \"王大明\",\n        },\n        {\n          id: \"t0096\",\n          department: \"建二部\",\n          name: \"蔡先生\",\n        },\n        {\n          id: \"t0097\",\n          department: \"建三部\",\n          name: \"吳先生\",\n        },\n        {\n          id: \"t0098\",\n          department: \"建四部\",\n          name: \"張三\",\n        },\n      ],\n      inputValue: \"\",\n      memberList: [],\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.editForm.countersign = val;\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      let id = this.editForm.id;\n      let obj = this.editForm;\n      this.axios\n        .patch(\"http://localhost:3000/meetingList/\" + `${id}`, obj)\n        .then((response) => {\n          this.editForm.id = response.data.id;\n          this.getApi();\n          this.dialogVisible = false;\n        })\n        .catch((error) => {\n          console.error(\"There was an error!\", error);\n        });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {},\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}