{"ast":null,"code":"import { composite } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { createTheme } from '../../_mixins';\nexport const self = vars => {\n  const {\n    baseColor,\n    textColor2,\n    bodyColor,\n    cardColor,\n    dividerColor,\n    actionColor,\n    scrollbarColor,\n    scrollbarColorHover,\n    invertedColor\n  } = vars;\n  return {\n    textColor: textColor2,\n    textColorInverted: '#FFF',\n    color: bodyColor,\n    colorEmbedded: actionColor,\n    headerColor: cardColor,\n    headerColorInverted: invertedColor,\n    footerColor: actionColor,\n    footerColorInverted: invertedColor,\n    headerBorderColor: dividerColor,\n    headerBorderColorInverted: invertedColor,\n    footerBorderColor: dividerColor,\n    footerBorderColorInverted: invertedColor,\n    siderBorderColor: dividerColor,\n    siderBorderColorInverted: invertedColor,\n    siderColor: cardColor,\n    siderColorInverted: invertedColor,\n    siderToggleButtonBorder: `1px solid ${dividerColor}`,\n    siderToggleButtonColor: baseColor,\n    siderToggleButtonIconColor: textColor2,\n    siderToggleButtonIconColorInverted: textColor2,\n    siderToggleBarColor: composite(bodyColor, scrollbarColor),\n    siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n    // hack for inverted background\n    __invertScrollbar: 'true'\n  };\n};\nconst layoutLight = createTheme({\n  name: 'Layout',\n  common: commonLight,\n  peers: {\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default layoutLight;","map":{"version":3,"names":["composite","commonLight","scrollbarLight","createTheme","self","vars","baseColor","textColor2","bodyColor","cardColor","dividerColor","actionColor","scrollbarColor","scrollbarColorHover","invertedColor","textColor","textColorInverted","color","colorEmbedded","headerColor","headerColorInverted","footerColor","footerColorInverted","headerBorderColor","headerBorderColorInverted","footerBorderColor","footerBorderColorInverted","siderBorderColor","siderBorderColorInverted","siderColor","siderColorInverted","siderToggleButtonBorder","siderToggleButtonColor","siderToggleButtonIconColor","siderToggleButtonIconColorInverted","siderToggleBarColor","siderToggleBarColorHover","__invertScrollbar","layoutLight","name","common","peers","Scrollbar"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/layout/styles/light.js"],"sourcesContent":["import { composite } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { createTheme } from '../../_mixins';\nexport const self = (vars) => {\n    const { baseColor, textColor2, bodyColor, cardColor, dividerColor, actionColor, scrollbarColor, scrollbarColorHover, invertedColor } = vars;\n    return {\n        textColor: textColor2,\n        textColorInverted: '#FFF',\n        color: bodyColor,\n        colorEmbedded: actionColor,\n        headerColor: cardColor,\n        headerColorInverted: invertedColor,\n        footerColor: actionColor,\n        footerColorInverted: invertedColor,\n        headerBorderColor: dividerColor,\n        headerBorderColorInverted: invertedColor,\n        footerBorderColor: dividerColor,\n        footerBorderColorInverted: invertedColor,\n        siderBorderColor: dividerColor,\n        siderBorderColorInverted: invertedColor,\n        siderColor: cardColor,\n        siderColorInverted: invertedColor,\n        siderToggleButtonBorder: `1px solid ${dividerColor}`,\n        siderToggleButtonColor: baseColor,\n        siderToggleButtonIconColor: textColor2,\n        siderToggleButtonIconColorInverted: textColor2,\n        siderToggleBarColor: composite(bodyColor, scrollbarColor),\n        siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n        // hack for inverted background\n        __invertScrollbar: 'true'\n    };\n};\nconst layoutLight = createTheme({\n    name: 'Layout',\n    common: commonLight,\n    peers: {\n        Scrollbar: scrollbarLight\n    },\n    self\n});\nexport default layoutLight;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,MAAMC,IAAI,GAAIC,IAAI,IAAK;EAC1B,MAAM;IAAEC,SAAS;IAAEC,UAAU;IAAEC,SAAS;IAAEC,SAAS;IAAEC,YAAY;IAAEC,WAAW;IAAEC,cAAc;IAAEC,mBAAmB;IAAEC;EAAc,CAAC,GAAGT,IAAI;EAC3I,OAAO;IACHU,SAAS,EAAER,UAAU;IACrBS,iBAAiB,EAAE,MAAM;IACzBC,KAAK,EAAET,SAAS;IAChBU,aAAa,EAAEP,WAAW;IAC1BQ,WAAW,EAAEV,SAAS;IACtBW,mBAAmB,EAAEN,aAAa;IAClCO,WAAW,EAAEV,WAAW;IACxBW,mBAAmB,EAAER,aAAa;IAClCS,iBAAiB,EAAEb,YAAY;IAC/Bc,yBAAyB,EAAEV,aAAa;IACxCW,iBAAiB,EAAEf,YAAY;IAC/BgB,yBAAyB,EAAEZ,aAAa;IACxCa,gBAAgB,EAAEjB,YAAY;IAC9BkB,wBAAwB,EAAEd,aAAa;IACvCe,UAAU,EAAEpB,SAAS;IACrBqB,kBAAkB,EAAEhB,aAAa;IACjCiB,uBAAuB,EAAG,aAAYrB,YAAa,EAAC;IACpDsB,sBAAsB,EAAE1B,SAAS;IACjC2B,0BAA0B,EAAE1B,UAAU;IACtC2B,kCAAkC,EAAE3B,UAAU;IAC9C4B,mBAAmB,EAAEnC,SAAS,CAACQ,SAAS,EAAEI,cAAc,CAAC;IACzDwB,wBAAwB,EAAEpC,SAAS,CAACQ,SAAS,EAAEK,mBAAmB,CAAC;IACnE;IACAwB,iBAAiB,EAAE;EACvB,CAAC;AACL,CAAC;AACD,MAAMC,WAAW,GAAGnC,WAAW,CAAC;EAC5BoC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAEvC,WAAW;EACnBwC,KAAK,EAAE;IACHC,SAAS,EAAExC;EACf,CAAC;EACDE;AACJ,CAAC,CAAC;AACF,eAAekC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}