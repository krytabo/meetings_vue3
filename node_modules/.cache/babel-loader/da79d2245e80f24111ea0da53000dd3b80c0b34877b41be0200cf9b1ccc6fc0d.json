{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createBlock as _createBlock, vShow as _vShow, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5752faac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"text-red-500\"\n};\nconst _hoisted_2 = {\n  class: \"relative flex w-full items-center\"\n};\nconst _hoisted_3 = {\n  class: \"absolute text-red-500\",\n  style: {\n    \"bottom\": \"-20px\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"flax mb-5 space-x-4\"\n};\nconst _hoisted_5 = {\n  class: \"flex w-full items-center justify-center space-x-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", _hoisted_1, _toDisplayString($data.tags), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString($data.memberList) + \" \", 1 /* TEXT */), _createVNode(_component_el_table, {\n    ref: \"memberTables\",\n    data: $data.memberList,\n    onSelectionChange: $options.select\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      type: \"selection\",\n      width: \"50\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"編號\",\n      prop: \"id\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"姓名\",\n      prop: \"name\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"部門\",\n      prop: \"department\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex h-8 flex-1 items-center space-x-2 rounded border border-gray-200 bg-white px-4 hover:border-gray-300\", {\n      inputError: $data.validateState === 'error'\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createBlock(_component_a_tag, {\n      key: tag.name,\n      color: \"#165dff\",\n      class: \"rounded\",\n      closable: \"\",\n      onClose: $event => $options.handleClose(tag)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(tag.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args), [\"enter\"])),\n    class: \"flex-1\",\n    onBlur: _cache[2] || (_cache[2] = (...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vShow, $props.allowCreate === true], [_vModelText, $data.inputValue]])], 2 /* CLASS */), _withDirectives(_createElementVNode(\"p\", _hoisted_3, \"請選擇對象\", 512 /* NEED_PATCH */), [[_vShow, $data.validateState === 'error']]), _createVNode(_component_el_button, {\n    plain: \"\",\n    onClick: $options.edit_countersign\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"選擇\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_dialog, {\n    title: \"選擇人員\",\n    draggable: \"\",\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.dialogVisible = $event),\n    \"show-close\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_table, {\n      ref: \"memberTables\",\n      data: $data.memberList,\n      onSelectionChange: $options.select\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"編號\",\n        prop: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"姓名\",\n        prop: \"name\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"部門\",\n        prop: \"department\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_a_button, {\n      status: \"primary\",\n      onClick: $options.memberListDialog_Cancel\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), $props.rulesOption === true ? (_openBlock(), _createBlock(_component_a_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: $options.memberListDialog_Confirm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_a_button, {\n      key: 1,\n      type: \"primary\",\n      onClick: $options.memberListDialog_Confirm2\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]))])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACKA,KAAK,EAAC;AAAc;;EAQlBA,KAAK,EAAC;AAAmC;;EAKNA,KAAK,EAAC,uBAAuB;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EAI/DD,KAAK,EAAC;AAAqB;;EAQ3BA,KAAK,EAAC;AAAmD;;;;;;;;6DAzBhEE,oBAAsC,KAAtCC,UAAsC,mBAAXC,UAAI,mCAAO,GACtC,oBAAGA,gBAAU,IAAG,GAChB,8BAKWC;IALDC,GAAG,EAAC,cAAc;IAAEC,IAAI,EAAEH,gBAAU;IAAGI,iBAAgB,EAAEC;;sBACjE,MAA+D,CAA/DC,aAA+DC;MAA9CC,IAAI,EAAC,WAAW;MAACC,KAAK,EAAC;QACxCH,aAAwDC;MAAvCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCL,aAA0DC;MAAzCG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;QACjCL,aAAgEC;MAA/CG,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;;oDAEnCb,oBAOM,OAPNc,UAOM,GANJd,oBAGM;IAHDF,KAAK,mBAAC,2GAA2G;MAAAiB,YAAuBb,mBAAa;IAAA;yBACxJc,oBAAoIC,6BAA/Gf,UAAI,EAAXgB,GAAG;yBAAjBC,aAAoIC;MAAxGC,GAAG,EAAEH,GAAG,CAACI,IAAI;MAAEC,KAAK,EAAC,SAAS;MAACzB,KAAK,EAAC,SAAS;MAAC0B,QAAQ,EAAR,EAAQ;MAAEC,OAAK,YAAElB,oBAAW,CAACW,GAAG;;wBAAG,MAAc,mCAAXA,GAAG,CAACI,IAAI;;;;kDACzHtB,oBAAwI;+DAA1FE,gBAAU;IAAGwB,OAAK,mDAAQnB,mEAAkB;IAAET,KAAK,EAAC,QAAQ;IAAE6B,MAAI,yCAAEpB,mEAAkB;4DAArHqB,kBAAW,0BAAoB1B,gBAAU,sCAE1DF,oBAAmG,KAAnG6B,UAAmG,EAAT,OAAK,mCAApF3B,mBAAa,iBACxBM,aAAyDsB;IAA9CC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAEzB;;sBAAkB,MAAE,kBAAF,IAAE;;oCAE/CC,aAcYyB;IAdDC,KAAK,EAAC,MAAM;IAACC,SAAS,EAAT,EAAS;gBAAUjC,mBAAa;+DAAbA,mBAAa;IAAG,YAAU,EAAE;;sBACrE,MAOM,CAPNF,oBAOM,OAPNoC,UAOM,GANJ5B,aAKWL;MALDC,GAAG,EAAC,cAAc;MAAEC,IAAI,EAAEH,gBAAU;MAAGI,iBAAgB,EAAEC;;wBACjE,MAA+D,CAA/DC,aAA+DC;QAA9CC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC;UACxCH,aAAwDC;QAAvCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCL,aAA0DC;QAAzCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCL,aAAgEC;QAA/CG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;;wDAGrCb,oBAIM,OAJNqC,UAIM,GAHJ7B,aAAyE8B;MAA/DC,MAAM,EAAC,SAAS;MAAEP,OAAK,EAAEzB;;wBAAyB,MAAE,kBAAF,IAAE;;oCAC9CqB,kBAAW,2BAA3BT,aAAoGmB;;MAA9D5B,IAAI,EAAC,SAAS;MAAEsB,OAAK,EAAEzB;;wBAA0B,MAAE,kBAAF,IAAE;;qDACzFY,aAAgFmB;;MAA/D5B,IAAI,EAAC,SAAS;MAAEsB,OAAK,EAAEzB;;wBAA2B,MAAE,kBAAF,IAAE","names":["class","style","_createElementVNode","_hoisted_1","$data","_component_el_table","ref","data","onSelectionChange","$options","_createVNode","_component_el_table_column","type","width","label","prop","_hoisted_2","inputError","_createElementBlock","_Fragment","tag","_createBlock","_component_a_tag","key","name","color","closable","onClose","onKeyup","onBlur","$props","_hoisted_3","_component_el_button","plain","onClick","_component_el_dialog","title","draggable","_hoisted_4","_hoisted_5","_component_a_button","status"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  <p class=\"text-red-500\">{{ tags }}</p>\n  {{ memberList }}\n  <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\">\n    <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n    <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n    <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n    <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n  </el-table>\n  <div class=\"relative flex w-full items-center\">\n    <div class=\"flex h-8 flex-1 items-center space-x-2 rounded border border-gray-200 bg-white px-4 hover:border-gray-300\" :class=\"{ inputError: validateState === 'error' }\">\n      <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable @close=\"handleClose(tag)\">{{ tag.name }}</a-tag>\n      <input v-show=\"allowCreate === true\" v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" @blur=\"handleInputConfirm\" />\n    </div>\n    <p v-show=\"validateState === 'error'\" class=\"absolute text-red-500\" style=\"bottom: -20px\">請選擇對象</p>\n    <el-button plain @click=\"edit_countersign\">選擇</el-button>\n  </div>\n  <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"memberListDialog_Cancel\">取消</a-button>\n      <a-button v-if=\"rulesOption === true\" type=\"primary\" @click=\"memberListDialog_Confirm\">確定</a-button>\n      <a-button v-else type=\"primary\" @click=\"memberListDialog_Confirm2\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {},\n  props: {\n    // 可新增\n    allowCreate: {\n      type: Boolean,\n      default: true,\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true,\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: this.tagsValue,\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n      validateState: \"success\",\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n        //object中新增數值\n        for (let stage of this.memberList) {\n          Object.assign(stage, { isSelected: \"false\" });\n        }\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      // this.selectTags = JSON.parse(JSON.stringify(val));\n      this.selectTags = val;\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      /*// el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });*/\n    },\n    getDefaultSelected() {\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員(驗證)\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm2() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      const rows = this.tags;\n      this.$emit(\"sand-form\", rows);\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n\n    // 刪除tag\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    // input輸入\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {\n    this.getApi();\n    // this.getDefaultSelected();\n    this.$nextTick(() => {\n      this.tags.forEach((item) => {\n        if (item.isSelected) {\n          this.$refs.memberTables.toggleRowSelection(item, true);\n        }\n      });\n    });\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.inputError {\n  border: #f56c6c 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}