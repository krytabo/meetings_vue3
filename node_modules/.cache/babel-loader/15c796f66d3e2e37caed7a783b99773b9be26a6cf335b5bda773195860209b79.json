{"ast":null,"code":"export default {\n  name: \"tableSelect\",\n  components: {},\n  props: {\n    selectObject: {\n      type: String,\n      default: \"\"\n    },\n    value: {\n      type: String,\n      default: \"\"\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      tag: \"\",\n      memberListDialog: false,\n      visible: false,\n      search: this.value,\n      searchMember: \"\",\n      memberListSelect: \"\",\n      memberList: [{\n        id: \"t0095\",\n        department: \"建一部2\",\n        name: \"王大明\"\n      }, {\n        id: \"t0096\",\n        department: \"建二部\",\n        name: \"蔡先生\"\n      }, {\n        id: \"t0097\",\n        department: \"建三部\",\n        name: \"吳先生\"\n      }, {\n        id: \"t0098\",\n        department: \"建四部\",\n        name: \"張三\"\n      }],\n      checkedDetail: []\n    };\n  },\n  methods: {\n    test() {\n      this.search = null;\n    },\n    handleCurrentChange(val) {\n      this.$emit(\"update:modelValue\", val.name, val.department);\n      this.memberListSelect = val;\n    },\n    selectMeetingDoneButton() {\n      this.search = this.memberListSelect.name;\n      this.searchMember = \"\";\n      this.$refs.visible.hide(); //關閉視窗\n    },\n\n    onInput(e) {\n      this.$emit(\"update:modelValue\", e);\n    }\n    /*SelectionChange(val) {\n      for (let i = 0; i < val.length; i++) {\n        this.checkedDetail[i] = val[i].name;\n      }\n      console.log(this.checkedDetail);\n    },\n    clearSelect(row) {\n      this.$refs.filterTable.setCurrentRow(row);\n    },*/\n  },\n\n  computed: {\n    // 篩選表格\n    tables: function () {\n      const search = this.searchMember;\n      if (search) {\n        return this.memberList.filter(data => {\n          return Object.keys(data).some(key => {\n            // return String(data[key]).toLowerCase().includes(search.toLowerCase());\n            return String(data[key]).indexOf(search.toUpperCase()) > -1;\n            //.indexOF()區分大小寫 .indexOf(.toUpperCase())不分大小寫 .toLowerCase()轉換小寫\n          });\n        });\n      }\n\n      return this.memberList;\n    }\n  }\n};","map":{"version":3,"mappings":"AAoDA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,UAAU,EAAE;MACVJ,IAAI,EAAE,CAACC,MAAM,EAAEI,MAAM,CAAC;MACtBH,OAAO,EAAE;IACX,CAAC;IACDI,QAAQ,EAAE;MACRN,IAAI,EAAEO,OAAO;MACbL,OAAO,EAAE;IACX;EACF,CAAC;EACDM,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,gBAAgB,EAAE,KAAK;MACvBC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,IAAI,CAACT,KAAK;MAClBU,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE,EAAE;MACpBC,UAAU,EAAE,CACV;QACEC,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,MAAM;QAClBrB,IAAI,EAAE;MACR,CAAC,EACD;QACEoB,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBrB,IAAI,EAAE;MACR,CAAC,EACD;QACEoB,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBrB,IAAI,EAAE;MACR,CAAC,EACD;QACEoB,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBrB,IAAI,EAAE;MACR,CAAC,CACF;MACDsB,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,IAAI,GAAG;MACL,IAAI,CAACR,MAAK,GAAI,IAAI;IACpB,CAAC;IACDS,mBAAmB,CAACC,GAAG,EAAE;MACvB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,GAAG,CAAC1B,IAAI,EAAE0B,GAAG,CAACL,UAAU,CAAC;MACzD,IAAI,CAACH,gBAAe,GAAIQ,GAAG;IAC7B,CAAC;IACDE,uBAAuB,GAAG;MACxB,IAAI,CAACZ,MAAK,GAAI,IAAI,CAACE,gBAAgB,CAAClB,IAAI;MACxC,IAAI,CAACiB,YAAW,GAAI,EAAE;MACtB,IAAI,CAACY,KAAK,CAACd,OAAO,CAACe,IAAI,EAAE,EAAE;IAC7B,CAAC;;IACDC,OAAO,CAACC,CAAC,EAAE;MACT,IAAI,CAACL,KAAK,CAAC,mBAAmB,EAAEK,CAAC,CAAC;IACpC;IACA;;;;;;;;;EASF,CAAC;;EACDC,QAAQ,EAAE;IACR;IACAC,MAAM,EAAE,YAAY;MAClB,MAAMlB,MAAK,GAAI,IAAI,CAACC,YAAY;MAChC,IAAID,MAAM,EAAE;QACV,OAAO,IAAI,CAACG,UAAU,CAACgB,MAAM,CAAEvB,IAAI,IAAK;UACtC,OAAOwB,MAAM,CAACC,IAAI,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAAEC,GAAG,IAAK;YACrC;YACA,OAAOlC,MAAM,CAACO,IAAI,CAAC2B,GAAG,CAAC,CAAC,CAACC,OAAO,CAACxB,MAAM,CAACyB,WAAW,EAAE,IAAI,CAAC,CAAC;YAC3D;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;;MACA,OAAO,IAAI,CAACtB,UAAU;IACxB;EACF;AACF,CAAC","names":["name","components","props","selectObject","type","String","default","value","modelValue","Number","disabled","Boolean","data","tag","memberListDialog","visible","search","searchMember","memberListSelect","memberList","id","department","checkedDetail","methods","test","handleCurrentChange","val","$emit","selectMeetingDoneButton","$refs","hide","onInput","e","computed","tables","filter","Object","keys","some","key","indexOf","toUpperCase"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberListDialog.vue"],"sourcesContent":["<template>\n  <div class=\"flex w-full\">\n    <el-input placeholder=\"請選擇\" v-model=\"search\" class=\"flex-1\" @input=\"onInput\" :disabled=\"disabled === true\" />\n    <el-popover trigger=\"click\" ref=\"visible\" width=\"auto\">\n      <!--搜尋框-->\n      <a-input placeholder=\"請輸入關鍵字\" v-model=\"searchMember\" @input=\"onInput\" />\n      <!--列表-->\n      <el-table ref=\"filterTable\" :data=\"tables\" highlight-current-row @current-change=\"handleCurrentChange\">\n        <el-table-column prop=\"id\" label=\"員工編號\" width=\"250\">\n          <template #default=\"scope\">\n            <span class=\"cursor-pointer\">{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"department\" label=\"部門名稱\" width=\"250\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"員工姓名\" width=\"300\" class=\"cursor-pointer\"></el-table-column>\n      </el-table>\n      <!--確定按鈕-->\n      <div style=\"text-align: right; margin: 0\">\n        <el-button @click=\"selectMeetingDoneButton\">確定</el-button>\n      </div>\n      <!--選擇按鈕-->\n      <template #reference>\n        <div v-if=\"disabled === true\" class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-gray-200 text-gray-400 hover:cursor-not-allowed\">選擇</div>\n        <div v-else class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-white hover:bg-gray-800 hover:text-white hover:cursor-pointer\" @click=\"test\">選擇</div>\n      </template>\n    </el-popover>\n\n    <!-- <a-trigger trigger=\"click\" class=\"member_select\">\n      <div class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-white hover:bg-gray-800 hover:text-white hover:cursor-pointer\">選擇</div>\n      <template #content>\n        <div class=\"demo-basic bg-white p-4 rounded-lg shadow-6 flex flex-col space-y-4\">\n          <a-input placeholder=\"請輸入關鍵字\" v-model=\"searchMember\" />\n          <el-table ref=\"filterTable\" :data=\"tables\" highlight-current-row @current-change=\"handleCurrentChange\">\n            <el-table-column prop=\"id\" label=\"員工編號\" width=\"250\">\n              <template #default=\"scope\">\n                <span class=\"cursor-pointer\">{{ scope.row.id }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"department\" label=\"部門名稱\" width=\"250\"></el-table-column>\n            <el-table-column prop=\"name\" label=\"員工姓名\" width=\"300\" class=\"cursor-pointer\"></el-table-column>\n          </el-table>\n          <div class=\"flex\">\n            <el-button v-if=\"multi === true\" @click=\"selectMeetingDoneButton2\">選擇2</el-button>\n            <el-button v-else @click=\"selectMeetingDoneButton\">確定</el-button>\n          </div>\n        </div>\n      </template>\n    </a-trigger>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"tableSelect\",\n  components: {},\n  props: {\n    selectObject: {\n      type: String,\n      default: \"\",\n    },\n    value: {\n      type: String,\n      default: \"\",\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\",\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      tag: \"\",\n      memberListDialog: false,\n      visible: false,\n      search: this.value,\n      searchMember: \"\",\n      memberListSelect: \"\",\n      memberList: [\n        {\n          id: \"t0095\",\n          department: \"建一部2\",\n          name: \"王大明\",\n        },\n        {\n          id: \"t0096\",\n          department: \"建二部\",\n          name: \"蔡先生\",\n        },\n        {\n          id: \"t0097\",\n          department: \"建三部\",\n          name: \"吳先生\",\n        },\n        {\n          id: \"t0098\",\n          department: \"建四部\",\n          name: \"張三\",\n        },\n      ],\n      checkedDetail: [],\n    };\n  },\n  methods: {\n    test() {\n      this.search = null;\n    },\n    handleCurrentChange(val) {\n      this.$emit(\"update:modelValue\", val.name, val.department);\n      this.memberListSelect = val;\n    },\n    selectMeetingDoneButton() {\n      this.search = this.memberListSelect.name;\n      this.searchMember = \"\";\n      this.$refs.visible.hide(); //關閉視窗\n    },\n    onInput(e) {\n      this.$emit(\"update:modelValue\", e);\n    },\n    /*SelectionChange(val) {\n      for (let i = 0; i < val.length; i++) {\n        this.checkedDetail[i] = val[i].name;\n      }\n      console.log(this.checkedDetail);\n    },\n    clearSelect(row) {\n      this.$refs.filterTable.setCurrentRow(row);\n    },*/\n  },\n  computed: {\n    // 篩選表格\n    tables: function () {\n      const search = this.searchMember;\n      if (search) {\n        return this.memberList.filter((data) => {\n          return Object.keys(data).some((key) => {\n            // return String(data[key]).toLowerCase().includes(search.toLowerCase());\n            return String(data[key]).indexOf(search.toUpperCase()) > -1;\n            //.indexOF()區分大小寫 .indexOf(.toUpperCase())不分大小寫 .toLowerCase()轉換小寫\n          });\n        });\n      }\n      return this.memberList;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.member_select {\n  .el-table__row:hover {\n    cursor: pointer !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}