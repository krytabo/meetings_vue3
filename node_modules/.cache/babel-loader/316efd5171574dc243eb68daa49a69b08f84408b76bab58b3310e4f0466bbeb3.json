{"ast":null,"code":"import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from '../../../_mixins';\nimport { useReactivated, Wrapper } from '../../../_utils';\nimport { scrollbarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: Number,\n    default: 5\n  },\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: String,\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n    // dom ref\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null);\n    // data ref\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + props.size * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + props.size * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    });\n    // methods\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n      if (typeof options === 'number') {\n        scrollToPosition(y !== null && y !== void 0 ? y : 0, options, 0, false, 'auto');\n        return;\n      }\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {\n            // do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n          return;\n        }\n      }\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      isShowXBarRef.value = true;\n    }\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      isShowYBarRef.value = true;\n    }\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    function sync() {\n      if (!props.scrollable) return;\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n    function isMouseUpAway(e) {\n      var _a;\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut,\n          scrollbarBorderRadius,\n          scrollbarHeight,\n          scrollbarWidth\n        },\n        self: {\n          color,\n          colorHover\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': scrollbarBorderRadius,\n        '--n-scrollbar-width': scrollbarWidth,\n        '--n-scrollbar-height': scrollbarHeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n    const createYRail = () => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`],\n        \"data-scrollbar-rail\": true,\n        style: this.verticalRailStyle,\n        \"aria-hidden\": true\n      }, h(triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n    const createChildren = () => {\n      var _a, _b;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail());\n    } else {\n      return scrollbarNode;\n    }\n  }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;","map":{"version":3,"names":["h","ref","defineComponent","computed","onMounted","onBeforeUnmount","mergeProps","Transition","watchEffect","Fragment","on","off","VResizeObserver","useIsIos","getPreciseEventTarget","useConfig","useTheme","useThemeClass","useRtl","useReactivated","Wrapper","scrollbarLight","style","scrollbarProps","Object","assign","props","size","type","Number","default","duration","scrollable","Boolean","xScrollable","trigger","String","useUnifiedContainer","triggerDisplayManually","container","Function","content","containerClass","containerStyle","contentClass","contentStyle","horizontalRailStyle","verticalRailStyle","onScroll","onWheel","onResize","internalOnUpdateScrollLeft","internalHoistYRail","Scrollbar","name","inheritAttrs","setup","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","rtlEnabledRef","wrapperRef","containerRef","contentRef","yRailRef","xRailRef","contentHeightRef","contentWidthRef","containerHeightRef","containerWidthRef","yRailSizeRef","xRailSizeRef","containerScrollTopRef","containerScrollLeftRef","isShowXBarRef","isShowYBarRef","yBarPressed","xBarPressed","xBarVanishTimerId","yBarVanishTimerId","memoYTop","memoXLeft","memoMouseX","memoMouseY","isIos","yBarSizeRef","value","containerHeight","contentHeight","yRailSize","Math","min","yBarSizePxRef","xBarSizeRef","containerWidth","contentWidth","xRailSize","xBarSizePxRef","yBarTopRef","containerScrollTop","heightDiff","yBarTopPxRef","xBarLeftRef","containerScrollLeft","widthDiff","xBarLeftPxRef","needYBarRef","needXBarRef","mergedShowXBarRef","mergedShowYBarRef","mergedContainerRef","mergedContentRef","activateState","scrollTo","top","left","handleContentResize","isDeactivated","sync","handleContainerResize","e","options","y","scrollToPosition","index","elSize","position","behavior","el","debounce","undefined","offsetTop","offsetHeight","MAX_SAFE_INTEGER","scrollBy","scrollTop","handleMouseEnterWrapper","showXBar","showYBar","handleMouseLeaveWrapper","hideBar","hideYBar","hideXBar","window","clearTimeout","setTimeout","handleScroll","syncScrollState","scrollLeft","syncPositionState","offsetWidth","xRailEl","yRailEl","syncUnifiedContainer","scrollHeight","scrollWidth","isMouseUpAway","_a","contains","handleXScrollMouseDown","preventDefault","stopPropagation","handleXScrollMouseMove","handleXScrollMouseUp","innerWidth","clientX","xBarSize","dX","dScrollLeft","toScrollLeftUpperBound","toScrollLeft","max","handleYScrollMouseDown","handleYScrollMouseMove","handleYScrollMouseUp","clientY","yBarSize","dY","dScrollTop","toScrollTopUpperBound","toScrollTop","needXBar","needYBar","mergedClsPrefix","classList","add","remove","themeRef","cssVarsRef","common","cubicBezierEaseInOut","scrollbarBorderRadius","scrollbarHeight","scrollbarWidth","self","color","colorHover","themeClassHandle","exposedMethods","rtlEnabled","yBarSizePx","xBarSizePx","yBarTopPx","xBarLeftPx","isShowXBar","isShowYBar","cssVars","themeClass","onRender","render","$slots","call","triggerIsNone","createYRail","class","height","onMousedown","createChildren","_b","$attrs","role","onMouseenter","onMouseleave","width","right","scrollbarNode","XScrollbar"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/_internal/scrollbar/src/Scrollbar.js"],"sourcesContent":["import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from '../../../_mixins';\nimport { useReactivated, Wrapper } from '../../../_utils';\nimport { scrollbarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), { size: {\n        type: Number,\n        default: 5\n    }, duration: {\n        type: Number,\n        default: 0\n    }, scrollable: {\n        type: Boolean,\n        default: true\n    }, xScrollable: Boolean, trigger: {\n        type: String,\n        default: 'hover'\n    }, useUnifiedContainer: Boolean, triggerDisplayManually: Boolean, \n    // If container is set, resize observer won't not attached\n    container: Function, content: Function, containerClass: String, containerStyle: [String, Object], contentClass: String, contentStyle: [String, Object], horizontalRailStyle: [String, Object], verticalRailStyle: [String, Object], onScroll: Function, onWheel: Function, onResize: Function, internalOnUpdateScrollLeft: Function, internalHoistYRail: Boolean });\nconst Scrollbar = defineComponent({\n    name: 'Scrollbar',\n    props: scrollbarProps,\n    inheritAttrs: false,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n        // dom ref\n        const wrapperRef = ref(null);\n        const containerRef = ref(null);\n        const contentRef = ref(null);\n        const yRailRef = ref(null);\n        const xRailRef = ref(null);\n        // data ref\n        const contentHeightRef = ref(null);\n        const contentWidthRef = ref(null);\n        const containerHeightRef = ref(null);\n        const containerWidthRef = ref(null);\n        const yRailSizeRef = ref(null);\n        const xRailSizeRef = ref(null);\n        const containerScrollTopRef = ref(0);\n        const containerScrollLeftRef = ref(0);\n        const isShowXBarRef = ref(false);\n        const isShowYBarRef = ref(false);\n        let yBarPressed = false;\n        let xBarPressed = false;\n        let xBarVanishTimerId;\n        let yBarVanishTimerId;\n        let memoYTop = 0;\n        let memoXLeft = 0;\n        let memoMouseX = 0;\n        let memoMouseY = 0;\n        const isIos = useIsIos();\n        const yBarSizeRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yRailSize } = yRailSizeRef;\n            if (containerHeight === null ||\n                contentHeight === null ||\n                yRailSize === null) {\n                return 0;\n            }\n            else {\n                return Math.min(containerHeight, (yRailSize * containerHeight) / contentHeight + props.size * 1.5);\n            }\n        });\n        const yBarSizePxRef = computed(() => {\n            return `${yBarSizeRef.value}px`;\n        });\n        const xBarSizeRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xRailSize } = xRailSizeRef;\n            if (containerWidth === null ||\n                contentWidth === null ||\n                xRailSize === null) {\n                return 0;\n            }\n            else {\n                return (xRailSize * containerWidth) / contentWidth + props.size * 1.5;\n            }\n        });\n        const xBarSizePxRef = computed(() => {\n            return `${xBarSizeRef.value}px`;\n        });\n        const yBarTopRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: containerScrollTop } = containerScrollTopRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yRailSize } = yRailSizeRef;\n            if (containerHeight === null ||\n                contentHeight === null ||\n                yRailSize === null) {\n                return 0;\n            }\n            else {\n                const heightDiff = contentHeight - containerHeight;\n                if (!heightDiff)\n                    return 0;\n                return ((containerScrollTop / heightDiff) * (yRailSize - yBarSizeRef.value));\n            }\n        });\n        const yBarTopPxRef = computed(() => {\n            return `${yBarTopRef.value}px`;\n        });\n        const xBarLeftRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: containerScrollLeft } = containerScrollLeftRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xRailSize } = xRailSizeRef;\n            if (containerWidth === null ||\n                contentWidth === null ||\n                xRailSize === null) {\n                return 0;\n            }\n            else {\n                const widthDiff = contentWidth - containerWidth;\n                if (!widthDiff)\n                    return 0;\n                return ((containerScrollLeft / widthDiff) * (xRailSize - xBarSizeRef.value));\n            }\n        });\n        const xBarLeftPxRef = computed(() => {\n            return `${xBarLeftRef.value}px`;\n        });\n        const needYBarRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            return (containerHeight !== null &&\n                contentHeight !== null &&\n                contentHeight > containerHeight);\n        });\n        const needXBarRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            return (containerWidth !== null &&\n                contentWidth !== null &&\n                contentWidth > containerWidth);\n        });\n        const mergedShowXBarRef = computed(() => {\n            const { trigger } = props;\n            return trigger === 'none' || isShowXBarRef.value;\n        });\n        const mergedShowYBarRef = computed(() => {\n            const { trigger } = props;\n            return trigger === 'none' || isShowYBarRef.value;\n        });\n        const mergedContainerRef = computed(() => {\n            const { container } = props;\n            if (container)\n                return container();\n            return containerRef.value;\n        });\n        const mergedContentRef = computed(() => {\n            const { content } = props;\n            if (content)\n                return content();\n            return contentRef.value;\n        });\n        const activateState = useReactivated(() => {\n            // Only restore for builtin container & content\n            if (!props.container) {\n                // remount\n                scrollTo({\n                    top: containerScrollTopRef.value,\n                    left: containerScrollLeftRef.value\n                });\n            }\n        });\n        // methods\n        const handleContentResize = () => {\n            if (activateState.isDeactivated)\n                return;\n            sync();\n        };\n        const handleContainerResize = (e) => {\n            if (activateState.isDeactivated)\n                return;\n            const { onResize } = props;\n            if (onResize)\n                onResize(e);\n            sync();\n        };\n        const scrollTo = (options, y) => {\n            if (!props.scrollable)\n                return;\n            if (typeof options === 'number') {\n                scrollToPosition(y !== null && y !== void 0 ? y : 0, options, 0, false, 'auto');\n                return;\n            }\n            const { left, top, index, elSize, position, behavior, el, debounce = true } = options;\n            if (left !== undefined || top !== undefined) {\n                scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n            }\n            if (el !== undefined) {\n                scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n            }\n            else if (index !== undefined && elSize !== undefined) {\n                scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n            }\n            else if (position === 'bottom') {\n                scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n            }\n            else if (position === 'top') {\n                scrollToPosition(0, 0, 0, false, behavior);\n            }\n        };\n        const scrollBy = (options, y) => {\n            if (!props.scrollable)\n                return;\n            const { value: container } = mergedContainerRef;\n            if (!container)\n                return;\n            if (typeof options === 'object') {\n                container.scrollBy(options);\n            }\n            else {\n                container.scrollBy(options, y || 0);\n            }\n        };\n        function scrollToPosition(left, top, elSize, debounce, behavior) {\n            const { value: container } = mergedContainerRef;\n            if (!container)\n                return;\n            if (debounce) {\n                const { scrollTop, offsetHeight } = container;\n                if (top > scrollTop) {\n                    if (top + elSize <= scrollTop + offsetHeight) {\n                        // do nothing\n                    }\n                    else {\n                        container.scrollTo({\n                            left,\n                            top: top + elSize - offsetHeight,\n                            behavior\n                        });\n                    }\n                    return;\n                }\n            }\n            container.scrollTo({\n                left,\n                top,\n                behavior\n            });\n        }\n        function handleMouseEnterWrapper() {\n            showXBar();\n            showYBar();\n            sync();\n        }\n        function handleMouseLeaveWrapper() {\n            hideBar();\n        }\n        function hideBar() {\n            hideYBar();\n            hideXBar();\n        }\n        function hideYBar() {\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            yBarVanishTimerId = window.setTimeout(() => {\n                isShowYBarRef.value = false;\n            }, props.duration);\n        }\n        function hideXBar() {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            xBarVanishTimerId = window.setTimeout(() => {\n                isShowXBarRef.value = false;\n            }, props.duration);\n        }\n        function showXBar() {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            isShowXBarRef.value = true;\n        }\n        function showYBar() {\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            isShowYBarRef.value = true;\n        }\n        function handleScroll(e) {\n            const { onScroll } = props;\n            if (onScroll)\n                onScroll(e);\n            syncScrollState();\n        }\n        function syncScrollState() {\n            // only collect scroll state, do not trigger any dom event\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerScrollTopRef.value = container.scrollTop;\n                containerScrollLeftRef.value =\n                    container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n            }\n        }\n        function syncPositionState() {\n            // only collect position state, do not trigger any dom event\n            // Don't use getClientBoundingRect because element may be scale transformed\n            const { value: content } = mergedContentRef;\n            if (content) {\n                contentHeightRef.value = content.offsetHeight;\n                contentWidthRef.value = content.offsetWidth;\n            }\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerHeightRef.value = container.offsetHeight;\n                containerWidthRef.value = container.offsetWidth;\n            }\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                xRailSizeRef.value = xRailEl.offsetWidth;\n            }\n            if (yRailEl) {\n                yRailSizeRef.value = yRailEl.offsetHeight;\n            }\n        }\n        /**\n         * Sometimes there's only one element that we can scroll,\n         * For example for textarea, there won't be a content element.\n         */\n        function syncUnifiedContainer() {\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerScrollTopRef.value = container.scrollTop;\n                containerScrollLeftRef.value =\n                    container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n                containerHeightRef.value = container.offsetHeight;\n                containerWidthRef.value = container.offsetWidth;\n                contentHeightRef.value = container.scrollHeight;\n                contentWidthRef.value = container.scrollWidth;\n            }\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                xRailSizeRef.value = xRailEl.offsetWidth;\n            }\n            if (yRailEl) {\n                yRailSizeRef.value = yRailEl.offsetHeight;\n            }\n        }\n        function sync() {\n            if (!props.scrollable)\n                return;\n            if (props.useUnifiedContainer) {\n                syncUnifiedContainer();\n            }\n            else {\n                syncPositionState();\n                syncScrollState();\n            }\n        }\n        function isMouseUpAway(e) {\n            var _a;\n            return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n        }\n        function handleXScrollMouseDown(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            xBarPressed = true;\n            on('mousemove', window, handleXScrollMouseMove, true);\n            on('mouseup', window, handleXScrollMouseUp, true);\n            memoXLeft = containerScrollLeftRef.value;\n            memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value)\n                ? window.innerWidth - e.clientX\n                : e.clientX;\n        }\n        function handleXScrollMouseMove(e) {\n            if (!xBarPressed)\n                return;\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xBarSize } = xBarSizeRef;\n            if (containerWidth === null || contentWidth === null)\n                return;\n            const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value)\n                ? window.innerWidth - e.clientX - memoMouseX\n                : e.clientX - memoMouseX;\n            const dScrollLeft = (dX * (contentWidth - containerWidth)) / (containerWidth - xBarSize);\n            const toScrollLeftUpperBound = contentWidth - containerWidth;\n            let toScrollLeft = memoXLeft + dScrollLeft;\n            toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n            toScrollLeft = Math.max(toScrollLeft, 0);\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n                const { internalOnUpdateScrollLeft } = props;\n                if (internalOnUpdateScrollLeft)\n                    internalOnUpdateScrollLeft(toScrollLeft);\n            }\n        }\n        function handleXScrollMouseUp(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            off('mousemove', window, handleXScrollMouseMove, true);\n            off('mouseup', window, handleXScrollMouseUp, true);\n            xBarPressed = false;\n            sync();\n            if (isMouseUpAway(e)) {\n                hideBar();\n            }\n        }\n        function handleYScrollMouseDown(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            yBarPressed = true;\n            on('mousemove', window, handleYScrollMouseMove, true);\n            on('mouseup', window, handleYScrollMouseUp, true);\n            memoYTop = containerScrollTopRef.value;\n            memoMouseY = e.clientY;\n        }\n        function handleYScrollMouseMove(e) {\n            if (!yBarPressed)\n                return;\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yBarSize } = yBarSizeRef;\n            if (containerHeight === null || contentHeight === null)\n                return;\n            const dY = e.clientY - memoMouseY;\n            const dScrollTop = (dY * (contentHeight - containerHeight)) / (containerHeight - yBarSize);\n            const toScrollTopUpperBound = contentHeight - containerHeight;\n            let toScrollTop = memoYTop + dScrollTop;\n            toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n            toScrollTop = Math.max(toScrollTop, 0);\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                container.scrollTop = toScrollTop;\n            }\n        }\n        function handleYScrollMouseUp(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            off('mousemove', window, handleYScrollMouseMove, true);\n            off('mouseup', window, handleYScrollMouseUp, true);\n            yBarPressed = false;\n            sync();\n            if (isMouseUpAway(e)) {\n                hideBar();\n            }\n        }\n        watchEffect(() => {\n            const { value: needXBar } = needXBarRef;\n            const { value: needYBar } = needYBarRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                if (!needXBar) {\n                    xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n                else {\n                    xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n            }\n            if (yRailEl) {\n                if (!needYBar) {\n                    yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n                else {\n                    yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n            }\n        });\n        onMounted(() => {\n            // if container exist, it always can't be resolved when scrollbar is mounted\n            // for example:\n            // - component\n            //   - scrollbar\n            //     - inner\n            // if you pass inner to scrollbar, you may use a ref inside component\n            // however, when scrollbar is mounted, ref is not ready at component\n            // you need to init by yourself\n            if (props.container)\n                return;\n            sync();\n        });\n        onBeforeUnmount(() => {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            off('mousemove', window, handleYScrollMouseMove, true);\n            off('mouseup', window, handleYScrollMouseUp, true);\n        });\n        const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut, scrollbarBorderRadius, scrollbarHeight, scrollbarWidth }, self: { color, colorHover } } = themeRef.value;\n            return {\n                '--n-scrollbar-bezier': cubicBezierEaseInOut,\n                '--n-scrollbar-color': color,\n                '--n-scrollbar-color-hover': colorHover,\n                '--n-scrollbar-border-radius': scrollbarBorderRadius,\n                '--n-scrollbar-width': scrollbarWidth,\n                '--n-scrollbar-height': scrollbarHeight\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('scrollbar', undefined, cssVarsRef, props)\n            : undefined;\n        const exposedMethods = {\n            scrollTo,\n            scrollBy,\n            sync,\n            syncUnifiedContainer,\n            handleMouseEnterWrapper,\n            handleMouseLeaveWrapper\n        };\n        return Object.assign(Object.assign({}, exposedMethods), { mergedClsPrefix: mergedClsPrefixRef, rtlEnabled: rtlEnabledRef, containerScrollTop: containerScrollTopRef, wrapperRef,\n            containerRef,\n            contentRef,\n            yRailRef,\n            xRailRef, needYBar: needYBarRef, needXBar: needXBarRef, yBarSizePx: yBarSizePxRef, xBarSizePx: xBarSizePxRef, yBarTopPx: yBarTopPxRef, xBarLeftPx: xBarLeftPxRef, isShowXBar: mergedShowXBarRef, isShowYBar: mergedShowYBarRef, isIos,\n            handleScroll,\n            handleContentResize,\n            handleContainerResize,\n            handleYScrollMouseDown,\n            handleXScrollMouseDown, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a;\n        const { $slots, mergedClsPrefix, triggerDisplayManually, rtlEnabled, internalHoistYRail } = this;\n        if (!this.scrollable)\n            return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n        const triggerIsNone = this.trigger === 'none';\n        const createYRail = () => {\n            return (h(\"div\", { ref: \"yRailRef\", class: [\n                    `${mergedClsPrefix}-scrollbar-rail`,\n                    `${mergedClsPrefix}-scrollbar-rail--vertical`\n                ], \"data-scrollbar-rail\": true, style: this.verticalRailStyle, \"aria-hidden\": true }, h((triggerIsNone ? Wrapper : Transition), triggerIsNone ? null : { name: 'fade-in-transition' }, {\n                default: () => this.needYBar && this.isShowYBar && !this.isIos ? (h(\"div\", { class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`, style: {\n                        height: this.yBarSizePx,\n                        top: this.yBarTopPx\n                    }, onMousedown: this.handleYScrollMouseDown })) : null\n            })));\n        };\n        const createChildren = () => {\n            var _a, _b;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return h('div', mergeProps(this.$attrs, {\n                role: 'none',\n                ref: 'wrapperRef',\n                class: [\n                    `${mergedClsPrefix}-scrollbar`,\n                    this.themeClass,\n                    rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`\n                ],\n                style: this.cssVars,\n                onMouseenter: triggerDisplayManually\n                    ? undefined\n                    : this.handleMouseEnterWrapper,\n                onMouseleave: triggerDisplayManually\n                    ? undefined\n                    : this.handleMouseLeaveWrapper\n            }), [\n                this.container ? ((_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots)) : (h(\"div\", { role: \"none\", ref: \"containerRef\", class: [\n                        `${mergedClsPrefix}-scrollbar-container`,\n                        this.containerClass\n                    ], style: this.containerStyle, onScroll: this.handleScroll, onWheel: this.onWheel },\n                    h(VResizeObserver, { onResize: this.handleContentResize }, {\n                        default: () => (h(\"div\", { ref: \"contentRef\", role: \"none\", style: [\n                                {\n                                    width: this.xScrollable ? 'fit-content' : null\n                                },\n                                this.contentStyle\n                            ], class: [\n                                `${mergedClsPrefix}-scrollbar-content`,\n                                this.contentClass\n                            ] }, $slots))\n                    }))),\n                internalHoistYRail ? null : createYRail(),\n                this.xScrollable && (h(\"div\", { ref: \"xRailRef\", class: [\n                        `${mergedClsPrefix}-scrollbar-rail`,\n                        `${mergedClsPrefix}-scrollbar-rail--horizontal`\n                    ], style: this.horizontalRailStyle, \"data-scrollbar-rail\": true, \"aria-hidden\": true }, h((triggerIsNone ? Wrapper : Transition), triggerIsNone ? null : { name: 'fade-in-transition' }, {\n                    default: () => this.needXBar && this.isShowXBar && !this.isIos ? (h(\"div\", { class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`, style: {\n                            width: this.xBarSizePx,\n                            right: rtlEnabled ? this.xBarLeftPx : undefined,\n                            left: rtlEnabled ? undefined : this.xBarLeftPx\n                        }, onMousedown: this.handleXScrollMouseDown })) : null\n                })))\n            ]);\n        };\n        const scrollbarNode = this.container ? (createChildren()) : (h(VResizeObserver, { onResize: this.handleContainerResize }, {\n            default: createChildren\n        }));\n        if (internalHoistYRail) {\n            return (h(Fragment, null,\n                scrollbarNode,\n                createYRail()));\n        }\n        else {\n            return scrollbarNode;\n        }\n    }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}