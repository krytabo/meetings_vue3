{"ast":null,"code":"import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr';\n// validate hours, minutes, seconds prop\nfunction validateUnits(value, max) {\n  if (value === undefined) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.every(v => v >= 0 && v <= max);\n  } else {\n    return value >= 0 && value <= max;\n  }\n}\nexport const timePickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: Array,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  defaultFormattedValue: String,\n  placeholder: String,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  value: Number,\n  format: {\n    type: String,\n    default: 'HH:mm:ss'\n  },\n  valueFormat: String,\n  formattedValue: String,\n  isHourDisabled: Function,\n  size: String,\n  isMinuteDisabled: Function,\n  isSecondDisabled: Function,\n  inputReadonly: Boolean,\n  clearable: Boolean,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  onUpdateFormattedValue: [Function, Array],\n  'onUpdate:formattedValue': [Function, Array],\n  onBlur: [Function, Array],\n  onConfirm: [Function, Array],\n  onClear: Function,\n  onFocus: [Function, Array],\n  // https://www.iana.org/time-zones\n  timeZone: String,\n  showIcon: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  hours: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 23)\n  },\n  minutes: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  seconds: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  use12Hours: Boolean,\n  // private\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'TimePicker',\n  props: timePickerProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('TimePicker');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n    const keyboardState = useKeyboard();\n    const inputInstRef = ref(null);\n    const panelInstRef = ref(null);\n    const dateFnsOptionsRef = computed(() => {\n      return {\n        locale: dateLocaleRef.value.locale\n      };\n    });\n    function getTimestampFromFormattedValue(value) {\n      if (value === null) return null;\n      return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n    }\n    const {\n      defaultValue,\n      defaultFormattedValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultFormattedValue !== undefined ? getTimestampFromFormattedValue(defaultFormattedValue) : defaultValue);\n    const mergedValueRef = computed(() => {\n      const {\n        formattedValue\n      } = props;\n      if (formattedValue !== undefined) {\n        return getTimestampFromFormattedValue(formattedValue);\n      }\n      const {\n        value\n      } = props;\n      if (value !== undefined) {\n        return value;\n      }\n      return uncontrolledValueRef.value;\n    });\n    const mergedFormatRef = computed(() => {\n      const {\n        timeZone\n      } = props;\n      if (timeZone) {\n        return (date, format, options) => {\n          return formatInTimeZone(date, timeZone, format, options);\n        };\n      } else {\n        return (date, _format, options) => {\n          return format(date, _format, options);\n        };\n      }\n    });\n    const displayTimeStringRef = ref('');\n    watch(() => props.timeZone, () => {\n      const mergedValue = mergedValueRef.value;\n      displayTimeStringRef.value = mergedValue === null ? '' : mergedFormatRef.value(mergedValue, props.format, dateFnsOptionsRef.value);\n    }, {\n      immediate: true\n    });\n    const uncontrolledShowRef = ref(false);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const memorizedValueRef = ref(mergedValueRef.value);\n    const transitionDisabledRef = ref(false);\n    const localizedNowRef = computed(() => {\n      return localeRef.value.now;\n    });\n    const localizedPlaceholderRef = computed(() => {\n      if (props.placeholder !== undefined) return props.placeholder;\n      return localeRef.value.placeholder;\n    });\n    const localizedNegativeTextRef = computed(() => {\n      return localeRef.value.negativeText;\n    });\n    const localizedPositiveTextRef = computed(() => {\n      return localeRef.value.positiveText;\n    });\n    const hourInFormatRef = computed(() => {\n      return /H|h|K|k/.test(props.format);\n    });\n    const minuteInFormatRef = computed(() => {\n      return props.format.includes('m');\n    });\n    const secondInFormatRef = computed(() => {\n      return props.format.includes('s');\n    });\n    const isHourInvalidRef = computed(() => {\n      const {\n        isHourDisabled\n      } = props;\n      if (hourValueRef.value === null) return false;\n      if (!isTimeInStep(hourValueRef.value, 'hours', props.hours)) return true;\n      if (!isHourDisabled) return false;\n      return isHourDisabled(hourValueRef.value);\n    });\n    const isMinuteInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      if (minuteValue === null || hourValue === null) return false;\n      if (!isTimeInStep(minuteValue, 'minutes', props.minutes)) return true;\n      const {\n        isMinuteDisabled\n      } = props;\n      if (!isMinuteDisabled) return false;\n      return isMinuteDisabled(minuteValue, hourValue);\n    });\n    const isSecondInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      const {\n        value: secondValue\n      } = secondValueRef;\n      if (secondValue === null || minuteValue === null || hourValue === null) {\n        return false;\n      }\n      if (!isTimeInStep(secondValue, 'seconds', props.seconds)) return true;\n      const {\n        isSecondDisabled\n      } = props;\n      if (!isSecondDisabled) return false;\n      return isSecondDisabled(secondValue, minuteValue, hourValue);\n    });\n    const isValueInvalidRef = computed(() => {\n      return isHourInvalidRef.value || isMinuteInvalidRef.value || isSecondInvalidRef.value;\n    });\n    const mergedAttrSizeRef = computed(() => {\n      return props.format.length + 4;\n    });\n    const amPmValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return getHours(value) < 12 ? 'am' : 'pm';\n    });\n    const hourValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'HH', dateFnsOptionsRef.value));\n    });\n    const minuteValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'mm', dateFnsOptionsRef.value));\n    });\n    const secondValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'ss', dateFnsOptionsRef.value));\n    });\n    function doUpdateFormattedValue(value, timestampValue) {\n      const {\n        onUpdateFormattedValue,\n        'onUpdate:formattedValue': _onUpdateFormattedValue\n      } = props;\n      if (onUpdateFormattedValue) {\n        call(onUpdateFormattedValue, value, timestampValue);\n      }\n      if (_onUpdateFormattedValue) {\n        call(_onUpdateFormattedValue, value, timestampValue);\n      }\n    }\n    function createFormattedValue(value) {\n      return value === null ? null : mergedFormatRef.value(value, props.valueFormat || props.format);\n    }\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const formattedValue = createFormattedValue(value);\n      if (onUpdateValue) {\n        call(onUpdateValue, value, formattedValue);\n      }\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, formattedValue);\n      }\n      if (onChange) call(onChange, value, formattedValue);\n      doUpdateFormattedValue(formattedValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doConfirm() {\n      const {\n        onConfirm\n      } = props;\n      if (onConfirm) {\n        call(onConfirm, mergedValueRef.value, createFormattedValue(mergedValueRef.value));\n      }\n    }\n    function handleTimeInputClear(e) {\n      var _a;\n      e.stopPropagation();\n      doUpdateValue(null);\n      deriveInputValue(null);\n      (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n    function handleFocusDetectorFocus() {\n      closePanel({\n        returnFocus: true\n      });\n    }\n    function handleInputKeydown(e) {\n      if (e.key === 'Escape' && mergedShowRef.value) {\n        markEventEffectPerformed(e);\n        // closePanel will be called in onDeactivated\n      }\n    }\n\n    function handleMenuKeydown(e) {\n      var _a;\n      switch (e.key) {\n        case 'Escape':\n          if (mergedShowRef.value) {\n            markEventEffectPerformed(e);\n            closePanel({\n              returnFocus: true\n            });\n          }\n          break;\n        case 'Tab':\n          if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n            e.preventDefault();\n            closePanel({\n              returnFocus: true\n            });\n          }\n          break;\n      }\n    }\n    function disableTransitionOneTick() {\n      transitionDisabledRef.value = true;\n      void nextTick(() => {\n        transitionDisabledRef.value = false;\n      });\n    }\n    function handleTriggerClick(e) {\n      if (mergedDisabledRef.value || happensIn(e, 'clear')) return;\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n    function handleHourClick(hour) {\n      if (typeof hour === 'string') return;\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n      } else {\n        doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n      }\n    }\n    function handleMinuteClick(minute) {\n      if (typeof minute === 'string') return;\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n      } else {\n        doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n      }\n    }\n    function handleSecondClick(second) {\n      if (typeof second === 'string') return;\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n      } else {\n        doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n      }\n    }\n    function handleAmPmClick(amPm) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        const now = new Date();\n        const hours = getHours(now);\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(now, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(now, hours - 12)));\n        }\n        doUpdateValue(getTime(now));\n      } else {\n        const hours = getHours(mergedValue);\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n        }\n      }\n    }\n    function deriveInputValue(time) {\n      if (time === undefined) time = mergedValueRef.value;\n      if (time === null) displayTimeStringRef.value = '';else {\n        displayTimeStringRef.value = mergedFormatRef.value(time, props.format, dateFnsOptionsRef.value);\n      }\n    }\n    function handleTimeInputFocus(e) {\n      if (isInternalFocusSwitch(e)) return;\n      doFocus(e);\n    }\n    function handleTimeInputBlur(e) {\n      var _a;\n      if (isInternalFocusSwitch(e)) return;\n      if (mergedShowRef.value) {\n        const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n        if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n          deriveInputValue();\n          doBlur(e);\n          closePanel({\n            returnFocus: false\n          });\n        }\n      } else {\n        deriveInputValue();\n        doBlur(e);\n      }\n    }\n    function handleTimeInputActivate() {\n      if (mergedDisabledRef.value) return;\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n    function handleTimeInputDeactivate() {\n      if (mergedDisabledRef.value) return;\n      deriveInputValue();\n      closePanel({\n        returnFocus: false\n      });\n    }\n    function scrollTimer() {\n      if (!panelInstRef.value) return;\n      const {\n        hourScrollRef,\n        minuteScrollRef,\n        secondScrollRef,\n        amPmScrollRef\n      } = panelInstRef.value;\n      [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach(itemScrollRef => {\n        var _a;\n        if (!itemScrollRef) return;\n        const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n        if (activeItemEl) {\n          itemScrollRef.scrollTo({\n            top: activeItemEl.offsetTop\n          });\n        }\n      });\n    }\n    function doUpdateShow(value) {\n      uncontrolledShowRef.value = value;\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n    }\n    function isInternalFocusSwitch(e) {\n      var _a, _b, _c;\n      return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) || ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n    }\n    function openPanel() {\n      memorizedValueRef.value = mergedValueRef.value;\n      doUpdateShow(true);\n      void nextTick(scrollTimer);\n    }\n    function handleClickOutside(e) {\n      var _a, _b;\n      if (mergedShowRef.value && !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(getPreciseEventTarget(e)))) {\n        closePanel({\n          returnFocus: false\n        });\n      }\n    }\n    function closePanel({\n      returnFocus\n    }) {\n      var _a;\n      if (mergedShowRef.value) {\n        doUpdateShow(false);\n        if (returnFocus) {\n          (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    }\n    function handleTimeInputUpdateValue(v) {\n      if (v === '') {\n        doUpdateValue(null);\n        return;\n      }\n      const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n      displayTimeStringRef.value = v;\n      if (isValid(time)) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n        if (mergedValue !== null) {\n          const newTime = set(mergedValue, {\n            hours: getHours(time),\n            minutes: getMinutes(time),\n            seconds: getSeconds(time)\n          });\n          doUpdateValue(getTime(newTime));\n        } else {\n          doUpdateValue(getTime(time));\n        }\n      }\n    }\n    function handleCancelClick() {\n      doUpdateValue(memorizedValueRef.value);\n      doUpdateShow(false);\n    }\n    function handleNowClick() {\n      const now = new Date();\n      const getNowTime = {\n        hours: getHours,\n        minutes: getMinutes,\n        seconds: getSeconds\n      };\n      const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map(i => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i]) ? getNowTime[i](now) : findSimilarTime(getNowTime[i](now), i, props[i]));\n      const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n      doUpdateValue(getTime(newValue));\n    }\n    function handleConfirmClick() {\n      deriveInputValue();\n      doConfirm();\n      closePanel({\n        returnFocus: true\n      });\n    }\n    function handleMenuFocusOut(e) {\n      if (isInternalFocusSwitch(e)) return;\n      deriveInputValue();\n      doBlur(e);\n      closePanel({\n        returnFocus: false\n      });\n    }\n    watch(mergedValueRef, value => {\n      deriveInputValue(value);\n      disableTransitionOneTick();\n      void nextTick(scrollTimer);\n    });\n    watch(mergedShowRef, () => {\n      if (isValueInvalidRef.value) {\n        doUpdateValue(memorizedValueRef.value);\n      }\n    });\n    provide(timePickerInjectionKey, {\n      mergedThemeRef: themeRef,\n      mergedClsPrefixRef\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const triggerCssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          iconColor,\n          iconColorDisabled\n        }\n      } = themeRef.value;\n      return {\n        '--n-icon-color-override': iconColor,\n        '--n-icon-color-disabled-override': iconColorDisabled,\n        '--n-bezier': cubicBezierEaseInOut\n      };\n    });\n    const triggerThemeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props) : undefined;\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          panelColor,\n          itemTextColor,\n          itemTextColorActive,\n          itemColorHover,\n          panelDividerColor,\n          panelBoxShadow,\n          itemOpacityDisabled,\n          borderRadius,\n          itemFontSize,\n          itemWidth,\n          itemHeight,\n          panelActionPadding,\n          itemBorderRadius\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-item-color-hover': itemColorHover,\n        '--n-item-font-size': itemFontSize,\n        '--n-item-height': itemHeight,\n        '--n-item-opacity-disabled': itemOpacityDisabled,\n        '--n-item-text-color': itemTextColor,\n        '--n-item-text-color-active': itemTextColorActive,\n        '--n-item-width': itemWidth,\n        '--n-panel-action-padding': panelActionPadding,\n        '--n-panel-box-shadow': panelBoxShadow,\n        '--n-panel-color': panelColor,\n        '--n-panel-divider-color': panelDividerColor,\n        '--n-item-border-radius': itemBorderRadius\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker', undefined, cssVarsRef, props) : undefined;\n    return {\n      focus: exposedMethods.focus,\n      blur: exposedMethods.blur,\n      mergedStatus: mergedStatusRef,\n      mergedBordered: mergedBorderedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      isMounted: useIsMounted(),\n      inputInstRef,\n      panelInstRef,\n      adjustedTo: useAdjustedTo(props),\n      mergedShow: mergedShowRef,\n      localizedNow: localizedNowRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      localizedNegativeText: localizedNegativeTextRef,\n      localizedPositiveText: localizedPositiveTextRef,\n      hourInFormat: hourInFormatRef,\n      minuteInFormat: minuteInFormatRef,\n      secondInFormat: secondInFormatRef,\n      mergedAttrSize: mergedAttrSizeRef,\n      displayTimeString: displayTimeStringRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      isValueInvalid: isValueInvalidRef,\n      isHourInvalid: isHourInvalidRef,\n      isMinuteInvalid: isMinuteInvalidRef,\n      isSecondInvalid: isSecondInvalidRef,\n      transitionDisabled: transitionDisabledRef,\n      hourValue: hourValueRef,\n      minuteValue: minuteValueRef,\n      secondValue: secondValueRef,\n      amPmValue: amPmValueRef,\n      handleInputKeydown,\n      handleTimeInputFocus,\n      handleTimeInputBlur,\n      handleNowClick,\n      handleConfirmClick,\n      handleTimeInputUpdateValue,\n      handleMenuFocusOut,\n      handleCancelClick,\n      handleClickOutside,\n      handleTimeInputActivate,\n      handleTimeInputDeactivate,\n      handleHourClick,\n      handleMinuteClick,\n      handleSecondClick,\n      handleAmPmClick,\n      handleTimeInputClear,\n      handleFocusDetectorFocus,\n      handleMenuKeydown,\n      handleTriggerClick,\n      mergedTheme: themeRef,\n      triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n      triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n      triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots,\n      triggerOnRender\n    } = this;\n    triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass],\n      style: this.triggerCssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInput, {\n          ref: \"inputInstRef\",\n          status: this.mergedStatus,\n          value: this.displayTimeString,\n          bordered: this.mergedBordered,\n          passivelyActivated: true,\n          attrSize: this.mergedAttrSize,\n          theme: this.mergedTheme.peers.Input,\n          themeOverrides: this.mergedTheme.peerOverrides.Input,\n          stateful: this.stateful,\n          size: this.mergedSize,\n          placeholder: this.localizedPlaceholder,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          textDecoration: this.isValueInvalid ? 'line-through' : undefined,\n          onFocus: this.handleTimeInputFocus,\n          onBlur: this.handleTimeInputBlur,\n          onActivate: this.handleTimeInputActivate,\n          onDeactivate: this.handleTimeInputDeactivate,\n          onUpdateValue: this.handleTimeInputUpdateValue,\n          onClear: this.handleTimeInputClear,\n          internalDeactivateOnEnter: true,\n          internalForceFocus: this.mergedShow,\n          readonly: this.inputReadonly || this.mergedDisabled,\n          onClick: this.handleTriggerClick,\n          onKeydown: this.handleInputKeydown\n        }, this.showIcon ? {\n          [this.clearable ? 'clear-icon-placeholder' : 'suffix']: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            class: `${mergedClsPrefix}-time-picker-icon`\n          }, {\n            default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n          })\n        } : null)\n      }), h(VFollower, {\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        containerClass: this.namespace,\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => {\n            var _a;\n            if (this.mergedShow) {\n              (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n              return withDirectives(h(Panel, {\n                ref: \"panelInstRef\",\n                actions: this.actions,\n                class: this.themeClass,\n                style: this.cssVars,\n                seconds: this.seconds,\n                minutes: this.minutes,\n                hours: this.hours,\n                transitionDisabled: this.transitionDisabled,\n                hourValue: this.hourValue,\n                showHour: this.hourInFormat,\n                isHourInvalid: this.isHourInvalid,\n                isHourDisabled: this.isHourDisabled,\n                minuteValue: this.minuteValue,\n                showMinute: this.minuteInFormat,\n                isMinuteInvalid: this.isMinuteInvalid,\n                isMinuteDisabled: this.isMinuteDisabled,\n                secondValue: this.secondValue,\n                amPmValue: this.amPmValue,\n                showSecond: this.secondInFormat,\n                isSecondInvalid: this.isSecondInvalid,\n                isSecondDisabled: this.isSecondDisabled,\n                isValueInvalid: this.isValueInvalid,\n                nowText: this.localizedNow,\n                confirmText: this.localizedPositiveText,\n                use12Hours: this.use12Hours,\n                onFocusout: this.handleMenuFocusOut,\n                onKeydown: this.handleMenuKeydown,\n                onHourClick: this.handleHourClick,\n                onMinuteClick: this.handleMinuteClick,\n                onSecondClick: this.handleSecondClick,\n                onAmPmClick: this.handleAmPmClick,\n                onNowClick: this.handleNowClick,\n                onConfirmClick: this.handleConfirmClick,\n                onFocusDetectorFocus: this.handleFocusDetectorFocus\n              }), [[clickoutside, this.handleClickOutside, undefined, {\n                capture: true\n              }]]);\n            }\n            return null;\n          }\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","ref","toRef","defineComponent","computed","withDirectives","Transition","provide","nextTick","watch","watchEffect","useIsMounted","useKeyboard","useMergedState","VBinder","VTarget","VFollower","clickoutside","getPreciseEventTarget","happensIn","isValid","startOfSecond","startOfMinute","startOfHour","format","set","setHours","setMinutes","setSeconds","getTime","getMinutes","getHours","getSeconds","formatInTimeZone","strictParse","TimeIcon","NInput","NBaseIcon","useConfig","useTheme","useLocale","useFormItem","useThemeClass","call","markEventEffectPerformed","useAdjustedTo","warnOnce","timePickerLight","Panel","timePickerInjectionKey","findSimilarTime","isTimeInStep","style","validateUnits","value","max","undefined","Array","isArray","every","v","timePickerProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","actions","defaultValue","Number","defaultFormattedValue","String","placeholder","placement","valueFormat","formattedValue","isHourDisabled","Function","size","isMinuteDisabled","isSecondDisabled","inputReadonly","clearable","status","onUpdateValue","onUpdateShow","onUpdateFormattedValue","onBlur","onConfirm","onClear","onFocus","timeZone","showIcon","disabled","show","hours","validator","minutes","seconds","use12Hours","stateful","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","localeRef","dateLocaleRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","themeRef","keyboardState","inputInstRef","panelInstRef","dateFnsOptionsRef","locale","getTimestampFromFormattedValue","Date","uncontrolledValueRef","mergedValueRef","mergedFormatRef","date","options","_format","displayTimeStringRef","mergedValue","immediate","uncontrolledShowRef","controlledShowRef","mergedShowRef","memorizedValueRef","transitionDisabledRef","localizedNowRef","now","localizedPlaceholderRef","localizedNegativeTextRef","negativeText","localizedPositiveTextRef","positiveText","hourInFormatRef","test","minuteInFormatRef","includes","secondInFormatRef","isHourInvalidRef","hourValueRef","isMinuteInvalidRef","minuteValue","minuteValueRef","hourValue","isSecondInvalidRef","secondValue","secondValueRef","isValueInvalidRef","mergedAttrSizeRef","length","amPmValueRef","doUpdateFormattedValue","timestampValue","_onUpdateFormattedValue","createFormattedValue","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doFocus","e","nTriggerFormFocus","doBlur","nTriggerFormBlur","doConfirm","handleTimeInputClear","_a","stopPropagation","deriveInputValue","handleFocusDetectorFocus","closePanel","returnFocus","handleInputKeydown","key","handleMenuKeydown","shift","target","$el","preventDefault","disableTransitionOneTick","handleTriggerClick","openPanel","handleHourClick","hour","handleMinuteClick","minute","handleSecondClick","second","handleAmPmClick","amPm","time","handleTimeInputFocus","isInternalFocusSwitch","handleTimeInputBlur","panelEl","contains","relatedTarget","handleTimeInputActivate","handleTimeInputDeactivate","scrollTimer","hourScrollRef","minuteScrollRef","secondScrollRef","amPmScrollRef","forEach","itemScrollRef","activeItemEl","contentRef","querySelector","scrollTo","top","offsetTop","doUpdateShow","_onUpdateShow","_b","_c","wrapperElRef","handleClickOutside","focus","handleTimeInputUpdateValue","newTime","handleCancelClick","handleNowClick","getNowTime","mergeHours","mergeMinutes","mergeSeconds","map","i","newValue","handleConfirmClick","handleMenuFocusOut","mergedThemeRef","exposedMethods","blur","triggerCssVarsRef","common","cubicBezierEaseInOut","self","iconColor","iconColorDisabled","triggerThemeClassHandle","cssVarsRef","panelColor","itemTextColor","itemTextColorActive","itemColorHover","panelDividerColor","panelBoxShadow","itemOpacityDisabled","borderRadius","itemFontSize","itemWidth","itemHeight","panelActionPadding","itemBorderRadius","themeClassHandle","mergedStatus","mergedBordered","mergedClsPrefix","namespace","uncontrolledValue","isMounted","adjustedTo","mergedShow","localizedNow","localizedPlaceholder","localizedNegativeText","localizedPositiveText","hourInFormat","minuteInFormat","secondInFormat","mergedAttrSize","displayTimeString","mergedSize","mergedDisabled","isValueInvalid","isHourInvalid","isMinuteInvalid","isSecondInvalid","transitionDisabled","amPmValue","mergedTheme","triggerCssVars","triggerThemeClass","themeClass","triggerOnRender","onRender","cssVars","render","$slots","class","passivelyActivated","attrSize","theme","peers","Input","themeOverrides","peerOverrides","textDecoration","onActivate","onDeactivate","internalDeactivateOnEnter","internalForceFocus","readonly","onClick","onKeydown","clsPrefix","icon","teleportDisabled","tdkey","containerClass","appear","showHour","showMinute","showSecond","nowText","confirmText","onFocusout","onHourClick","onMinuteClick","onSecondClick","onAmPmClick","onNowClick","onConfirmClick","onFocusDetectorFocus","capture"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/time-picker/src/TimePicker.js"],"sourcesContent":["import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr';\n// validate hours, minutes, seconds prop\nfunction validateUnits(value, max) {\n    if (value === undefined) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.every((v) => v >= 0 && v <= max);\n    }\n    else {\n        return value >= 0 && value <= max;\n    }\n}\nexport const timePickerProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, actions: Array, defaultValue: {\n        type: Number,\n        default: null\n    }, defaultFormattedValue: String, placeholder: String, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, value: Number, format: {\n        type: String,\n        default: 'HH:mm:ss'\n    }, valueFormat: String, formattedValue: String, isHourDisabled: Function, size: String, isMinuteDisabled: Function, isSecondDisabled: Function, inputReadonly: Boolean, clearable: Boolean, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], onUpdateFormattedValue: [Function, Array], 'onUpdate:formattedValue': [Function, Array], onBlur: [Function, Array], onConfirm: [Function, Array], onClear: Function, onFocus: [Function, Array], \n    // https://www.iana.org/time-zones\n    timeZone: String, showIcon: {\n        type: Boolean,\n        default: true\n    }, disabled: {\n        type: Boolean,\n        default: undefined\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, hours: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 23)\n    }, minutes: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, seconds: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, use12Hours: Boolean, \n    // private\n    stateful: {\n        type: Boolean,\n        default: true\n    }, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'TimePicker',\n    props: timePickerProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const { localeRef, dateLocaleRef } = useLocale('TimePicker');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n        const keyboardState = useKeyboard();\n        const inputInstRef = ref(null);\n        const panelInstRef = ref(null);\n        const dateFnsOptionsRef = computed(() => {\n            return {\n                locale: dateLocaleRef.value.locale\n            };\n        });\n        function getTimestampFromFormattedValue(value) {\n            if (value === null)\n                return null;\n            return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n        }\n        const { defaultValue, defaultFormattedValue } = props;\n        const uncontrolledValueRef = ref(defaultFormattedValue !== undefined\n            ? getTimestampFromFormattedValue(defaultFormattedValue)\n            : defaultValue);\n        const mergedValueRef = computed(() => {\n            const { formattedValue } = props;\n            if (formattedValue !== undefined) {\n                return getTimestampFromFormattedValue(formattedValue);\n            }\n            const { value } = props;\n            if (value !== undefined) {\n                return value;\n            }\n            return uncontrolledValueRef.value;\n        });\n        const mergedFormatRef = computed(() => {\n            const { timeZone } = props;\n            if (timeZone) {\n                return (date, format, options) => {\n                    return formatInTimeZone(date, timeZone, format, options);\n                };\n            }\n            else {\n                return (date, _format, options) => {\n                    return format(date, _format, options);\n                };\n            }\n        });\n        const displayTimeStringRef = ref('');\n        watch(() => props.timeZone, () => {\n            const mergedValue = mergedValueRef.value;\n            displayTimeStringRef.value =\n                mergedValue === null\n                    ? ''\n                    : mergedFormatRef.value(mergedValue, props.format, dateFnsOptionsRef.value);\n        }, {\n            immediate: true\n        });\n        const uncontrolledShowRef = ref(false);\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const memorizedValueRef = ref(mergedValueRef.value);\n        const transitionDisabledRef = ref(false);\n        const localizedNowRef = computed(() => {\n            return localeRef.value.now;\n        });\n        const localizedPlaceholderRef = computed(() => {\n            if (props.placeholder !== undefined)\n                return props.placeholder;\n            return localeRef.value.placeholder;\n        });\n        const localizedNegativeTextRef = computed(() => {\n            return localeRef.value.negativeText;\n        });\n        const localizedPositiveTextRef = computed(() => {\n            return localeRef.value.positiveText;\n        });\n        const hourInFormatRef = computed(() => {\n            return /H|h|K|k/.test(props.format);\n        });\n        const minuteInFormatRef = computed(() => {\n            return props.format.includes('m');\n        });\n        const secondInFormatRef = computed(() => {\n            return props.format.includes('s');\n        });\n        const isHourInvalidRef = computed(() => {\n            const { isHourDisabled } = props;\n            if (hourValueRef.value === null)\n                return false;\n            if (!isTimeInStep(hourValueRef.value, 'hours', props.hours))\n                return true;\n            if (!isHourDisabled)\n                return false;\n            return isHourDisabled(hourValueRef.value);\n        });\n        const isMinuteInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            if (minuteValue === null || hourValue === null)\n                return false;\n            if (!isTimeInStep(minuteValue, 'minutes', props.minutes))\n                return true;\n            const { isMinuteDisabled } = props;\n            if (!isMinuteDisabled)\n                return false;\n            return isMinuteDisabled(minuteValue, hourValue);\n        });\n        const isSecondInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            const { value: secondValue } = secondValueRef;\n            if (secondValue === null || minuteValue === null || hourValue === null) {\n                return false;\n            }\n            if (!isTimeInStep(secondValue, 'seconds', props.seconds))\n                return true;\n            const { isSecondDisabled } = props;\n            if (!isSecondDisabled)\n                return false;\n            return isSecondDisabled(secondValue, minuteValue, hourValue);\n        });\n        const isValueInvalidRef = computed(() => {\n            return (isHourInvalidRef.value ||\n                isMinuteInvalidRef.value ||\n                isSecondInvalidRef.value);\n        });\n        const mergedAttrSizeRef = computed(() => {\n            return props.format.length + 4;\n        });\n        const amPmValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return getHours(value) < 12 ? 'am' : 'pm';\n        });\n        const hourValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'HH', dateFnsOptionsRef.value));\n        });\n        const minuteValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'mm', dateFnsOptionsRef.value));\n        });\n        const secondValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'ss', dateFnsOptionsRef.value));\n        });\n        function doUpdateFormattedValue(value, timestampValue) {\n            const { onUpdateFormattedValue, 'onUpdate:formattedValue': _onUpdateFormattedValue } = props;\n            if (onUpdateFormattedValue) {\n                call(onUpdateFormattedValue, value, timestampValue);\n            }\n            if (_onUpdateFormattedValue) {\n                call(_onUpdateFormattedValue, value, timestampValue);\n            }\n        }\n        function createFormattedValue(value) {\n            return value === null\n                ? null\n                : mergedFormatRef.value(value, props.valueFormat || props.format);\n        }\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onChange } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const formattedValue = createFormattedValue(value);\n            if (onUpdateValue) {\n                call(onUpdateValue, value, formattedValue);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, formattedValue);\n            }\n            if (onChange)\n                call(onChange, value, formattedValue);\n            doUpdateFormattedValue(formattedValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doConfirm() {\n            const { onConfirm } = props;\n            if (onConfirm) {\n                call(onConfirm, mergedValueRef.value, createFormattedValue(mergedValueRef.value));\n            }\n        }\n        function handleTimeInputClear(e) {\n            var _a;\n            e.stopPropagation();\n            doUpdateValue(null);\n            deriveInputValue(null);\n            (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        function handleFocusDetectorFocus() {\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleInputKeydown(e) {\n            if (e.key === 'Escape' && mergedShowRef.value) {\n                markEventEffectPerformed(e);\n                // closePanel will be called in onDeactivated\n            }\n        }\n        function handleMenuKeydown(e) {\n            var _a;\n            switch (e.key) {\n                case 'Escape':\n                    if (mergedShowRef.value) {\n                        markEventEffectPerformed(e);\n                        closePanel({\n                            returnFocus: true\n                        });\n                    }\n                    break;\n                case 'Tab':\n                    if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n                        e.preventDefault();\n                        closePanel({\n                            returnFocus: true\n                        });\n                    }\n                    break;\n            }\n        }\n        function disableTransitionOneTick() {\n            transitionDisabledRef.value = true;\n            void nextTick(() => {\n                transitionDisabledRef.value = false;\n            });\n        }\n        function handleTriggerClick(e) {\n            if (mergedDisabledRef.value || happensIn(e, 'clear'))\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleHourClick(hour) {\n            if (typeof hour === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n            }\n            else {\n                doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n            }\n        }\n        function handleMinuteClick(minute) {\n            if (typeof minute === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n            }\n            else {\n                doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n            }\n        }\n        function handleSecondClick(second) {\n            if (typeof second === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n            }\n            else {\n                doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n            }\n        }\n        function handleAmPmClick(amPm) {\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                const now = new Date();\n                const hours = getHours(now);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(now, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(now, hours - 12)));\n                }\n                doUpdateValue(getTime(now));\n            }\n            else {\n                const hours = getHours(mergedValue);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n                }\n            }\n        }\n        function deriveInputValue(time) {\n            if (time === undefined)\n                time = mergedValueRef.value;\n            if (time === null)\n                displayTimeStringRef.value = '';\n            else {\n                displayTimeStringRef.value = mergedFormatRef.value(time, props.format, dateFnsOptionsRef.value);\n            }\n        }\n        function handleTimeInputFocus(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            doFocus(e);\n        }\n        function handleTimeInputBlur(e) {\n            var _a;\n            if (isInternalFocusSwitch(e))\n                return;\n            if (mergedShowRef.value) {\n                const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n                if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n                    deriveInputValue();\n                    doBlur(e);\n                    closePanel({\n                        returnFocus: false\n                    });\n                }\n            }\n            else {\n                deriveInputValue();\n                doBlur(e);\n            }\n        }\n        function handleTimeInputActivate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleTimeInputDeactivate() {\n            if (mergedDisabledRef.value)\n                return;\n            deriveInputValue();\n            closePanel({\n                returnFocus: false\n            });\n        }\n        function scrollTimer() {\n            if (!panelInstRef.value)\n                return;\n            const { hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef } = panelInstRef.value;\n            [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach((itemScrollRef) => {\n                var _a;\n                if (!itemScrollRef)\n                    return;\n                const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n                if (activeItemEl) {\n                    itemScrollRef.scrollTo({\n                        top: activeItemEl.offsetTop\n                    });\n                }\n            });\n        }\n        function doUpdateShow(value) {\n            uncontrolledShowRef.value = value;\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n        }\n        function isInternalFocusSwitch(e) {\n            var _a, _b, _c;\n            return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) ||\n                ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n        }\n        function openPanel() {\n            memorizedValueRef.value = mergedValueRef.value;\n            doUpdateShow(true);\n            void nextTick(scrollTimer);\n        }\n        function handleClickOutside(e) {\n            var _a, _b;\n            if (mergedShowRef.value &&\n                !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(getPreciseEventTarget(e)))) {\n                closePanel({\n                    returnFocus: false\n                });\n            }\n        }\n        function closePanel({ returnFocus }) {\n            var _a;\n            if (mergedShowRef.value) {\n                doUpdateShow(false);\n                if (returnFocus) {\n                    (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }\n        }\n        function handleTimeInputUpdateValue(v) {\n            if (v === '') {\n                doUpdateValue(null);\n                return;\n            }\n            const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n            displayTimeStringRef.value = v;\n            if (isValid(time)) {\n                const { value: mergedValue } = mergedValueRef;\n                if (mergedValue !== null) {\n                    const newTime = set(mergedValue, {\n                        hours: getHours(time),\n                        minutes: getMinutes(time),\n                        seconds: getSeconds(time)\n                    });\n                    doUpdateValue(getTime(newTime));\n                }\n                else {\n                    doUpdateValue(getTime(time));\n                }\n            }\n        }\n        function handleCancelClick() {\n            doUpdateValue(memorizedValueRef.value);\n            doUpdateShow(false);\n        }\n        function handleNowClick() {\n            const now = new Date();\n            const getNowTime = {\n                hours: getHours,\n                minutes: getMinutes,\n                seconds: getSeconds\n            };\n            const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map((i) => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i])\n                ? getNowTime[i](now)\n                : findSimilarTime(getNowTime[i](now), i, props[i]));\n            const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n            doUpdateValue(getTime(newValue));\n        }\n        function handleConfirmClick() {\n            deriveInputValue();\n            doConfirm();\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleMenuFocusOut(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            deriveInputValue();\n            doBlur(e);\n            closePanel({\n                returnFocus: false\n            });\n        }\n        watch(mergedValueRef, (value) => {\n            deriveInputValue(value);\n            disableTransitionOneTick();\n            void nextTick(scrollTimer);\n        });\n        watch(mergedShowRef, () => {\n            if (isValueInvalidRef.value) {\n                doUpdateValue(memorizedValueRef.value);\n            }\n        });\n        provide(timePickerInjectionKey, {\n            mergedThemeRef: themeRef,\n            mergedClsPrefixRef\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const triggerCssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { iconColor, iconColorDisabled } } = themeRef.value;\n            return {\n                '--n-icon-color-override': iconColor,\n                '--n-icon-color-disabled-override': iconColorDisabled,\n                '--n-bezier': cubicBezierEaseInOut\n            };\n        });\n        const triggerThemeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props)\n            : undefined;\n        const cssVarsRef = computed(() => {\n            const { self: { panelColor, itemTextColor, itemTextColorActive, itemColorHover, panelDividerColor, panelBoxShadow, itemOpacityDisabled, borderRadius, itemFontSize, itemWidth, itemHeight, panelActionPadding, itemBorderRadius }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-font-size': itemFontSize,\n                '--n-item-height': itemHeight,\n                '--n-item-opacity-disabled': itemOpacityDisabled,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-active': itemTextColorActive,\n                '--n-item-width': itemWidth,\n                '--n-panel-action-padding': panelActionPadding,\n                '--n-panel-box-shadow': panelBoxShadow,\n                '--n-panel-color': panelColor,\n                '--n-panel-divider-color': panelDividerColor,\n                '--n-item-border-radius': itemBorderRadius\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            focus: exposedMethods.focus,\n            blur: exposedMethods.blur,\n            mergedStatus: mergedStatusRef,\n            mergedBordered: mergedBorderedRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            isMounted: useIsMounted(),\n            inputInstRef,\n            panelInstRef,\n            adjustedTo: useAdjustedTo(props),\n            mergedShow: mergedShowRef,\n            localizedNow: localizedNowRef,\n            localizedPlaceholder: localizedPlaceholderRef,\n            localizedNegativeText: localizedNegativeTextRef,\n            localizedPositiveText: localizedPositiveTextRef,\n            hourInFormat: hourInFormatRef,\n            minuteInFormat: minuteInFormatRef,\n            secondInFormat: secondInFormatRef,\n            mergedAttrSize: mergedAttrSizeRef,\n            displayTimeString: displayTimeStringRef,\n            mergedSize: mergedSizeRef,\n            mergedDisabled: mergedDisabledRef,\n            isValueInvalid: isValueInvalidRef,\n            isHourInvalid: isHourInvalidRef,\n            isMinuteInvalid: isMinuteInvalidRef,\n            isSecondInvalid: isSecondInvalidRef,\n            transitionDisabled: transitionDisabledRef,\n            hourValue: hourValueRef,\n            minuteValue: minuteValueRef,\n            secondValue: secondValueRef,\n            amPmValue: amPmValueRef,\n            handleInputKeydown,\n            handleTimeInputFocus,\n            handleTimeInputBlur,\n            handleNowClick,\n            handleConfirmClick,\n            handleTimeInputUpdateValue,\n            handleMenuFocusOut,\n            handleCancelClick,\n            handleClickOutside,\n            handleTimeInputActivate,\n            handleTimeInputDeactivate,\n            handleHourClick,\n            handleMinuteClick,\n            handleSecondClick,\n            handleAmPmClick,\n            handleTimeInputClear,\n            handleFocusDetectorFocus,\n            handleMenuKeydown,\n            handleTriggerClick,\n            mergedTheme: themeRef,\n            triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n            triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n            triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, $slots, triggerOnRender } = this;\n        triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n        return (h(\"div\", { class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass], style: this.triggerCssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInput, { ref: \"inputInstRef\", status: this.mergedStatus, value: this.displayTimeString, bordered: this.mergedBordered, passivelyActivated: true, attrSize: this.mergedAttrSize, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, stateful: this.stateful, size: this.mergedSize, placeholder: this.localizedPlaceholder, clearable: this.clearable, disabled: this.mergedDisabled, textDecoration: this.isValueInvalid ? 'line-through' : undefined, onFocus: this.handleTimeInputFocus, onBlur: this.handleTimeInputBlur, onActivate: this.handleTimeInputActivate, onDeactivate: this.handleTimeInputDeactivate, onUpdateValue: this.handleTimeInputUpdateValue, onClear: this.handleTimeInputClear, internalDeactivateOnEnter: true, internalForceFocus: this.mergedShow, readonly: this.inputReadonly || this.mergedDisabled, onClick: this.handleTriggerClick, onKeydown: this.handleInputKeydown }, this.showIcon\n                            ? {\n                                [this.clearable\n                                    ? 'clear-icon-placeholder'\n                                    : 'suffix']: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-time-picker-icon` }, {\n                                    default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n                                }))\n                            }\n                            : null))\n                    }),\n                    h(VFollower, { teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, show: this.mergedShow, to: this.adjustedTo, containerClass: this.namespace, placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => {\n                                var _a;\n                                if (this.mergedShow) {\n                                    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                    return withDirectives(h(Panel, { ref: \"panelInstRef\", actions: this.actions, class: this.themeClass, style: this.cssVars, seconds: this.seconds, minutes: this.minutes, hours: this.hours, transitionDisabled: this.transitionDisabled, hourValue: this.hourValue, showHour: this.hourInFormat, isHourInvalid: this.isHourInvalid, isHourDisabled: this.isHourDisabled, minuteValue: this.minuteValue, showMinute: this.minuteInFormat, isMinuteInvalid: this.isMinuteInvalid, isMinuteDisabled: this.isMinuteDisabled, secondValue: this.secondValue, amPmValue: this.amPmValue, showSecond: this.secondInFormat, isSecondInvalid: this.isSecondInvalid, isSecondDisabled: this.isSecondDisabled, isValueInvalid: this.isValueInvalid, nowText: this.localizedNow, confirmText: this.localizedPositiveText, use12Hours: this.use12Hours, onFocusout: this.handleMenuFocusOut, onKeydown: this.handleMenuKeydown, onHourClick: this.handleHourClick, onMinuteClick: this.handleMinuteClick, onSecondClick: this.handleSecondClick, onAmPmClick: this.handleAmPmClick, onNowClick: this.handleNowClick, onConfirmClick: this.handleConfirmClick, onFocusDetectorFocus: this.handleFocusDetectorFocus }), [\n                                        [\n                                            clickoutside,\n                                            this.handleClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                                }\n                                return null;\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}