{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, defineComponent, TransitionGroup, computed, ref, watch, toRef } from 'vue';\nimport NFadeInExpandTransition from '../../fade-in-expand-transition';\nimport { useStyle } from '../../../_mixins';\nimport SlotMachineNumber from './SlotMachineNumber';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n  name: 'BaseSlotMachine',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [Number, String],\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: undefined\n    },\n    appeared: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup(props) {\n    useStyle('-base-slot-machine', style, toRef(props, 'clsPrefix'));\n    const oldValueRef = ref();\n    const newValueRef = ref();\n    const numbersRef = computed(() => {\n      if (typeof props.value === 'string') return [];\n      if (props.value < 1) return [0];\n      const numbers = [];\n      let value = props.value;\n      if (props.max !== undefined) {\n        value = Math.min(props.max, value);\n      }\n      while (value >= 1) {\n        numbers.push(value % 10);\n        value /= 10;\n        value = Math.floor(value);\n      }\n      numbers.reverse();\n      return numbers;\n    });\n    watch(toRef(props, 'value'), (value, oldValue) => {\n      if (typeof value === 'string') {\n        newValueRef.value = undefined;\n        oldValueRef.value = undefined;\n      } else {\n        if (typeof oldValue === 'string') {\n          newValueRef.value = value;\n          oldValueRef.value = undefined;\n        } else {\n          newValueRef.value = value;\n          oldValueRef.value = oldValue;\n        }\n      }\n    });\n    return () => {\n      const {\n        value,\n        clsPrefix\n      } = props;\n      return typeof value === 'number' ? h(\"span\", {\n        class: `${clsPrefix}-base-slot-machine`\n      }, h(TransitionGroup, {\n        name: \"fade-up-width-expand-transition\",\n        tag: \"span\"\n      }, {\n        default: () => numbersRef.value.map((number, i) => h(SlotMachineNumber, {\n          clsPrefix: clsPrefix,\n          key: numbersRef.value.length - i - 1,\n          oldOriginalNumber: oldValueRef.value,\n          newOriginalNumber: newValueRef.value,\n          value: number\n        }))\n      }), h(NFadeInExpandTransition, {\n        key: \"+\",\n        width: true\n      }, {\n        default: () => props.max !== undefined && props.max < value ? h(SlotMachineNumber, {\n          clsPrefix: clsPrefix,\n          value: \"+\"\n        }) : null\n      })) : h(\"span\", {\n        class: `${clsPrefix}-base-slot-machine`\n      }, value);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","TransitionGroup","computed","ref","watch","toRef","NFadeInExpandTransition","useStyle","SlotMachineNumber","style","name","props","clsPrefix","type","String","required","value","Number","default","max","undefined","appeared","Boolean","setup","oldValueRef","newValueRef","numbersRef","numbers","Math","min","push","floor","reverse","oldValue","class","tag","map","number","i","key","length","oldOriginalNumber","newOriginalNumber","width"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/_internal/slot-machine/src/SlotMachine.js"],"sourcesContent":["import { h, defineComponent, TransitionGroup, computed, ref, watch, toRef } from 'vue';\nimport NFadeInExpandTransition from '../../fade-in-expand-transition';\nimport { useStyle } from '../../../_mixins';\nimport SlotMachineNumber from './SlotMachineNumber';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n    name: 'BaseSlotMachine',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        value: {\n            type: [Number, String],\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: undefined\n        },\n        appeared: {\n            type: Boolean,\n            required: true\n        }\n    },\n    setup(props) {\n        useStyle('-base-slot-machine', style, toRef(props, 'clsPrefix'));\n        const oldValueRef = ref();\n        const newValueRef = ref();\n        const numbersRef = computed(() => {\n            if (typeof props.value === 'string')\n                return [];\n            if (props.value < 1)\n                return [0];\n            const numbers = [];\n            let value = props.value;\n            if (props.max !== undefined) {\n                value = Math.min(props.max, value);\n            }\n            while (value >= 1) {\n                numbers.push(value % 10);\n                value /= 10;\n                value = Math.floor(value);\n            }\n            numbers.reverse();\n            return numbers;\n        });\n        watch(toRef(props, 'value'), (value, oldValue) => {\n            if (typeof value === 'string') {\n                newValueRef.value = undefined;\n                oldValueRef.value = undefined;\n            }\n            else {\n                if (typeof oldValue === 'string') {\n                    newValueRef.value = value;\n                    oldValueRef.value = undefined;\n                }\n                else {\n                    newValueRef.value = value;\n                    oldValueRef.value = oldValue;\n                }\n            }\n        });\n        return () => {\n            const { value, clsPrefix } = props;\n            return typeof value === 'number' ? (h(\"span\", { class: `${clsPrefix}-base-slot-machine` },\n                h(TransitionGroup, { name: \"fade-up-width-expand-transition\", tag: \"span\" }, {\n                    default: () => numbersRef.value.map((number, i) => (h(SlotMachineNumber, { clsPrefix: clsPrefix, key: numbersRef.value.length - i - 1, oldOriginalNumber: oldValueRef.value, newOriginalNumber: newValueRef.value, value: number })))\n                }),\n                h(NFadeInExpandTransition, { key: \"+\", width: true }, {\n                    default: () => props.max !== undefined && props.max < value ? (h(SlotMachineNumber, { clsPrefix: clsPrefix, value: \"+\" })) : null\n                }))) : (h(\"span\", { class: `${clsPrefix}-base-slot-machine` }, value));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}