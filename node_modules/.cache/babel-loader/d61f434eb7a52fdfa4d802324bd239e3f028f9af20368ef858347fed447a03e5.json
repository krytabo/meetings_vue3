{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\nfunction circlePath(r, sw, vw = 100) {\n  return `m ${vw / 2} ${vw / 2 - r} a ${r} ${r} 0 1 1 0 ${2 * r} a ${r} ${r} 0 1 1 0 -${2 * r}`;\n}\nexport default defineComponent({\n  name: 'ProgressMultipleCircle',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    viewBoxWidth: {\n      type: Number,\n      required: true\n    },\n    percentage: {\n      type: Array,\n      default: [0]\n    },\n    strokeWidth: {\n      type: Number,\n      required: true\n    },\n    circleGap: {\n      type: Number,\n      required: true\n    },\n    showIndicator: {\n      type: Boolean,\n      required: true\n    },\n    fillColor: {\n      type: Array,\n      default: () => []\n    },\n    railColor: {\n      type: Array,\n      default: () => []\n    },\n    railStyle: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const strokeDasharrayRef = computed(() => {\n      const strokeDasharrays = props.percentage.map((v, i) => `${Math.PI * v / 100 * (props.viewBoxWidth / 2 - props.strokeWidth / 2 * (1 + 2 * i) - props.circleGap * i) * 2}, ${props.viewBoxWidth * 8}`);\n      return strokeDasharrays;\n    });\n    return () => {\n      const {\n        viewBoxWidth,\n        strokeWidth,\n        circleGap,\n        showIndicator,\n        fillColor,\n        railColor,\n        railStyle,\n        percentage,\n        clsPrefix\n      } = props;\n      return h(\"div\", {\n        class: `${clsPrefix}-progress-content`,\n        role: \"none\"\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph`,\n        \"aria-hidden\": true\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph-circle`\n      }, h(\"svg\", {\n        viewBox: `0 0 ${viewBoxWidth} ${viewBoxWidth}`\n      }, percentage.map((p, index) => {\n        return h(\"g\", {\n          key: index\n        }, h(\"path\", {\n          class: `${clsPrefix}-progress-graph-circle-rail`,\n          d: circlePath(viewBoxWidth / 2 - strokeWidth / 2 * (1 + 2 * index) - circleGap * index, strokeWidth, viewBoxWidth),\n          \"stroke-width\": strokeWidth,\n          \"stroke-linecap\": \"round\",\n          fill: \"none\",\n          style: [{\n            strokeDashoffset: 0,\n            stroke: railColor[index]\n          }, railStyle[index]]\n        }), h(\"path\", {\n          class: [`${clsPrefix}-progress-graph-circle-fill`, p === 0 && `${clsPrefix}-progress-graph-circle-fill--empty`],\n          d: circlePath(viewBoxWidth / 2 - strokeWidth / 2 * (1 + 2 * index) - circleGap * index, strokeWidth, viewBoxWidth),\n          \"stroke-width\": strokeWidth,\n          \"stroke-linecap\": \"round\",\n          fill: \"none\",\n          style: {\n            strokeDasharray: strokeDasharrayRef.value[index],\n            strokeDashoffset: 0,\n            stroke: fillColor[index]\n          }\n        }));\n      })))), showIndicator && slots.default ? h(\"div\", null, h(\"div\", {\n        class: `${clsPrefix}-progress-text`\n      }, slots.default())) : null);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","computed","circlePath","r","sw","vw","name","props","clsPrefix","type","String","required","viewBoxWidth","Number","percentage","Array","default","strokeWidth","circleGap","showIndicator","Boolean","fillColor","railColor","railStyle","setup","slots","strokeDasharrayRef","strokeDasharrays","map","v","i","Math","PI","class","role","viewBox","p","index","key","d","fill","style","strokeDashoffset","stroke","strokeDasharray","value"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/progress/src/MultipleCircle.js"],"sourcesContent":["import { h, defineComponent, computed } from 'vue';\nfunction circlePath(r, sw, vw = 100) {\n    return `m ${vw / 2} ${vw / 2 - r} a ${r} ${r} 0 1 1 0 ${2 * r} a ${r} ${r} 0 1 1 0 -${2 * r}`;\n}\nexport default defineComponent({\n    name: 'ProgressMultipleCircle',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        viewBoxWidth: {\n            type: Number,\n            required: true\n        },\n        percentage: {\n            type: Array,\n            default: [0]\n        },\n        strokeWidth: {\n            type: Number,\n            required: true\n        },\n        circleGap: {\n            type: Number,\n            required: true\n        },\n        showIndicator: {\n            type: Boolean,\n            required: true\n        },\n        fillColor: {\n            type: Array,\n            default: () => []\n        },\n        railColor: {\n            type: Array,\n            default: () => []\n        },\n        railStyle: {\n            type: Array,\n            default: () => []\n        }\n    },\n    setup(props, { slots }) {\n        const strokeDasharrayRef = computed(() => {\n            const strokeDasharrays = props.percentage.map((v, i) => `${((Math.PI * v) / 100) *\n                (props.viewBoxWidth / 2 -\n                    (props.strokeWidth / 2) * (1 + 2 * i) -\n                    props.circleGap * i) *\n                2}, ${props.viewBoxWidth * 8}`);\n            return strokeDasharrays;\n        });\n        return () => {\n            const { viewBoxWidth, strokeWidth, circleGap, showIndicator, fillColor, railColor, railStyle, percentage, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: `${clsPrefix}-progress-graph-circle` },\n                        h(\"svg\", { viewBox: `0 0 ${viewBoxWidth} ${viewBoxWidth}` }, percentage.map((p, index) => {\n                            return (h(\"g\", { key: index },\n                                h(\"path\", { class: `${clsPrefix}-progress-graph-circle-rail`, d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: [\n                                        {\n                                            strokeDashoffset: 0,\n                                            stroke: railColor[index]\n                                        },\n                                        railStyle[index]\n                                    ] }),\n                                h(\"path\", { class: [\n                                        `${clsPrefix}-progress-graph-circle-fill`,\n                                        p === 0 &&\n                                            `${clsPrefix}-progress-graph-circle-fill--empty`\n                                    ], d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: {\n                                        strokeDasharray: strokeDasharrayRef.value[index],\n                                        strokeDashoffset: 0,\n                                        stroke: fillColor[index]\n                                    } })));\n                        })))),\n                showIndicator && slots.default ? (h(\"div\", null,\n                    h(\"div\", { class: `${clsPrefix}-progress-text` }, slots.default()))) : null));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}