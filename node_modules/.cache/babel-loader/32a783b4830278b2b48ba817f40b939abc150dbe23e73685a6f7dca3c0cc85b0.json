{"ast":null,"code":"import { h, defineComponent, ref, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'TreeNodeContent',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    disabled: Boolean,\n    checked: Boolean,\n    selected: Boolean,\n    onClick: Function,\n    onDragstart: Function,\n    tmNode: {\n      type: Object,\n      required: true\n    },\n    nodeProps: Object\n  },\n  setup(props) {\n    const {\n      renderLabelRef,\n      renderPrefixRef,\n      renderSuffixRef,\n      labelFieldRef\n    } =\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    inject(treeInjectionKey);\n    const selfRef = ref(null);\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) onClick(e);\n    }\n    function handleClick(e) {\n      doClick(e);\n    }\n    return {\n      selfRef,\n      renderLabel: renderLabelRef,\n      renderPrefix: renderPrefixRef,\n      renderSuffix: renderSuffixRef,\n      labelField: labelFieldRef,\n      handleClick\n    };\n  },\n  render() {\n    const {\n      clsPrefix,\n      labelField,\n      nodeProps,\n      checked = false,\n      selected = false,\n      renderLabel,\n      renderPrefix,\n      renderSuffix,\n      handleClick,\n      onDragstart,\n      tmNode: {\n        rawNode,\n        rawNode: {\n          prefix,\n          suffix,\n          [labelField]: label\n        }\n      }\n    } = this;\n    return h(\"span\", Object.assign({}, nodeProps, {\n      ref: \"selfRef\",\n      class: [`${clsPrefix}-tree-node-content`, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps.class],\n      onClick: handleClick,\n      draggable: onDragstart === undefined ? undefined : true,\n      onDragstart: onDragstart\n    }), renderPrefix || prefix ? h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__prefix`\n    }, renderPrefix ? renderPrefix({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(prefix)) : null, h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__text`\n    }, renderLabel ? renderLabel({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(label)), renderSuffix || suffix ? h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__suffix`\n    }, renderSuffix ? renderSuffix({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(suffix)) : null);\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","inject","render","treeInjectionKey","name","props","clsPrefix","type","String","required","disabled","Boolean","checked","selected","onClick","Function","onDragstart","tmNode","Object","nodeProps","setup","renderLabelRef","renderPrefixRef","renderSuffixRef","labelFieldRef","selfRef","doClick","e","handleClick","renderLabel","renderPrefix","renderSuffix","labelField","rawNode","prefix","suffix","label","assign","class","draggable","undefined","option"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/tree/src/TreeNodeContent.js"],"sourcesContent":["import { h, defineComponent, ref, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'TreeNodeContent',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        disabled: Boolean,\n        checked: Boolean,\n        selected: Boolean,\n        onClick: Function,\n        onDragstart: Function,\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        nodeProps: Object\n    },\n    setup(props) {\n        const { renderLabelRef, renderPrefixRef, renderSuffixRef, labelFieldRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(treeInjectionKey);\n        const selfRef = ref(null);\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                onClick(e);\n        }\n        function handleClick(e) {\n            doClick(e);\n        }\n        return {\n            selfRef,\n            renderLabel: renderLabelRef,\n            renderPrefix: renderPrefixRef,\n            renderSuffix: renderSuffixRef,\n            labelField: labelFieldRef,\n            handleClick\n        };\n    },\n    render() {\n        const { clsPrefix, labelField, nodeProps, checked = false, selected = false, renderLabel, renderPrefix, renderSuffix, handleClick, onDragstart, tmNode: { rawNode, rawNode: { prefix, suffix, [labelField]: label } } } = this;\n        return (h(\"span\", Object.assign({}, nodeProps, { ref: \"selfRef\", class: [`${clsPrefix}-tree-node-content`, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps.class], onClick: handleClick, draggable: onDragstart === undefined ? undefined : true, onDragstart: onDragstart }),\n            renderPrefix || prefix ? (h(\"div\", { class: `${clsPrefix}-tree-node-content__prefix` }, renderPrefix\n                ? renderPrefix({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(prefix))) : null,\n            h(\"div\", { class: `${clsPrefix}-tree-node-content__text` }, renderLabel\n                ? renderLabel({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(label)),\n            renderSuffix || suffix ? (h(\"div\", { class: `${clsPrefix}-tree-node-content__suffix` }, renderSuffix\n                ? renderSuffix({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(suffix))) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}