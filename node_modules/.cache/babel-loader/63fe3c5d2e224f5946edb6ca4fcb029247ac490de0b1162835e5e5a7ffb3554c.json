{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, computed, toRef, defineComponent, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { createValOptMap, filterOptions, createTmOptions, patternMatched } from './utils';\nimport style from './styles/index.cssr';\nexport const selectProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  value: [String, Number, Array],\n  placeholder: String,\n  menuProps: Object,\n  multiple: Boolean,\n  size: String,\n  filterable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  remote: Boolean,\n  loading: Boolean,\n  filter: Function,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  widthMode: {\n    type: String,\n    default: 'trigger'\n  },\n  tag: Boolean,\n  onCreate: Function,\n  fallbackOption: {\n    type: [Function, Boolean],\n    default: undefined\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  maxTagCount: [Number, String],\n  consistentMenuWidth: {\n    type: Boolean,\n    default: true\n  },\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  valueField: {\n    type: String,\n    default: 'value'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  renderLabel: Function,\n  renderOption: Function,\n  renderTag: Function,\n  'onUpdate:value': [Function, Array],\n  inputProps: Object,\n  nodeProps: Function,\n  ignoreComposition: {\n    type: Boolean,\n    default: true\n  },\n  // for jsx\n  onUpdateValue: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  onFocus: [Function, Array],\n  onScroll: [Function, Array],\n  onSearch: [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  displayDirective: {\n    type: String,\n    default: 'show'\n  },\n  resetMenuOnOptionsChange: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n  showCheckmark: {\n    type: Boolean,\n    default: true\n  },\n  /** deprecated */\n  onChange: [Function, Array],\n  items: Array\n});\nexport default defineComponent({\n  name: 'Select',\n  props: selectProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.items !== undefined) {\n          warnOnce('select', '`items` is deprecated, please use `options` instead.');\n        }\n        if (props.onChange !== undefined) {\n          warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const focusedRef = ref(false);\n    const patternRef = ref('');\n    const treeMateRef = computed(() => {\n      const {\n        valueField,\n        childrenField\n      } = props;\n      const options = createTmOptions(valueField, childrenField);\n      return createTreeMate(filteredOptionsRef.value, options);\n    });\n    const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value, props.valueField, props.childrenField));\n    const uncontrolledShowRef = ref(false);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    const triggerRef = ref(null);\n    const followerRef = ref(null);\n    const menuRef = ref(null);\n    const {\n      localeRef\n    } = useLocale('Select');\n    const localizedPlaceholderRef = computed(() => {\n      var _a;\n      return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n    });\n    const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n    const emptyArray = [];\n    const createdOptionsRef = ref([]);\n    const beingCreatedOptionsRef = ref([]);\n    const memoValOptMapRef = ref(new Map());\n    const wrappedFallbackOptionRef = computed(() => {\n      const {\n        fallbackOption\n      } = props;\n      if (fallbackOption === undefined) {\n        const {\n          labelField,\n          valueField\n        } = props;\n        return value => ({\n          [labelField]: String(value),\n          [valueField]: value\n        });\n      }\n      if (fallbackOption === false) return false;\n      return value => {\n        return Object.assign(fallbackOption(value), {\n          value\n        });\n      };\n    });\n    const localOptionsRef = computed(() => {\n      return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n    });\n    const resolvedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField,\n        valueField\n      } = props;\n      return (pattern, option) => {\n        if (!option) return false;\n        const label = option[labelField];\n        if (typeof label === 'string') {\n          return patternMatched(pattern, label);\n        }\n        const value = option[valueField];\n        if (typeof value === 'string') {\n          return patternMatched(pattern, value);\n        }\n        if (typeof value === 'number') {\n          return patternMatched(pattern, String(value));\n        }\n        return false;\n      };\n    });\n    const filteredOptionsRef = computed(() => {\n      if (props.remote) {\n        return compitableOptionsRef.value;\n      } else {\n        const {\n          value: localOptions\n        } = localOptionsRef;\n        const {\n          value: pattern\n        } = patternRef;\n        if (!pattern.length || !props.filterable) {\n          return localOptions;\n        } else {\n          return filterOptions(localOptions, resolvedFilterRef.value, pattern, props.childrenField);\n        }\n      }\n    });\n    function getMergedOptions(values) {\n      const remote = props.remote;\n      const {\n        value: memoValOptMap\n      } = memoValOptMapRef;\n      const {\n        value: valOptMap\n      } = valOptMapRef;\n      const {\n        value: wrappedFallbackOption\n      } = wrappedFallbackOptionRef;\n      const options = [];\n      values.forEach(value => {\n        if (valOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(valOptMap.get(value));\n        } else if (remote && memoValOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(memoValOptMap.get(value));\n        } else if (wrappedFallbackOption) {\n          const option = wrappedFallbackOption(value);\n          if (option) {\n            options.push(option);\n          }\n        }\n      });\n      return options;\n    }\n    const selectedOptionsRef = computed(() => {\n      if (props.multiple) {\n        const {\n          value: values\n        } = mergedValueRef;\n        if (!Array.isArray(values)) return [];\n        return getMergedOptions(values);\n      }\n      return null;\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!props.multiple && !Array.isArray(mergedValue)) {\n        if (mergedValue === null) return null;\n        return getMergedOptions([mergedValue])[0] || null;\n      }\n      return null;\n    });\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    function doUpdateValue(value, option) {\n      const {\n        onChange,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      if (onChange) call(onChange, value, option);\n      if (onUpdateValue) call(onUpdateValue, value, option);\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option);\n      }\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doClear() {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear);\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doSearch(value) {\n      const {\n        onSearch\n      } = props;\n      if (onSearch) call(onSearch, value);\n    }\n    function doScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) call(onScroll, e);\n    }\n    // remote related methods\n    function updateMemorizedOptions() {\n      var _a;\n      const {\n        remote,\n        multiple\n      } = props;\n      if (remote) {\n        const {\n          value: memoValOptMap\n        } = memoValOptMapRef;\n        if (multiple) {\n          const {\n            valueField\n          } = props;\n          (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach(option => {\n            memoValOptMap.set(option[valueField], option);\n          });\n        } else {\n          const option = selectedOptionRef.value;\n          if (option) {\n            memoValOptMap.set(option[props.valueField], option);\n          }\n        }\n      }\n    }\n    // menu related methods\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        doUpdateShow(true);\n        uncontrolledShowRef.value = true;\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n    function closeMenu() {\n      doUpdateShow(false);\n    }\n    function handleMenuAfterLeave() {\n      patternRef.value = '';\n      beingCreatedOptionsRef.value = emptyArray;\n    }\n    const activeWithoutMenuOpenRef = ref(false);\n    function onTriggerInputFocus() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = true;\n      }\n    }\n    function onTriggerInputBlur() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = false;\n        if (!mergedShowRef.value) {\n          handleMenuAfterLeave();\n        }\n      }\n    }\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value) return;\n      if (!mergedShowRef.value) {\n        openMenu();\n      } else {\n        if (!props.filterable) {\n          // already focused, don't need to return focus\n          closeMenu();\n        } else {\n          focusSelectionInput();\n        }\n      }\n    }\n    function handleTriggerBlur(e) {\n      var _a, _b;\n      if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n        return;\n      }\n      focusedRef.value = false;\n      doBlur(e);\n      // outside select, don't need to return focus\n      closeMenu();\n    }\n    function handleTriggerFocus(e) {\n      doFocus(e);\n      focusedRef.value = true;\n    }\n    function handleMenuFocus(e) {\n      focusedRef.value = true;\n    }\n    function handleMenuBlur(e) {\n      var _a;\n      if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget)) return;\n      focusedRef.value = false;\n      doBlur(e);\n      // outside select, don't need to return focus\n      closeMenu();\n    }\n    function handleMenuTabOut() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      closeMenu();\n    }\n    function handleMenuClickOutside(e) {\n      var _a;\n      if (mergedShowRef.value) {\n        if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n          // outside select, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function createClearedMultipleSelectValue(value) {\n      if (!Array.isArray(value)) return [];\n      if (wrappedFallbackOptionRef.value) {\n        // if option has a fallback, I can't help user to clear some unknown value\n        return Array.from(value);\n      } else {\n        // if there's no option fallback, unappeared options are treated as invalid\n        const {\n          remote\n        } = props;\n        const {\n          value: valOptMap\n        } = valOptMapRef;\n        if (remote) {\n          const {\n            value: memoValOptMap\n          } = memoValOptMapRef;\n          return value.filter(v => valOptMap.has(v) || memoValOptMap.has(v));\n        } else {\n          return value.filter(v => valOptMap.has(v));\n        }\n      }\n    }\n    function handleToggleByTmNode(tmNode) {\n      handleToggleByOption(tmNode.rawNode);\n    }\n    function handleToggleByOption(option) {\n      if (mergedDisabledRef.value) return;\n      const {\n        tag,\n        remote,\n        clearFilterAfterSelect,\n        valueField\n      } = props;\n      if (tag && !remote) {\n        const {\n          value: beingCreatedOptions\n        } = beingCreatedOptionsRef;\n        const beingCreatedOption = beingCreatedOptions[0] || null;\n        if (beingCreatedOption) {\n          const createdOptions = createdOptionsRef.value;\n          if (!createdOptions.length) {\n            createdOptionsRef.value = [beingCreatedOption];\n          } else {\n            createdOptions.push(beingCreatedOption);\n          }\n          beingCreatedOptionsRef.value = emptyArray;\n        }\n      }\n      if (remote) {\n        memoValOptMapRef.value.set(option[valueField], option);\n      }\n      if (props.multiple) {\n        const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n        const index = changedValue.findIndex(value => value === option[valueField]);\n        if (~index) {\n          changedValue.splice(index, 1);\n          if (tag && !remote) {\n            const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n            if (~createdOptionIndex) {\n              createdOptionsRef.value.splice(createdOptionIndex, 1);\n              if (clearFilterAfterSelect) patternRef.value = '';\n            }\n          }\n        } else {\n          changedValue.push(option[valueField]);\n          if (clearFilterAfterSelect) patternRef.value = '';\n        }\n        doUpdateValue(changedValue, getMergedOptions(changedValue));\n      } else {\n        if (tag && !remote) {\n          const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n          if (~createdOptionIndex) {\n            createdOptionsRef.value = [createdOptionsRef.value[createdOptionIndex]];\n          } else {\n            createdOptionsRef.value = emptyArray;\n          }\n        }\n        focusSelection();\n        closeMenu();\n        doUpdateValue(option[valueField], option);\n      }\n    }\n    function getCreatedOptionIndex(optionValue) {\n      const createdOptions = createdOptionsRef.value;\n      return createdOptions.findIndex(createdOption => createdOption[props.valueField] === optionValue);\n    }\n    function handlePatternInput(e) {\n      if (!mergedShowRef.value) {\n        openMenu();\n      }\n      const {\n        value\n      } = e.target;\n      patternRef.value = value;\n      const {\n        tag,\n        remote\n      } = props;\n      doSearch(value);\n      if (tag && !remote) {\n        if (!value) {\n          beingCreatedOptionsRef.value = emptyArray;\n          return;\n        }\n        const {\n          onCreate\n        } = props;\n        const optionBeingCreated = onCreate ? onCreate(value) : {\n          [props.labelField]: value,\n          [props.valueField]: value\n        };\n        const {\n          valueField\n        } = props;\n        if (compitableOptionsRef.value.some(option => option[valueField] === optionBeingCreated[valueField]) || createdOptionsRef.value.some(option => option[valueField] === optionBeingCreated[valueField])) {\n          beingCreatedOptionsRef.value = emptyArray;\n        } else {\n          beingCreatedOptionsRef.value = [optionBeingCreated];\n        }\n      }\n    }\n    function handleClear(e) {\n      e.stopPropagation();\n      const {\n        multiple\n      } = props;\n      if (!multiple && props.filterable) {\n        closeMenu();\n      }\n      doClear();\n      if (multiple) {\n        doUpdateValue([], []);\n      } else {\n        doUpdateValue(null, null);\n      }\n    }\n    function handleMenuMousedown(e) {\n      if (!happensIn(e, 'action') && !happensIn(e, 'empty')) e.preventDefault();\n    }\n    // scroll events on menu\n    function handleMenuScroll(e) {\n      doScroll(e);\n    }\n    // keyboard events\n    // also for menu keydown\n    function handleKeydown(e) {\n      var _a, _b, _c, _d, _e;\n      switch (e.key) {\n        case ' ':\n          if (props.filterable) break;else {\n            e.preventDefault();\n          }\n        // eslint-disable-next-line no-fallthrough\n        case 'Enter':\n          if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isComposing)) {\n            if (mergedShowRef.value) {\n              const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n              if (pendingTmNode) {\n                handleToggleByTmNode(pendingTmNode);\n              } else if (!props.filterable) {\n                closeMenu();\n                focusSelection();\n              }\n            } else {\n              openMenu();\n              if (props.tag && activeWithoutMenuOpenRef.value) {\n                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n                if (beingCreatedOption) {\n                  const optionValue = beingCreatedOption[props.valueField];\n                  const {\n                    value: mergedValue\n                  } = mergedValueRef;\n                  if (props.multiple) {\n                    if (Array.isArray(mergedValue) && mergedValue.some(value => value === optionValue)) {\n                      // do nothing\n                    } else {\n                      handleToggleByOption(beingCreatedOption);\n                    }\n                  } else {\n                    handleToggleByOption(beingCreatedOption);\n                  }\n                }\n              }\n            }\n          }\n          e.preventDefault();\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          if (props.loading) return;\n          if (mergedShowRef.value) {\n            (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n          }\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (props.loading) return;\n          if (mergedShowRef.value) {\n            (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n          } else {\n            openMenu();\n          }\n          break;\n        case 'Escape':\n          if (mergedShowRef.value) {\n            markEventEffectPerformed(e);\n            closeMenu();\n          }\n          (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n          break;\n      }\n    }\n    function focusSelection() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    function focusSelectionInput() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n    function handleTriggerOrMenuResize() {\n      var _a;\n      if (!mergedShowRef.value) return;\n      (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n    updateMemorizedOptions();\n    watch(toRef(props, 'options'), updateMemorizedOptions);\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          menuBoxShadow\n        }\n      } = themeRef.value;\n      return {\n        '--n-menu-box-shadow': menuBoxShadow\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('select', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedStatus: mergedStatusRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      namespace: namespaceRef,\n      treeMate: treeMateRef,\n      isMounted: useIsMounted(),\n      triggerRef,\n      menuRef,\n      pattern: patternRef,\n      uncontrolledShow: uncontrolledShowRef,\n      mergedShow: mergedShowRef,\n      adjustedTo: useAdjustedTo(props),\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      followerRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      focused: focusedRef,\n      activeWithoutMenuOpen: activeWithoutMenuOpenRef,\n      inlineThemeDisabled,\n      onTriggerInputFocus,\n      onTriggerInputBlur,\n      handleTriggerOrMenuResize,\n      handleMenuFocus,\n      handleMenuBlur,\n      handleMenuTabOut,\n      handleTriggerClick,\n      handleToggle: handleToggleByTmNode,\n      handleDeleteOption: handleToggleByOption,\n      handlePatternInput,\n      handleClear,\n      handleTriggerBlur,\n      handleTriggerFocus,\n      handleKeydown,\n      handleMenuAfterLeave,\n      handleMenuClickOutside,\n      handleMenuScroll,\n      handleMenuKeydown: handleKeydown,\n      handleMenuMousedown,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    return h(\"div\", {\n      class: `${this.mergedClsPrefix}-select`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerRef\",\n          inlineThemeDisabled: this.inlineThemeDisabled,\n          status: this.mergedStatus,\n          inputProps: this.inputProps,\n          clsPrefix: this.mergedClsPrefix,\n          showArrow: this.showArrow,\n          maxTagCount: this.maxTagCount,\n          bordered: this.mergedBordered,\n          active: this.activeWithoutMenuOpen || this.mergedShow,\n          pattern: this.pattern,\n          placeholder: this.localizedPlaceholder,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          multiple: this.multiple,\n          renderTag: this.renderTag,\n          renderLabel: this.renderLabel,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          size: this.mergedSize,\n          theme: this.mergedTheme.peers.InternalSelection,\n          labelField: this.labelField,\n          valueField: this.valueField,\n          themeOverrides: this.mergedTheme.peerOverrides.InternalSelection,\n          loading: this.loading,\n          focused: this.focused,\n          onClick: this.handleTriggerClick,\n          onDeleteOption: this.handleDeleteOption,\n          onPatternInput: this.handlePatternInput,\n          onClear: this.handleClear,\n          onBlur: this.handleTriggerBlur,\n          onFocus: this.handleTriggerFocus,\n          onKeydown: this.handleKeydown,\n          onPatternBlur: this.onTriggerInputBlur,\n          onPatternFocus: this.onTriggerInputFocus,\n          onResize: this.handleTriggerOrMenuResize,\n          ignoreComposition: this.ignoreComposition\n        }, {\n          arrow: () => {\n            var _a, _b;\n            return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)];\n          }\n        })\n      }), h(VFollower, {\n        ref: \"followerRef\",\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        containerClass: this.namespace,\n        width: this.consistentMenuWidth ? 'target' : undefined,\n        minWidth: \"target\",\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted,\n          onAfterLeave: this.handleMenuAfterLeave\n        }, {\n          default: () => {\n            var _a, _b, _c;\n            if (!(this.mergedShow || this.displayDirective === 'show')) {\n              return null;\n            }\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, {\n              ref: \"menuRef\",\n              onResize: this.handleTriggerOrMenuResize,\n              inlineThemeDisabled: this.inlineThemeDisabled,\n              virtualScroll: this.consistentMenuWidth && this.virtualScroll,\n              class: [`${this.mergedClsPrefix}-select-menu`, this.themeClass, (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class],\n              clsPrefix: this.mergedClsPrefix,\n              focusable: true,\n              labelField: this.labelField,\n              valueField: this.valueField,\n              autoPending: true,\n              nodeProps: this.nodeProps,\n              theme: this.mergedTheme.peers.InternalSelectMenu,\n              themeOverrides: this.mergedTheme.peerOverrides.InternalSelectMenu,\n              treeMate: this.treeMate,\n              multiple: this.multiple,\n              size: \"medium\",\n              renderOption: this.renderOption,\n              renderLabel: this.renderLabel,\n              value: this.mergedValue,\n              style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars],\n              onToggle: this.handleToggle,\n              onScroll: this.handleMenuScroll,\n              onFocus: this.handleMenuFocus,\n              onBlur: this.handleMenuBlur,\n              onKeydown: this.handleMenuKeydown,\n              onTabOut: this.handleMenuTabOut,\n              onMousedown: this.handleMenuMousedown,\n              show: this.mergedShow,\n              showCheckmark: this.showCheckmark,\n              resetMenuOnOptionsChange: this.resetMenuOnOptionsChange\n            }), {\n              empty: () => {\n                var _a, _b;\n                return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              },\n              action: () => {\n                var _a, _b;\n                return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              }\n            }), this.displayDirective === 'show' ? [[vShow, this.mergedShow], [clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]] : [[clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]]);\n          }\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","ref","computed","toRef","defineComponent","watch","Transition","withDirectives","vShow","watchEffect","getPreciseEventTarget","happensIn","createTreeMate","VBinder","VFollower","VTarget","useIsMounted","useMergedState","useCompitable","clickoutside","useTheme","useConfig","useLocale","useFormItem","useThemeClass","call","markEventEffectPerformed","useAdjustedTo","warnOnce","NInternalSelectMenu","NInternalSelection","selectLight","createValOptMap","filterOptions","createTmOptions","patternMatched","style","selectProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","undefined","clearable","clearFilterAfterSelect","options","Array","defaultValue","String","Number","value","placeholder","menuProps","multiple","size","filterable","disabled","remote","loading","filter","Function","placement","widthMode","tag","onCreate","fallbackOption","show","showArrow","maxTagCount","consistentMenuWidth","virtualScroll","labelField","valueField","childrenField","renderLabel","renderOption","renderTag","inputProps","nodeProps","ignoreComposition","onUpdateValue","onBlur","onClear","onFocus","onScroll","onSearch","onUpdateShow","displayDirective","resetMenuOnOptionsChange","status","showCheckmark","onChange","items","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","namespaceRef","inlineThemeDisabled","themeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","focusedRef","patternRef","treeMateRef","filteredOptionsRef","valOptMapRef","localOptionsRef","uncontrolledShowRef","mergedShowRef","triggerRef","followerRef","menuRef","localeRef","localizedPlaceholderRef","_a","compitableOptionsRef","emptyArray","createdOptionsRef","beingCreatedOptionsRef","memoValOptMapRef","Map","wrappedFallbackOptionRef","concat","resolvedFilterRef","pattern","option","label","localOptions","length","getMergedOptions","values","memoValOptMap","valOptMap","wrappedFallbackOption","forEach","has","push","get","selectedOptionsRef","isArray","selectedOptionRef","mergedValue","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doBlur","e","nTriggerFormBlur","doClear","doFocus","nTriggerFormFocus","doSearch","doScroll","updateMemorizedOptions","set","doUpdateShow","_onUpdateShow","openMenu","focusSelectionInput","closeMenu","handleMenuAfterLeave","activeWithoutMenuOpenRef","onTriggerInputFocus","onTriggerInputBlur","handleTriggerClick","handleTriggerBlur","_b","selfRef","contains","relatedTarget","handleTriggerFocus","handleMenuFocus","handleMenuBlur","$el","handleMenuTabOut","focus","handleMenuClickOutside","createClearedMultipleSelectValue","from","v","handleToggleByTmNode","tmNode","handleToggleByOption","rawNode","beingCreatedOptions","beingCreatedOption","createdOptions","changedValue","index","findIndex","splice","createdOptionIndex","getCreatedOptionIndex","focusSelection","optionValue","createdOption","handlePatternInput","target","optionBeingCreated","some","handleClear","stopPropagation","handleMenuMousedown","preventDefault","handleMenuScroll","handleKeydown","_c","_d","_e","key","isComposing","pendingTmNode","getPendingTmNode","prev","next","focusInput","handleTriggerOrMenuResize","syncPosition","exposedMethods","blur","cssVarsRef","self","menuBoxShadow","themeClassHandle","mergedStatus","mergedClsPrefix","mergedBordered","namespace","treeMate","isMounted","uncontrolledShow","mergedShow","adjustedTo","uncontrolledValue","localizedPlaceholder","selectedOption","selectedOptions","mergedSize","mergedDisabled","focused","activeWithoutMenuOpen","handleToggle","handleDeleteOption","handleMenuKeydown","mergedTheme","cssVars","themeClass","onRender","render","class","clsPrefix","active","theme","peers","InternalSelection","themeOverrides","peerOverrides","onClick","onDeleteOption","onPatternInput","onKeydown","onPatternBlur","onPatternFocus","onResize","arrow","$slots","teleportDisabled","tdkey","containerClass","width","minWidth","appear","onAfterLeave","focusable","autoPending","InternalSelectMenu","onToggle","onTabOut","onMousedown","empty","action","capture"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/select/src/Select.js"],"sourcesContent":["import { h, ref, computed, toRef, defineComponent, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { createValOptMap, filterOptions, createTmOptions, patternMatched } from './utils';\nimport style from './styles/index.cssr';\nexport const selectProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, clearable: Boolean, clearFilterAfterSelect: {\n        type: Boolean,\n        default: true\n    }, options: {\n        type: Array,\n        default: () => []\n    }, defaultValue: {\n        type: [String, Number, Array],\n        default: null\n    }, value: [String, Number, Array], placeholder: String, menuProps: Object, multiple: Boolean, size: String, filterable: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, remote: Boolean, loading: Boolean, filter: Function, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, widthMode: {\n        type: String,\n        default: 'trigger'\n    }, tag: Boolean, onCreate: Function, fallbackOption: {\n        type: [Function, Boolean],\n        default: undefined\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, showArrow: {\n        type: Boolean,\n        default: true\n    }, maxTagCount: [Number, String], consistentMenuWidth: {\n        type: Boolean,\n        default: true\n    }, virtualScroll: {\n        type: Boolean,\n        default: true\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, valueField: {\n        type: String,\n        default: 'value'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, renderLabel: Function, renderOption: Function, renderTag: Function, 'onUpdate:value': [Function, Array], inputProps: Object, nodeProps: Function, ignoreComposition: { type: Boolean, default: true }, \n    // for jsx\n    onUpdateValue: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], onFocus: [Function, Array], onScroll: [Function, Array], onSearch: [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:show': [Function, Array], displayDirective: {\n        type: String,\n        default: 'show'\n    }, resetMenuOnOptionsChange: {\n        type: Boolean,\n        default: true\n    }, status: String, showCheckmark: {\n        type: Boolean,\n        default: true\n    }, \n    /** deprecated */\n    onChange: [Function, Array], items: Array });\nexport default defineComponent({\n    name: 'Select',\n    props: selectProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.items !== undefined) {\n                    warnOnce('select', '`items` is deprecated, please use `options` instead.');\n                }\n                if (props.onChange !== undefined) {\n                    warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const focusedRef = ref(false);\n        const patternRef = ref('');\n        const treeMateRef = computed(() => {\n            const { valueField, childrenField } = props;\n            const options = createTmOptions(valueField, childrenField);\n            return createTreeMate(filteredOptionsRef.value, options);\n        });\n        const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value, props.valueField, props.childrenField));\n        const uncontrolledShowRef = ref(false);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        const triggerRef = ref(null);\n        const followerRef = ref(null);\n        const menuRef = ref(null);\n        const { localeRef } = useLocale('Select');\n        const localizedPlaceholderRef = computed(() => {\n            var _a;\n            return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n        });\n        const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n        const emptyArray = [];\n        const createdOptionsRef = ref([]);\n        const beingCreatedOptionsRef = ref([]);\n        const memoValOptMapRef = ref(new Map());\n        const wrappedFallbackOptionRef = computed(() => {\n            const { fallbackOption } = props;\n            if (fallbackOption === undefined) {\n                const { labelField, valueField } = props;\n                return (value) => ({\n                    [labelField]: String(value),\n                    [valueField]: value\n                });\n            }\n            if (fallbackOption === false)\n                return false;\n            return (value) => {\n                return Object.assign(fallbackOption(value), {\n                    value\n                });\n            };\n        });\n        const localOptionsRef = computed(() => {\n            return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n        });\n        const resolvedFilterRef = computed(() => {\n            const { filter } = props;\n            if (filter)\n                return filter;\n            const { labelField, valueField } = props;\n            return (pattern, option) => {\n                if (!option)\n                    return false;\n                const label = option[labelField];\n                if (typeof label === 'string') {\n                    return patternMatched(pattern, label);\n                }\n                const value = option[valueField];\n                if (typeof value === 'string') {\n                    return patternMatched(pattern, value);\n                }\n                if (typeof value === 'number') {\n                    return patternMatched(pattern, String(value));\n                }\n                return false;\n            };\n        });\n        const filteredOptionsRef = computed(() => {\n            if (props.remote) {\n                return compitableOptionsRef.value;\n            }\n            else {\n                const { value: localOptions } = localOptionsRef;\n                const { value: pattern } = patternRef;\n                if (!pattern.length || !props.filterable) {\n                    return localOptions;\n                }\n                else {\n                    return filterOptions(localOptions, resolvedFilterRef.value, pattern, props.childrenField);\n                }\n            }\n        });\n        function getMergedOptions(values) {\n            const remote = props.remote;\n            const { value: memoValOptMap } = memoValOptMapRef;\n            const { value: valOptMap } = valOptMapRef;\n            const { value: wrappedFallbackOption } = wrappedFallbackOptionRef;\n            const options = [];\n            values.forEach((value) => {\n                if (valOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(valOptMap.get(value));\n                }\n                else if (remote && memoValOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(memoValOptMap.get(value));\n                }\n                else if (wrappedFallbackOption) {\n                    const option = wrappedFallbackOption(value);\n                    if (option) {\n                        options.push(option);\n                    }\n                }\n            });\n            return options;\n        }\n        const selectedOptionsRef = computed(() => {\n            if (props.multiple) {\n                const { value: values } = mergedValueRef;\n                if (!Array.isArray(values))\n                    return [];\n                return getMergedOptions(values);\n            }\n            return null;\n        });\n        const selectedOptionRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!props.multiple && !Array.isArray(mergedValue)) {\n                if (mergedValue === null)\n                    return null;\n                return getMergedOptions([mergedValue])[0] || null;\n            }\n            return null;\n        });\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        function doUpdateValue(value, option) {\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            if (onChange)\n                call(onChange, value, option);\n            if (onUpdateValue)\n                call(onUpdateValue, value, option);\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, option);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doClear() {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear);\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doSearch(value) {\n            const { onSearch } = props;\n            if (onSearch)\n                call(onSearch, value);\n        }\n        function doScroll(e) {\n            const { onScroll } = props;\n            if (onScroll)\n                call(onScroll, e);\n        }\n        // remote related methods\n        function updateMemorizedOptions() {\n            var _a;\n            const { remote, multiple } = props;\n            if (remote) {\n                const { value: memoValOptMap } = memoValOptMapRef;\n                if (multiple) {\n                    const { valueField } = props;\n                    (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach((option) => {\n                        memoValOptMap.set(option[valueField], option);\n                    });\n                }\n                else {\n                    const option = selectedOptionRef.value;\n                    if (option) {\n                        memoValOptMap.set(option[props.valueField], option);\n                    }\n                }\n            }\n        }\n        // menu related methods\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        function openMenu() {\n            if (!mergedDisabledRef.value) {\n                doUpdateShow(true);\n                uncontrolledShowRef.value = true;\n                if (props.filterable) {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function closeMenu() {\n            doUpdateShow(false);\n        }\n        function handleMenuAfterLeave() {\n            patternRef.value = '';\n            beingCreatedOptionsRef.value = emptyArray;\n        }\n        const activeWithoutMenuOpenRef = ref(false);\n        function onTriggerInputFocus() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = true;\n            }\n        }\n        function onTriggerInputBlur() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = false;\n                if (!mergedShowRef.value) {\n                    handleMenuAfterLeave();\n                }\n            }\n        }\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            else {\n                if (!props.filterable) {\n                    // already focused, don't need to return focus\n                    closeMenu();\n                }\n                else {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function handleTriggerBlur(e) {\n            var _a, _b;\n            if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n                return;\n            }\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleTriggerFocus(e) {\n            doFocus(e);\n            focusedRef.value = true;\n        }\n        function handleMenuFocus(e) {\n            focusedRef.value = true;\n        }\n        function handleMenuBlur(e) {\n            var _a;\n            if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))\n                return;\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleMenuTabOut() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            closeMenu();\n        }\n        function handleMenuClickOutside(e) {\n            var _a;\n            if (mergedShowRef.value) {\n                if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n                    // outside select, don't need to return focus\n                    closeMenu();\n                }\n            }\n        }\n        function createClearedMultipleSelectValue(value) {\n            if (!Array.isArray(value))\n                return [];\n            if (wrappedFallbackOptionRef.value) {\n                // if option has a fallback, I can't help user to clear some unknown value\n                return Array.from(value);\n            }\n            else {\n                // if there's no option fallback, unappeared options are treated as invalid\n                const { remote } = props;\n                const { value: valOptMap } = valOptMapRef;\n                if (remote) {\n                    const { value: memoValOptMap } = memoValOptMapRef;\n                    return value.filter((v) => valOptMap.has(v) || memoValOptMap.has(v));\n                }\n                else {\n                    return value.filter((v) => valOptMap.has(v));\n                }\n            }\n        }\n        function handleToggleByTmNode(tmNode) {\n            handleToggleByOption(tmNode.rawNode);\n        }\n        function handleToggleByOption(option) {\n            if (mergedDisabledRef.value)\n                return;\n            const { tag, remote, clearFilterAfterSelect, valueField } = props;\n            if (tag && !remote) {\n                const { value: beingCreatedOptions } = beingCreatedOptionsRef;\n                const beingCreatedOption = beingCreatedOptions[0] || null;\n                if (beingCreatedOption) {\n                    const createdOptions = createdOptionsRef.value;\n                    if (!createdOptions.length) {\n                        createdOptionsRef.value = [beingCreatedOption];\n                    }\n                    else {\n                        createdOptions.push(beingCreatedOption);\n                    }\n                    beingCreatedOptionsRef.value = emptyArray;\n                }\n            }\n            if (remote) {\n                memoValOptMapRef.value.set(option[valueField], option);\n            }\n            if (props.multiple) {\n                const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n                const index = changedValue.findIndex((value) => value === option[valueField]);\n                if (~index) {\n                    changedValue.splice(index, 1);\n                    if (tag && !remote) {\n                        const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n                        if (~createdOptionIndex) {\n                            createdOptionsRef.value.splice(createdOptionIndex, 1);\n                            if (clearFilterAfterSelect)\n                                patternRef.value = '';\n                        }\n                    }\n                }\n                else {\n                    changedValue.push(option[valueField]);\n                    if (clearFilterAfterSelect)\n                        patternRef.value = '';\n                }\n                doUpdateValue(changedValue, getMergedOptions(changedValue));\n            }\n            else {\n                if (tag && !remote) {\n                    const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n                    if (~createdOptionIndex) {\n                        createdOptionsRef.value = [\n                            createdOptionsRef.value[createdOptionIndex]\n                        ];\n                    }\n                    else {\n                        createdOptionsRef.value = emptyArray;\n                    }\n                }\n                focusSelection();\n                closeMenu();\n                doUpdateValue(option[valueField], option);\n            }\n        }\n        function getCreatedOptionIndex(optionValue) {\n            const createdOptions = createdOptionsRef.value;\n            return createdOptions.findIndex((createdOption) => createdOption[props.valueField] === optionValue);\n        }\n        function handlePatternInput(e) {\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            const { value } = e.target;\n            patternRef.value = value;\n            const { tag, remote } = props;\n            doSearch(value);\n            if (tag && !remote) {\n                if (!value) {\n                    beingCreatedOptionsRef.value = emptyArray;\n                    return;\n                }\n                const { onCreate } = props;\n                const optionBeingCreated = onCreate\n                    ? onCreate(value)\n                    : { [props.labelField]: value, [props.valueField]: value };\n                const { valueField } = props;\n                if (compitableOptionsRef.value.some((option) => option[valueField] === optionBeingCreated[valueField]) ||\n                    createdOptionsRef.value.some((option) => option[valueField] === optionBeingCreated[valueField])) {\n                    beingCreatedOptionsRef.value = emptyArray;\n                }\n                else {\n                    beingCreatedOptionsRef.value = [optionBeingCreated];\n                }\n            }\n        }\n        function handleClear(e) {\n            e.stopPropagation();\n            const { multiple } = props;\n            if (!multiple && props.filterable) {\n                closeMenu();\n            }\n            doClear();\n            if (multiple) {\n                doUpdateValue([], []);\n            }\n            else {\n                doUpdateValue(null, null);\n            }\n        }\n        function handleMenuMousedown(e) {\n            if (!happensIn(e, 'action') && !happensIn(e, 'empty'))\n                e.preventDefault();\n        }\n        // scroll events on menu\n        function handleMenuScroll(e) {\n            doScroll(e);\n        }\n        // keyboard events\n        // also for menu keydown\n        function handleKeydown(e) {\n            var _a, _b, _c, _d, _e;\n            switch (e.key) {\n                case ' ':\n                    if (props.filterable)\n                        break;\n                    else {\n                        e.preventDefault();\n                    }\n                // eslint-disable-next-line no-fallthrough\n                case 'Enter':\n                    if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isComposing)) {\n                        if (mergedShowRef.value) {\n                            const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n                            if (pendingTmNode) {\n                                handleToggleByTmNode(pendingTmNode);\n                            }\n                            else if (!props.filterable) {\n                                closeMenu();\n                                focusSelection();\n                            }\n                        }\n                        else {\n                            openMenu();\n                            if (props.tag && activeWithoutMenuOpenRef.value) {\n                                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n                                if (beingCreatedOption) {\n                                    const optionValue = beingCreatedOption[props.valueField];\n                                    const { value: mergedValue } = mergedValueRef;\n                                    if (props.multiple) {\n                                        if (Array.isArray(mergedValue) &&\n                                            mergedValue.some((value) => value === optionValue)) {\n                                            // do nothing\n                                        }\n                                        else {\n                                            handleToggleByOption(beingCreatedOption);\n                                        }\n                                    }\n                                    else {\n                                        handleToggleByOption(beingCreatedOption);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                    break;\n                case 'ArrowUp':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n                    }\n                    break;\n                case 'ArrowDown':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n                    }\n                    else {\n                        openMenu();\n                    }\n                    break;\n                case 'Escape':\n                    if (mergedShowRef.value) {\n                        markEventEffectPerformed(e);\n                        closeMenu();\n                    }\n                    (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n                    break;\n            }\n        }\n        function focusSelection() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        function focusSelectionInput() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n        }\n        function handleTriggerOrMenuResize() {\n            var _a;\n            if (!mergedShowRef.value)\n                return;\n            (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        updateMemorizedOptions();\n        watch(toRef(props, 'options'), updateMemorizedOptions);\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { menuBoxShadow } } = themeRef.value;\n            return {\n                '--n-menu-box-shadow': menuBoxShadow\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('select', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedMethods), { mergedStatus: mergedStatusRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, namespace: namespaceRef, treeMate: treeMateRef, isMounted: useIsMounted(), triggerRef,\n            menuRef, pattern: patternRef, uncontrolledShow: uncontrolledShowRef, mergedShow: mergedShowRef, adjustedTo: useAdjustedTo(props), uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, followerRef, localizedPlaceholder: localizedPlaceholderRef, selectedOption: selectedOptionRef, selectedOptions: selectedOptionsRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, focused: focusedRef, activeWithoutMenuOpen: activeWithoutMenuOpenRef, inlineThemeDisabled,\n            onTriggerInputFocus,\n            onTriggerInputBlur,\n            handleTriggerOrMenuResize,\n            handleMenuFocus,\n            handleMenuBlur,\n            handleMenuTabOut,\n            handleTriggerClick, handleToggle: handleToggleByTmNode, handleDeleteOption: handleToggleByOption, handlePatternInput,\n            handleClear,\n            handleTriggerBlur,\n            handleTriggerFocus,\n            handleKeydown,\n            handleMenuAfterLeave,\n            handleMenuClickOutside,\n            handleMenuScroll, handleMenuKeydown: handleKeydown, handleMenuMousedown, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-select` },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInternalSelection, { ref: \"triggerRef\", inlineThemeDisabled: this.inlineThemeDisabled, status: this.mergedStatus, inputProps: this.inputProps, clsPrefix: this.mergedClsPrefix, showArrow: this.showArrow, maxTagCount: this.maxTagCount, bordered: this.mergedBordered, active: this.activeWithoutMenuOpen || this.mergedShow, pattern: this.pattern, placeholder: this.localizedPlaceholder, selectedOption: this.selectedOption, selectedOptions: this.selectedOptions, multiple: this.multiple, renderTag: this.renderTag, renderLabel: this.renderLabel, filterable: this.filterable, clearable: this.clearable, disabled: this.mergedDisabled, size: this.mergedSize, theme: this.mergedTheme.peers.InternalSelection, labelField: this.labelField, valueField: this.valueField, themeOverrides: this.mergedTheme.peerOverrides.InternalSelection, loading: this.loading, focused: this.focused, onClick: this.handleTriggerClick, onDeleteOption: this.handleDeleteOption, onPatternInput: this.handlePatternInput, onClear: this.handleClear, onBlur: this.handleTriggerBlur, onFocus: this.handleTriggerFocus, onKeydown: this.handleKeydown, onPatternBlur: this.onTriggerInputBlur, onPatternFocus: this.onTriggerInputFocus, onResize: this.handleTriggerOrMenuResize, ignoreComposition: this.ignoreComposition }, {\n                            arrow: () => { var _a, _b; return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                        }))\n                    }),\n                    h(VFollower, { ref: \"followerRef\", show: this.mergedShow, to: this.adjustedTo, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, containerClass: this.namespace, width: this.consistentMenuWidth ? 'target' : undefined, minWidth: \"target\", placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted, onAfterLeave: this.handleMenuAfterLeave }, {\n                            default: () => {\n                                var _a, _b, _c;\n                                if (!(this.mergedShow ||\n                                    this.displayDirective === 'show')) {\n                                    return null;\n                                }\n                                (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, { ref: \"menuRef\", onResize: this.handleTriggerOrMenuResize, inlineThemeDisabled: this.inlineThemeDisabled, virtualScroll: this.consistentMenuWidth && this.virtualScroll, class: [\n                                        `${this.mergedClsPrefix}-select-menu`,\n                                        this.themeClass,\n                                        (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class\n                                    ], clsPrefix: this.mergedClsPrefix, focusable: true, labelField: this.labelField, valueField: this.valueField, autoPending: true, nodeProps: this.nodeProps, theme: this.mergedTheme.peers.InternalSelectMenu, themeOverrides: this.mergedTheme.peerOverrides\n                                        .InternalSelectMenu, treeMate: this.treeMate, multiple: this.multiple, size: \"medium\", renderOption: this.renderOption, renderLabel: this.renderLabel, value: this.mergedValue, style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars], onToggle: this.handleToggle, onScroll: this.handleMenuScroll, onFocus: this.handleMenuFocus, onBlur: this.handleMenuBlur, onKeydown: this.handleMenuKeydown, onTabOut: this.handleMenuTabOut, onMousedown: this.handleMenuMousedown, show: this.mergedShow, showCheckmark: this.showCheckmark, resetMenuOnOptionsChange: this.resetMenuOnOptionsChange }), {\n                                    empty: () => { var _a, _b; return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)]; },\n                                    action: () => { var _a, _b; return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                                }), this.displayDirective === 'show'\n                                    ? [\n                                        [vShow, this.mergedShow],\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]\n                                    : [\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}