{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    memberDialog\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: [{\n        id: \"t0095\",\n        department: \"建一部\",\n        name: \"王大明\"\n      }, {\n        id: \"t0096\",\n        department: \"建二部\",\n        name: \"蔡先生\"\n      }, {\n        id: \"t0097\",\n        department: \"建三部\",\n        name: \"吳先生\"\n      }, {\n        id: \"t0098\",\n        department: \"建四部\",\n        name: \"張三\"\n      }],\n      inputValue: \"\",\n      memberList: []\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then(res => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.editForm.countersign = val;\n    },\n    //開啟會辦選擇視窗\n    edit_countersign(index, row) {\n      this.dialogVisible = true;\n      this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      let id = this.editForm.id;\n      let obj = this.editForm;\n      this.axios.patch(\"http://localhost:3000/meetingList/\" + `${id}`, obj).then(response => {\n        this.editForm.id = response.data.id;\n        this.getApi();\n        this.dialogVisible = false;\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n      });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\"\n        });\n      }\n      this.inputValue = \"\";\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAeA,SAASA,iBAAgB,QAAS,gBAAgB;AAClD,OAAOC,YAAW,MAAO,2BAA2B;AACpD,SAASC,QAAO,QAAS,oBAAoB;AAC7C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,IAAI,EAAE,CACJ;QACEC,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC,EACD;QACEK,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC,EACD;QACEK,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC,EACD;QACEK,EAAE,EAAE,OAAO;QACXC,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC,CACF;MACDO,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,MAAM,GAAG;MACPX,QAAQ,EAAE,CAACY,IAAI,CAAEC,GAAG,IAAK;QACvB,IAAI,CAACJ,UAAS,GAAII,GAAG,CAACV,IAAI;MAC5B,CAAC,CAAC;IACJ,CAAC;IACD;IACAW,MAAM,CAACC,GAAG,EAAE;MACV,IAAI,CAACC,QAAQ,CAACC,WAAU,GAAIF,GAAG;IACjC,CAAC;IACD;IACAG,gBAAgB,CAACC,KAAK,EAAEC,GAAG,EAAE;MAC3B,IAAI,CAAChB,aAAY,GAAI,IAAI;MACzB,IAAI,CAACC,IAAG,GAAIgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,GAAG,CAAC,CAAC;MAC3C;;MAEA;MACA,IAAI,CAACI,SAAS,CAAC,MAAM;QACnB,IAAI,CAACnB,IAAI,CAACoB,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAI,CAACjB,UAAU,CAACgB,OAAO,CAAEE,OAAO,IAAK;YACnC,IAAID,IAAI,CAACpB,EAAC,KAAMqB,OAAO,CAACrB,EAAE,EAAE;cAC1B,IAAI,CAACsB,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACH,OAAO,EAAE,IAAI,CAAC;YAC7D;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACD;IACAI,wBAAwB,GAAG;MACzB,IAAIzB,EAAC,GAAI,IAAI,CAACU,QAAQ,CAACV,EAAE;MACzB,IAAI0B,GAAE,GAAI,IAAI,CAAChB,QAAQ;MACvB,IAAI,CAACiB,KAAI,CACNC,KAAK,CAAC,oCAAmC,GAAK,GAAE5B,EAAG,EAAC,EAAE0B,GAAG,EACzDpB,IAAI,CAAEuB,QAAQ,IAAK;QAClB,IAAI,CAACnB,QAAQ,CAACV,EAAC,GAAI6B,QAAQ,CAAChC,IAAI,CAACG,EAAE;QACnC,IAAI,CAACK,MAAM,EAAE;QACb,IAAI,CAACP,aAAY,GAAI,KAAK;MAC5B,CAAC,EACAgC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC;IACD;IACAE,uBAAuB,GAAG;MACxB,IAAI,CAACnC,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACoB,SAAS,CAAC,MAAM;QACnB,IAAI,CAACR,QAAQ,CAACC,WAAW,CAACQ,OAAO,CAAEC,IAAI,IAAK;UAC1C,IAAI,CAACE,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACJ,IAAI,EAAE,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDc,WAAW,CAACC,GAAG,EAAE;MACf,IAAI,CAACpC,IAAI,CAACqC,MAAM,CAAC,IAAI,CAACrC,IAAI,CAACsC,OAAO,CAACF,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IACDG,kBAAkB,GAAG;MACnB,IAAIpC,UAAS,GAAI,IAAI,CAACA,UAAU;MAChC,IAAIA,UAAU,EAAE;QACd,IAAI,CAACH,IAAI,CAACwC,IAAI,CAAC;UACb5C,IAAI,EAAEO,UAAU;UAChBF,EAAE,EAAER,iBAAiB,CAAC,CAAC,CAAC;UACxBS,UAAU,EAAE;QACd,CAAC,CAAC;MACJ;MACA,IAAI,CAACC,UAAS,GAAI,EAAE;IACtB;EACF,CAAC;EACDsC,OAAO,GAAG,CAAC;AACb,CAAC","names":["GenNonDuplicateID","memberDialog","userList","name","components","data","dialogVisible","tags","id","department","inputValue","memberList","methods","getApi","then","res","select","val","editForm","countersign","edit_countersign","index","row","JSON","parse","stringify","$nextTick","forEach","item","subItem","$refs","multipleTables","toggleRowSelection","memberListDialog_Confirm","obj","axios","patch","response","catch","error","console","memberListDialog_Cancel","handleClose","tag","splice","indexOf","handleInputConfirm","push","mounted"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  {{ tags }}\n\n  <memberDialog v-model=\"dialogVisible\" @resetPopupData=\"memberListDialog_Cancel\" @submitPopupData=\"memberListDialog_Confirm\" @selected-user=\"selectedUser\"></memberDialog>\n  <div class=\"flex space-x-2 rounded bg-white px-4 py-2\">\n    <!--<el-tag v-for=\"tag in tags\" :key=\"tag.name\" closable :type=\"tag.type\" @close=\"handleClose(tag)\">\n      {{ tag.name }}\n    </el-tag>-->\n\n    <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable>{{ tag.name }}</a-tag>\n    <input v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" />\n  </div>\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    memberDialog,\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: [\n        {\n          id: \"t0095\",\n          department: \"建一部\",\n          name: \"王大明\",\n        },\n        {\n          id: \"t0096\",\n          department: \"建二部\",\n          name: \"蔡先生\",\n        },\n        {\n          id: \"t0097\",\n          department: \"建三部\",\n          name: \"吳先生\",\n        },\n        {\n          id: \"t0098\",\n          department: \"建四部\",\n          name: \"張三\",\n        },\n      ],\n      inputValue: \"\",\n      memberList: [],\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.editForm.countersign = val;\n    },\n    //開啟會辦選擇視窗\n    edit_countersign(index, row) {\n      this.dialogVisible = true;\n      this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      let id = this.editForm.id;\n      let obj = this.editForm;\n      this.axios\n        .patch(\"http://localhost:3000/meetingList/\" + `${id}`, obj)\n        .then((response) => {\n          this.editForm.id = response.data.id;\n          this.getApi();\n          this.dialogVisible = false;\n        })\n        .catch((error) => {\n          console.error(\"There was an error!\", error);\n        });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {},\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}