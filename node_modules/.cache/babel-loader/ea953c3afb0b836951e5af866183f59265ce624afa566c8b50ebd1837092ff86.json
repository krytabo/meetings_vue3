{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex w-full\"\n};\nconst _hoisted_2 = {\n  class: \"cursor-pointer\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"text-align\": \"right\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"flex items-center justify-center px-3 rounded border border-gray-300 bg-gray-200 text-gray-400 hover:cursor-not-allowed\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_input, {\n    placeholder: \"請選擇\",\n    modelValue: $data.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    class: \"flex-1\",\n    onInput: $options.onInput,\n    disabled: $props.disabled === true\n  }, null, 8, [\"modelValue\", \"onInput\", \"disabled\"]), _createVNode(_component_el_popover, {\n    trigger: \"click\",\n    ref: \"visible\",\n    width: \"auto\"\n  }, {\n    reference: _withCtx(() => [$props.disabled === true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"選擇\")) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"flex items-center justify-center px-3 rounded border border-gray-300 bg-white hover:bg-gray-800 hover:text-white hover:cursor-pointer\",\n      onClick: _cache[2] || (_cache[2] = (...args) => $options.test && $options.test(...args))\n    }, \"選擇\"))]),\n    default: _withCtx(() => [_createVNode(_component_a_input, {\n      placeholder: \"請輸入關鍵字\",\n      modelValue: $data.searchMember,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchMember = $event),\n      onInput: $options.onInput\n    }, null, 8, [\"modelValue\", \"onInput\"]), _createVNode(_component_el_table, {\n      ref: \"filterTable\",\n      data: $options.tables,\n      \"highlight-current-row\": \"\",\n      onCurrentChange: $options.handleCurrentChange\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"員工編號\",\n        width: \"250\"\n      }, {\n        default: _withCtx(scope => [_createElementVNode(\"span\", _hoisted_2, _toDisplayString(scope.row.id), 1)]),\n        _: 1\n      }), _createVNode(_component_el_table_column, {\n        prop: \"department\",\n        label: \"部門名稱\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"員工姓名\",\n        width: \"300\",\n        class: \"cursor-pointer\"\n      })]),\n      _: 1\n    }, 8, [\"data\", \"onCurrentChange\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      onClick: $options.selectMeetingDoneButton\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1\n    }, 8, [\"onClick\"])])]),\n    _: 1\n  }, 512)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;;EASRA,KAAK,EAAC;AAAgB;;EAO7BC,KAAoC,EAApC;IAAA;IAAA;EAAA;AAAoC;;;EAKTD,KAAK,EAAC;;;;;;;;;uBArB1CE,oBA+CM,OA/CNC,UA+CM,GA9CJC,aAA6GC;IAAnGC,WAAW,EAAC,KAAK;gBAAUC,YAAM;+DAANA,YAAM;IAAEP,KAAK,EAAC,QAAQ;IAAEQ,OAAK,EAAEC,gBAAO;IAAGC,QAAQ,EAAEC,eAAQ;sDAChGP,aAsBaQ;IAtBDC,OAAO,EAAC,OAAO;IAACC,GAAG,EAAC,SAAS;IAACC,KAAK,EAAC;;IAkBnCC,SAAS,WAClB,MAAsK,CAA3JL,eAAQ,2BAAnBT,oBAAsK,OAAtKe,UAAsK,EAAR,IAAE,oBAChKf,oBAAgL;;MAApKF,KAAK,EAAC,uIAAuI;MAAEkB,OAAK,yCAAET,uCAAI;OAAE,IAAE;sBAlB5K,MAAwE,CAAxEL,aAAwEe;MAA/Db,WAAW,EAAC,QAAQ;kBAAUC,kBAAY;iEAAZA,kBAAY;MAAGC,OAAK,EAAEC;4CAE7DL,aAQWgB;MARDN,GAAG,EAAC,aAAa;MAAEO,IAAI,EAAEZ,eAAM;MAAE,uBAAqB,EAArB,EAAqB;MAAEa,eAAc,EAAEb;;wBAChF,MAIkB,CAJlBL,aAIkBmB;QAJDC,IAAI,EAAC,IAAI;QAACC,KAAK,EAAC,MAAM;QAACV,KAAK,EAAC;;QACjCW,OAAO,WAAEC,KAAK,KACvBC,oBAAsD,QAAtDC,UAAsD,mBAAtBF,KAAK,CAACG,GAAG,CAACC,EAAE;;UAGhD3B,aAA8EmB;QAA7DC,IAAI,EAAC,YAAY;QAACC,KAAK,EAAC,MAAM;QAACV,KAAK,EAAC;UACtDX,aAA+FmB;QAA9EC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACV,KAAK,EAAC,KAAK;QAACf,KAAK,EAAC;;;wCAG9D4B,oBAEM,OAFNI,UAEM,GADJ5B,aAA0D6B;MAA9Cf,OAAK,EAAET;IAAuB;wBAAE,MAAE,kBAAF,IAAE","names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_input","placeholder","$data","onInput","$options","disabled","$props","_component_el_popover","trigger","ref","width","reference","_hoisted_4","onClick","_component_a_input","_component_el_table","data","onCurrentChange","_component_el_table_column","prop","label","default","scope","_createElementVNode","_hoisted_2","row","id","_hoisted_3","_component_el_button"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberListDialog.vue"],"sourcesContent":["<template>\n  <div class=\"flex w-full\">\n    <el-input placeholder=\"請選擇\" v-model=\"search\" class=\"flex-1\" @input=\"onInput\" :disabled=\"disabled === true\" />\n    <el-popover trigger=\"click\" ref=\"visible\" width=\"auto\">\n      <!--搜尋框-->\n      <a-input placeholder=\"請輸入關鍵字\" v-model=\"searchMember\" @input=\"onInput\" />\n      <!--列表-->\n      <el-table ref=\"filterTable\" :data=\"tables\" highlight-current-row @current-change=\"handleCurrentChange\">\n        <el-table-column prop=\"id\" label=\"員工編號\" width=\"250\">\n          <template #default=\"scope\">\n            <span class=\"cursor-pointer\">{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"department\" label=\"部門名稱\" width=\"250\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"員工姓名\" width=\"300\" class=\"cursor-pointer\"></el-table-column>\n      </el-table>\n      <!--確定按鈕-->\n      <div style=\"text-align: right; margin: 0\">\n        <el-button @click=\"selectMeetingDoneButton\">確定</el-button>\n      </div>\n      <!--選擇按鈕-->\n      <template #reference>\n        <div v-if=\"disabled === true\" class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-gray-200 text-gray-400 hover:cursor-not-allowed\">選擇</div>\n        <div v-else class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-white hover:bg-gray-800 hover:text-white hover:cursor-pointer\" @click=\"test\">選擇</div>\n      </template>\n    </el-popover>\n\n    <!-- <a-trigger trigger=\"click\" class=\"member_select\">\n      <div class=\"flex items-center justify-center px-3 rounded border border-gray-300 bg-white hover:bg-gray-800 hover:text-white hover:cursor-pointer\">選擇</div>\n      <template #content>\n        <div class=\"demo-basic bg-white p-4 rounded-lg shadow-6 flex flex-col space-y-4\">\n          <a-input placeholder=\"請輸入關鍵字\" v-model=\"searchMember\" />\n          <el-table ref=\"filterTable\" :data=\"tables\" highlight-current-row @current-change=\"handleCurrentChange\">\n            <el-table-column prop=\"id\" label=\"員工編號\" width=\"250\">\n              <template #default=\"scope\">\n                <span class=\"cursor-pointer\">{{ scope.row.id }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"department\" label=\"部門名稱\" width=\"250\"></el-table-column>\n            <el-table-column prop=\"name\" label=\"員工姓名\" width=\"300\" class=\"cursor-pointer\"></el-table-column>\n          </el-table>\n          <div class=\"flex\">\n            <el-button v-if=\"multi === true\" @click=\"selectMeetingDoneButton2\">選擇2</el-button>\n            <el-button v-else @click=\"selectMeetingDoneButton\">確定</el-button>\n          </div>\n        </div>\n      </template>\n    </a-trigger>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"tableSelect\",\n  components: {},\n  props: {\n    selectObject: {\n      type: String,\n      default: \"\",\n    },\n    value: {\n      type: String,\n      default: \"\",\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\",\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      tag: \"\",\n      memberListDialog: false,\n      visible: false,\n      search: this.value,\n      searchMember: \"\",\n      memberListSelect: \"\",\n      memberList: [\n        {\n          id: \"t0095\",\n          department: \"建一部2\",\n          name: \"王大明\",\n        },\n        {\n          id: \"t0096\",\n          department: \"建二部\",\n          name: \"蔡先生\",\n        },\n        {\n          id: \"t0097\",\n          department: \"建三部\",\n          name: \"吳先生\",\n        },\n        {\n          id: \"t0098\",\n          department: \"建四部\",\n          name: \"張三\",\n        },\n      ],\n      checkedDetail: [],\n    };\n  },\n  methods: {\n    test() {\n      this.search = null;\n    },\n    handleCurrentChange(val) {\n      this.$emit(\"update:modelValue\", val);\n      this.memberListSelect = val;\n    },\n    selectMeetingDoneButton() {\n      this.search = this.memberListSelect.name;\n      this.searchMember = \"\";\n      this.$refs.visible.hide(); //關閉視窗\n    },\n    onInput(e) {\n      this.$emit(\"update:modelValue\", e);\n    },\n    /*SelectionChange(val) {\n      for (let i = 0; i < val.length; i++) {\n        this.checkedDetail[i] = val[i].name;\n      }\n      console.log(this.checkedDetail);\n    },\n    clearSelect(row) {\n      this.$refs.filterTable.setCurrentRow(row);\n    },*/\n  },\n  computed: {\n    // 篩選表格\n    tables: function () {\n      const search = this.searchMember;\n      if (search) {\n        return this.memberList.filter((data) => {\n          return Object.keys(data).some((key) => {\n            // return String(data[key]).toLowerCase().includes(search.toLowerCase());\n            return String(data[key]).indexOf(search.toUpperCase()) > -1;\n            //.indexOF()區分大小寫 .indexOf(.toUpperCase())不分大小寫 .toLowerCase()轉換小寫\n          });\n        });\n      }\n      return this.memberList;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.member_select {\n  .el-table__row:hover {\n    cursor: pointer !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}