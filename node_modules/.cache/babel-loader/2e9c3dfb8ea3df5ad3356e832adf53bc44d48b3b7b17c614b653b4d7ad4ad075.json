{"ast":null,"code":"import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  render: Function,\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'Countdown',\n  props: countdownProps,\n  setup(props) {\n    let timerId = null;\n    let elapsed = 0;\n    let finished = false;\n    // in ms\n    const distanceRef = ref(0);\n    watchEffect(() => {\n      distanceRef.value = props.duration;\n    });\n    let pnow = -1;\n    function getDistance(time) {\n      return props.duration - elapsed + pnow - time;\n    }\n    function getTimeInfo(distance) {\n      const hours = Math.floor(distance / 3600000);\n      const minutes = Math.floor(distance % 3600000 / 60000);\n      const seconds = Math.floor(distance % 60000 / 1000);\n      const milliseconds = Math.floor(distance % 1000);\n      return {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      };\n    }\n    function getDisplayValue(info) {\n      const {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      } = info;\n      const {\n        precision\n      } = props;\n      switch (precision) {\n        case 0:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n        default:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n      }\n    }\n    const frame = () => {\n      var _a;\n      const {\n        precision\n      } = props;\n      const distance = getDistance(performance.now());\n      if (distance <= 0) {\n        distanceRef.value = 0;\n        stopTimer();\n        if (!finished) {\n          finished = true;\n          (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return;\n      }\n      let leftTime;\n      switch (precision) {\n        case 3:\n        case 2:\n          leftTime = distance % 34; // about 30 fps\n          break;\n        case 1:\n          leftTime = distance % 100;\n          break;\n        default:\n          leftTime = distance % 1000;\n      }\n      distanceRef.value = distance;\n      timerId = window.setTimeout(() => {\n        frame();\n      }, leftTime);\n    };\n    const stopTimer = () => {\n      if (timerId !== null) {\n        window.clearTimeout(timerId);\n        timerId = null;\n      }\n    };\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) {\n          pnow = performance.now();\n          frame();\n        } else {\n          const now = performance.now();\n          if (pnow !== -1) {\n            elapsed += now - pnow;\n          }\n          stopTimer();\n        }\n      });\n    });\n    onBeforeUnmount(() => {\n      stopTimer();\n    });\n    function reset() {\n      distanceRef.value = props.duration;\n      elapsed = 0;\n      pnow = performance.now();\n      if (props.active && finished) {\n        frame();\n      }\n      finished = false;\n    }\n    const countdownExposedMethod = {\n      reset\n    };\n    return Object.assign(countdownExposedMethod, {\n      distance: distanceRef,\n      getTimeInfo,\n      getDisplayValue\n    });\n  },\n  render() {\n    const {\n      render,\n      precision,\n      distance,\n      getTimeInfo,\n      getDisplayValue\n    } = this;\n    let timeInfo;\n    switch (precision) {\n      case 0:\n        timeInfo = getTimeInfo(distance + 999);\n        timeInfo.milliseconds = 0;\n        break;\n      case 1:\n        timeInfo = getTimeInfo(distance + 99);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n        break;\n      case 2:\n        timeInfo = getTimeInfo(distance + 9);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n        break;\n      case 3:\n        timeInfo = getTimeInfo(distance);\n    }\n    if (render) {\n      return render(timeInfo);\n    } else {\n      return getDisplayValue(timeInfo);\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","onMounted","onBeforeUnmount","watchEffect","ref","countdownProps","duration","type","Number","default","active","Boolean","precision","render","Function","onFinish","name","props","setup","timerId","elapsed","finished","distanceRef","value","pnow","getDistance","time","getTimeInfo","distance","hours","Math","floor","minutes","seconds","milliseconds","getDisplayValue","info","String","padStart","frame","_a","performance","now","stopTimer","call","leftTime","window","setTimeout","clearTimeout","reset","countdownExposedMethod","Object","assign","timeInfo"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/countdown/src/Countdown.js"],"sourcesContent":["import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n    duration: {\n        type: Number,\n        default: 0\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    precision: {\n        type: Number,\n        default: 0\n    },\n    render: Function,\n    onFinish: Function\n};\nexport default defineComponent({\n    name: 'Countdown',\n    props: countdownProps,\n    setup(props) {\n        let timerId = null;\n        let elapsed = 0;\n        let finished = false;\n        // in ms\n        const distanceRef = ref(0);\n        watchEffect(() => {\n            distanceRef.value = props.duration;\n        });\n        let pnow = -1;\n        function getDistance(time) {\n            return props.duration - elapsed + pnow - time;\n        }\n        function getTimeInfo(distance) {\n            const hours = Math.floor(distance / 3600000);\n            const minutes = Math.floor((distance % 3600000) / 60000);\n            const seconds = Math.floor((distance % 60000) / 1000);\n            const milliseconds = Math.floor(distance % 1000);\n            return {\n                hours,\n                minutes,\n                seconds,\n                milliseconds\n            };\n        }\n        function getDisplayValue(info) {\n            const { hours, minutes, seconds, milliseconds } = info;\n            const { precision } = props;\n            switch (precision) {\n                case 0:\n                    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n                default:\n                    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n            }\n        }\n        const frame = () => {\n            var _a;\n            const { precision } = props;\n            const distance = getDistance(performance.now());\n            if (distance <= 0) {\n                distanceRef.value = 0;\n                stopTimer();\n                if (!finished) {\n                    finished = true;\n                    (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n                }\n                return;\n            }\n            let leftTime;\n            switch (precision) {\n                case 3:\n                case 2:\n                    leftTime = distance % 34; // about 30 fps\n                    break;\n                case 1:\n                    leftTime = distance % 100;\n                    break;\n                default:\n                    leftTime = distance % 1000;\n            }\n            distanceRef.value = distance;\n            timerId = window.setTimeout(() => {\n                frame();\n            }, leftTime);\n        };\n        const stopTimer = () => {\n            if (timerId !== null) {\n                window.clearTimeout(timerId);\n                timerId = null;\n            }\n        };\n        onMounted(() => {\n            watchEffect(() => {\n                if (props.active) {\n                    pnow = performance.now();\n                    frame();\n                }\n                else {\n                    const now = performance.now();\n                    if (pnow !== -1) {\n                        elapsed += now - pnow;\n                    }\n                    stopTimer();\n                }\n            });\n        });\n        onBeforeUnmount(() => {\n            stopTimer();\n        });\n        function reset() {\n            distanceRef.value = props.duration;\n            elapsed = 0;\n            pnow = performance.now();\n            if (props.active && finished) {\n                frame();\n            }\n            finished = false;\n        }\n        const countdownExposedMethod = {\n            reset\n        };\n        return Object.assign(countdownExposedMethod, {\n            distance: distanceRef,\n            getTimeInfo,\n            getDisplayValue\n        });\n    },\n    render() {\n        const { render, precision, distance, getTimeInfo, getDisplayValue } = this;\n        let timeInfo;\n        switch (precision) {\n            case 0:\n                timeInfo = getTimeInfo(distance + 999);\n                timeInfo.milliseconds = 0;\n                break;\n            case 1:\n                timeInfo = getTimeInfo(distance + 99);\n                timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n                break;\n            case 2:\n                timeInfo = getTimeInfo(distance + 9);\n                timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n                break;\n            case 3:\n                timeInfo = getTimeInfo(distance);\n        }\n        if (render) {\n            return render(timeInfo);\n        }\n        else {\n            return getDisplayValue(timeInfo);\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}