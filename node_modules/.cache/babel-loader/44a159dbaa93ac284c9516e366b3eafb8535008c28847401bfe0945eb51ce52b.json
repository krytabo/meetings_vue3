{"ast":null,"code":"// All the algorithms credit to https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex/54014428#54014428\n// original author: Kamil Kiełczewski\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [h, s, v] 360, 100, 100\n */\nexport function hsl2hsv(h, s, l) {\n  s /= 100;\n  l /= 100;\n  const v = s * Math.min(l, 1 - l) + l;\n  return [h, v ? (2 - 2 * l / v) * 100 : 0, v * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [h, s, l] 360, 100, 100\n */\nexport function hsv2hsl(h, s, v) {\n  s /= 100;\n  v /= 100;\n  const l = v - v * s / 2;\n  const m = Math.min(l, 1 - l);\n  return [h, m ? (v - l) / m * 100 : 0, l * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [r, g, b] 255, 255, 255\n */\nexport function hsv2rgb(h, s, v) {\n  s /= 100;\n  v /= 100;\n  let f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5) * 255, f(3) * 255, f(1) * 255];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsv(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let v = Math.max(r, g, b),\n    c = v - Math.min(r, g, b);\n  let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), v && c / v * 100, v * 100];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let v = Math.max(r, g, b),\n    c = v - Math.min(r, g, b),\n    f = 1 - Math.abs(v + v - c - 1);\n  let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), f ? c / f * 100 : 0, (v + v - c) * 50];\n}\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [255, 255, 255]\n */\nexport function hsl2rgb(h, s, l) {\n  s /= 100;\n  l /= 100;\n  let a = s * Math.min(l, 1 - l);\n  let f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0) * 255, f(8) * 255, f(4) * 255];\n}","map":{"version":3,"names":["hsl2hsv","h","s","l","v","Math","min","hsv2hsl","m","hsv2rgb","f","n","k","max","rgb2hsv","r","g","b","c","rgb2hsl","abs","hsl2rgb","a"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/seemly/es/color/convert.js"],"sourcesContent":["// All the algorithms credit to https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex/54014428#54014428\n// original author: Kamil Kiełczewski\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [h, s, v] 360, 100, 100\n */\nexport function hsl2hsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    const v = s * Math.min(l, 1 - l) + l;\n    return [h, v ? (2 - (2 * l) / v) * 100 : 0, v * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [h, s, l] 360, 100, 100\n */\nexport function hsv2hsl(h, s, v) {\n    s /= 100;\n    v /= 100;\n    const l = v - (v * s) / 2;\n    const m = Math.min(l, 1 - l);\n    return [h, m ? ((v - l) / m) * 100 : 0, l * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [r, g, b] 255, 255, 255\n */\nexport function hsv2rgb(h, s, v) {\n    s /= 100;\n    v /= 100;\n    let f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [f(5) * 255, f(3) * 255, f(1) * 255];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsv(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\n    let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n    return [60 * (h < 0 ? h + 6 : h), v && (c / v) * 100, v * 100];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsl(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b), f = 1 - Math.abs(v + v - c - 1);\n    let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n    return [60 * (h < 0 ? h + 6 : h), f ? (c / f) * 100 : 0, (v + v - c) * 50];\n}\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [255, 255, 255]\n */\nexport function hsl2rgb(h, s, l) {\n    s /= 100;\n    l /= 100;\n    let a = s * Math.min(l, 1 - l);\n    let f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [f(0) * 255, f(8) * 255, f(4) * 255];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}