{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, inject, withDirectives } from 'vue';\nimport { getFirstVNode } from '../../shared/v-node';\nexport default defineComponent({\n  name: 'Target',\n  setup() {\n    const {\n      setTargetRef,\n      syncTarget\n    } = inject('VBinder');\n    const setTargetDirective = {\n      mounted: setTargetRef,\n      updated: setTargetRef\n    };\n    return {\n      syncTarget,\n      setTargetDirective\n    };\n  },\n  render() {\n    const {\n      syncTarget,\n      setTargetDirective\n    } = this;\n    /**\n     * If you are using VBinder as a child of VBinder, the children wouldn't be\n     * a valid DOM or component that can be attached to by directive.\n     * So we won't sync target on those kind of situation and control the\n     * target sync logic manually.\n     */\n    if (syncTarget) {\n      return withDirectives(getFirstVNode('follower', this.$slots), [[setTargetDirective]]);\n    }\n    return getFirstVNode('follower', this.$slots);\n  }\n});","map":{"version":3,"names":["defineComponent","inject","withDirectives","getFirstVNode","name","setup","setTargetRef","syncTarget","setTargetDirective","mounted","updated","render","$slots"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/vueuc/es/binder/src/Target.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, inject, withDirectives } from 'vue';\nimport { getFirstVNode } from '../../shared/v-node';\nexport default defineComponent({\n    name: 'Target',\n    setup() {\n        const { setTargetRef, syncTarget } = inject('VBinder');\n        const setTargetDirective = {\n            mounted: setTargetRef,\n            updated: setTargetRef\n        };\n        return {\n            syncTarget,\n            setTargetDirective\n        };\n    },\n    render() {\n        const { syncTarget, setTargetDirective } = this;\n        /**\n         * If you are using VBinder as a child of VBinder, the children wouldn't be\n         * a valid DOM or component that can be attached to by directive.\n         * So we won't sync target on those kind of situation and control the\n         * target sync logic manually.\n         */\n        if (syncTarget) {\n            return withDirectives(getFirstVNode('follower', this.$slots), [\n                [setTargetDirective]\n            ]);\n        }\n        return getFirstVNode('follower', this.$slots);\n    }\n});\n"],"mappings":"AAAA;AACA,SAASA,eAAe,EAAEC,MAAM,EAAEC,cAAc,QAAQ,KAAK;AAC7D,SAASC,aAAa,QAAQ,qBAAqB;AACnD,eAAeH,eAAe,CAAC;EAC3BI,IAAI,EAAE,QAAQ;EACdC,KAAK,GAAG;IACJ,MAAM;MAAEC,YAAY;MAAEC;IAAW,CAAC,GAAGN,MAAM,CAAC,SAAS,CAAC;IACtD,MAAMO,kBAAkB,GAAG;MACvBC,OAAO,EAAEH,YAAY;MACrBI,OAAO,EAAEJ;IACb,CAAC;IACD,OAAO;MACHC,UAAU;MACVC;IACJ,CAAC;EACL,CAAC;EACDG,MAAM,GAAG;IACL,MAAM;MAAEJ,UAAU;MAAEC;IAAmB,CAAC,GAAG,IAAI;IAC/C;AACR;AACA;AACA;AACA;AACA;IACQ,IAAID,UAAU,EAAE;MACZ,OAAOL,cAAc,CAACC,aAAa,CAAC,UAAU,EAAE,IAAI,CAACS,MAAM,CAAC,EAAE,CAC1D,CAACJ,kBAAkB,CAAC,CACvB,CAAC;IACN;IACA,OAAOL,aAAa,CAAC,UAAU,EAAE,IAAI,CAACS,MAAM,CAAC;EACjD;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}