{"ast":null,"code":"const oppositionPositions = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nconst oppositeAligns = {\n  start: 'end',\n  center: 'center',\n  end: 'start'\n};\nconst propToCompare = {\n  top: 'height',\n  bottom: 'height',\n  left: 'width',\n  right: 'width'\n};\nconst transformOrigins = {\n  'bottom-start': 'top left',\n  bottom: 'top center',\n  'bottom-end': 'top right',\n  'top-start': 'bottom left',\n  top: 'bottom center',\n  'top-end': 'bottom right',\n  'right-start': 'top left',\n  right: 'center left',\n  'right-end': 'bottom left',\n  'left-start': 'top right',\n  left: 'center right',\n  'left-end': 'bottom right'\n};\nconst overlapTransformOrigin = {\n  'bottom-start': 'bottom left',\n  bottom: 'bottom center',\n  'bottom-end': 'bottom right',\n  'top-start': 'top left',\n  top: 'top center',\n  'top-end': 'top right',\n  'right-start': 'top right',\n  right: 'center right',\n  'right-end': 'bottom right',\n  'left-start': 'top left',\n  left: 'center left',\n  'left-end': 'bottom left'\n};\nconst oppositeAlignCssPositionProps = {\n  'bottom-start': 'right',\n  'bottom-end': 'left',\n  'top-start': 'right',\n  'top-end': 'left',\n  'right-start': 'bottom',\n  'right-end': 'top',\n  'left-start': 'bottom',\n  'left-end': 'top'\n};\nconst keepOffsetDirection = {\n  top: true,\n  bottom: false,\n  left: true,\n  right: false // left--\n};\n\nconst cssPositionToOppositeAlign = {\n  top: 'end',\n  bottom: 'start',\n  left: 'end',\n  right: 'start'\n};\nexport function getPlacementAndOffsetOfFollower(placement, targetRect, followerRect, shift, flip, overlap) {\n  if (!flip || overlap) {\n    return {\n      placement: placement,\n      top: 0,\n      left: 0\n    };\n  }\n  const [position, align] = placement.split('-');\n  let properAlign = align !== null && align !== void 0 ? align : 'center';\n  let properOffset = {\n    top: 0,\n    left: 0\n  };\n  const deriveOffset = (oppositeAlignCssSizeProp, alignCssPositionProp, offsetVertically) => {\n    let left = 0;\n    let top = 0;\n    const diff = followerRect[oppositeAlignCssSizeProp] - targetRect[alignCssPositionProp] - targetRect[oppositeAlignCssSizeProp];\n    if (diff > 0 && shift) {\n      if (offsetVertically) {\n        //       screen border\n        // |-----------------------------------------|\n        // |                    | f  |               |\n        // |                    | o  |               |\n        // |                    | l  |               |\n        // |                    | l  |----           |\n        // |                    | o  |tar |          |\n        // |                    | w  |get |          |\n        // |                    | e  |    |          |\n        // |                    | r  |----           |\n        // |                     ----                |\n        // |-----------------------------------------|\n        top = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n      } else {\n        //       screen border\n        // |----------------------------------------|\n        // |                                        |\n        // |          ----------                    |\n        // |          | target |                    |\n        // |       ----------------------------------\n        // |       |       follower                 |\n        // |       ----------------------------------\n        // |                                        |\n        // |----------------------------------------|\n        left = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n      }\n    }\n    return {\n      left,\n      top\n    };\n  };\n  const offsetVertically = position === 'left' || position === 'right';\n  // choose proper placement for non-center align\n  if (properAlign !== 'center') {\n    const oppositeAlignCssPositionProp = oppositeAlignCssPositionProps[placement];\n    const currentAlignCssPositionProp = oppositionPositions[oppositeAlignCssPositionProp];\n    const oppositeAlignCssSizeProp = propToCompare[oppositeAlignCssPositionProp];\n    // if follower rect is larger than target rect in align direction\n    // ----------[ target ]---------|\n    // ----------[     follower     ]\n    if (followerRect[oppositeAlignCssSizeProp] > targetRect[oppositeAlignCssSizeProp]) {\n      if (\n      // current space is not enough\n      // ----------[ target ]---------|\n      // -------[     follower        ]\n      targetRect[oppositeAlignCssPositionProp] + targetRect[oppositeAlignCssSizeProp] < followerRect[oppositeAlignCssSizeProp]) {\n        const followerOverTargetSize = (followerRect[oppositeAlignCssSizeProp] - targetRect[oppositeAlignCssSizeProp]) / 2;\n        if (targetRect[oppositeAlignCssPositionProp] < followerOverTargetSize || targetRect[currentAlignCssPositionProp] < followerOverTargetSize) {\n          // opposite align has larger space\n          // -------[ target ]-----------|\n          // -------[     follower     ]-|\n          if (targetRect[oppositeAlignCssPositionProp] < targetRect[currentAlignCssPositionProp]) {\n            properAlign = oppositeAligns[align];\n            properOffset = deriveOffset(oppositeAlignCssSizeProp, currentAlignCssPositionProp, offsetVertically);\n          } else {\n            // ----------------[ target ]----|\n            // --------[   follower     ]----|\n            properOffset = deriveOffset(oppositeAlignCssSizeProp, oppositeAlignCssPositionProp, offsetVertically);\n          }\n        } else {\n          // 'center' align is better\n          // ------------[ target ]--------|\n          // -------[       follower    ]--|\n          properAlign = 'center';\n        }\n      }\n    } else if (followerRect[oppositeAlignCssSizeProp] < targetRect[oppositeAlignCssSizeProp]) {\n      // TODO: maybe center is better\n      if (targetRect[currentAlignCssPositionProp] < 0 &&\n      // opposite align has larger space\n      // ------------[   target   ]\n      // ----------------[follower]\n      targetRect[oppositeAlignCssPositionProp] > targetRect[currentAlignCssPositionProp]) {\n        properAlign = oppositeAligns[align];\n      }\n    }\n  } else {\n    const possibleAlternativeAlignCssPositionProp1 = position === 'bottom' || position === 'top' ? 'left' : 'top';\n    const possibleAlternativeAlignCssPositionProp2 = oppositionPositions[possibleAlternativeAlignCssPositionProp1];\n    const alternativeAlignCssSizeProp = propToCompare[possibleAlternativeAlignCssPositionProp1];\n    const followerOverTargetSize = (followerRect[alternativeAlignCssSizeProp] - targetRect[alternativeAlignCssSizeProp]) / 2;\n    if (\n    // center is not enough\n    // ----------- [ target ]--|\n    // -------[     follower     ]\n    targetRect[possibleAlternativeAlignCssPositionProp1] < followerOverTargetSize || targetRect[possibleAlternativeAlignCssPositionProp2] < followerOverTargetSize) {\n      // alternative 2 position's space is larger\n      if (targetRect[possibleAlternativeAlignCssPositionProp1] > targetRect[possibleAlternativeAlignCssPositionProp2]) {\n        properAlign = cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp1];\n        properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp1, offsetVertically);\n      } else {\n        // alternative 1 position's space is larger\n        properAlign = cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp2];\n        properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp2, offsetVertically);\n      }\n    }\n  }\n  let properPosition = position;\n  if (\n  // space is not enough\n  targetRect[position] < followerRect[propToCompare[position]] &&\n  // opposite position's space is larger\n  targetRect[position] < targetRect[oppositionPositions[position]]) {\n    properPosition = oppositionPositions[position];\n  }\n  return {\n    placement: properAlign !== 'center' ? `${properPosition}-${properAlign}` : properPosition,\n    left: properOffset.left,\n    top: properOffset.top\n  };\n}\nexport function getProperTransformOrigin(placement, overlap) {\n  if (overlap) return overlapTransformOrigin[placement];\n  return transformOrigins[placement];\n}\n// ------------\n// |  offset  |\n// |          |\n// | [target] |\n// |          |\n// ------------\n// TODO: refactor it to remove dup logic\nexport function getOffset(placement, offsetRect, targetRect, offsetTopToStandardPlacement, offsetLeftToStandardPlacement, overlap) {\n  if (overlap) {\n    switch (placement) {\n      case 'bottom-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-100%)'\n        };\n      case 'bottom-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-100%)'\n        };\n      case 'top-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: ''\n        };\n      case 'top-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%)'\n        };\n      case 'right-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%)'\n        };\n      case 'right-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-100%)'\n        };\n      case 'left-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: ''\n        };\n      case 'left-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-100%)'\n        };\n      case 'top':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n          transform: 'translateX(-50%)'\n        };\n      case 'right':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-50%)'\n        };\n      case 'left':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-50%)'\n        };\n      case 'bottom':\n      default:\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n          transform: 'translateX(-50%) translateY(-100%)'\n        };\n    }\n  }\n  switch (placement) {\n    case 'bottom-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: ''\n      };\n    case 'bottom-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%)'\n      };\n    case 'top-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%)'\n      };\n    case 'top-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%) translateY(-100%)'\n      };\n    case 'right-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: ''\n      };\n    case 'right-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%)'\n      };\n    case 'left-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%)'\n      };\n    case 'left-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%) translateY(-100%)'\n      };\n    case 'top':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2 + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%) translateX(-50%)'\n      };\n    case 'right':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2 + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-50%)'\n      };\n    case 'left':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2 + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-50%) translateX(-100%)'\n      };\n    case 'bottom':\n    default:\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2 + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-50%)'\n      };\n  }\n}","map":{"version":3,"names":["oppositionPositions","top","bottom","left","right","oppositeAligns","start","center","end","propToCompare","transformOrigins","overlapTransformOrigin","oppositeAlignCssPositionProps","keepOffsetDirection","cssPositionToOppositeAlign","getPlacementAndOffsetOfFollower","placement","targetRect","followerRect","shift","flip","overlap","position","align","split","properAlign","properOffset","deriveOffset","oppositeAlignCssSizeProp","alignCssPositionProp","offsetVertically","diff","oppositeAlignCssPositionProp","currentAlignCssPositionProp","followerOverTargetSize","possibleAlternativeAlignCssPositionProp1","possibleAlternativeAlignCssPositionProp2","alternativeAlignCssSizeProp","properPosition","getProperTransformOrigin","getOffset","offsetRect","offsetTopToStandardPlacement","offsetLeftToStandardPlacement","Math","round","height","transform","width"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/vueuc/es/binder/src/get-placement-style.js"],"sourcesContent":["const oppositionPositions = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n};\nconst oppositeAligns = {\n    start: 'end',\n    center: 'center',\n    end: 'start'\n};\nconst propToCompare = {\n    top: 'height',\n    bottom: 'height',\n    left: 'width',\n    right: 'width'\n};\nconst transformOrigins = {\n    'bottom-start': 'top left',\n    bottom: 'top center',\n    'bottom-end': 'top right',\n    'top-start': 'bottom left',\n    top: 'bottom center',\n    'top-end': 'bottom right',\n    'right-start': 'top left',\n    right: 'center left',\n    'right-end': 'bottom left',\n    'left-start': 'top right',\n    left: 'center right',\n    'left-end': 'bottom right'\n};\nconst overlapTransformOrigin = {\n    'bottom-start': 'bottom left',\n    bottom: 'bottom center',\n    'bottom-end': 'bottom right',\n    'top-start': 'top left',\n    top: 'top center',\n    'top-end': 'top right',\n    'right-start': 'top right',\n    right: 'center right',\n    'right-end': 'bottom right',\n    'left-start': 'top left',\n    left: 'center left',\n    'left-end': 'bottom left'\n};\nconst oppositeAlignCssPositionProps = {\n    'bottom-start': 'right',\n    'bottom-end': 'left',\n    'top-start': 'right',\n    'top-end': 'left',\n    'right-start': 'bottom',\n    'right-end': 'top',\n    'left-start': 'bottom',\n    'left-end': 'top'\n};\nconst keepOffsetDirection = {\n    top: true,\n    bottom: false,\n    left: true,\n    right: false // left--\n};\nconst cssPositionToOppositeAlign = {\n    top: 'end',\n    bottom: 'start',\n    left: 'end',\n    right: 'start'\n};\nexport function getPlacementAndOffsetOfFollower(placement, targetRect, followerRect, shift, flip, overlap) {\n    if (!flip || overlap) {\n        return { placement: placement, top: 0, left: 0 };\n    }\n    const [position, align] = placement.split('-');\n    let properAlign = align !== null && align !== void 0 ? align : 'center';\n    let properOffset = {\n        top: 0,\n        left: 0\n    };\n    const deriveOffset = (oppositeAlignCssSizeProp, alignCssPositionProp, offsetVertically) => {\n        let left = 0;\n        let top = 0;\n        const diff = followerRect[oppositeAlignCssSizeProp] -\n            targetRect[alignCssPositionProp] -\n            targetRect[oppositeAlignCssSizeProp];\n        if (diff > 0 && shift) {\n            if (offsetVertically) {\n                //       screen border\n                // |-----------------------------------------|\n                // |                    | f  |               |\n                // |                    | o  |               |\n                // |                    | l  |               |\n                // |                    | l  |----           |\n                // |                    | o  |tar |          |\n                // |                    | w  |get |          |\n                // |                    | e  |    |          |\n                // |                    | r  |----           |\n                // |                     ----                |\n                // |-----------------------------------------|\n                top = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n            }\n            else {\n                //       screen border\n                // |----------------------------------------|\n                // |                                        |\n                // |          ----------                    |\n                // |          | target |                    |\n                // |       ----------------------------------\n                // |       |       follower                 |\n                // |       ----------------------------------\n                // |                                        |\n                // |----------------------------------------|\n                left = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n            }\n        }\n        return {\n            left,\n            top\n        };\n    };\n    const offsetVertically = position === 'left' || position === 'right';\n    // choose proper placement for non-center align\n    if (properAlign !== 'center') {\n        const oppositeAlignCssPositionProp = oppositeAlignCssPositionProps[placement];\n        const currentAlignCssPositionProp = oppositionPositions[oppositeAlignCssPositionProp];\n        const oppositeAlignCssSizeProp = propToCompare[oppositeAlignCssPositionProp];\n        // if follower rect is larger than target rect in align direction\n        // ----------[ target ]---------|\n        // ----------[     follower     ]\n        if (followerRect[oppositeAlignCssSizeProp] >\n            targetRect[oppositeAlignCssSizeProp]) {\n            if (\n            // current space is not enough\n            // ----------[ target ]---------|\n            // -------[     follower        ]\n            targetRect[oppositeAlignCssPositionProp] +\n                targetRect[oppositeAlignCssSizeProp] <\n                followerRect[oppositeAlignCssSizeProp]) {\n                const followerOverTargetSize = (followerRect[oppositeAlignCssSizeProp] -\n                    targetRect[oppositeAlignCssSizeProp]) /\n                    2;\n                if (targetRect[oppositeAlignCssPositionProp] < followerOverTargetSize ||\n                    targetRect[currentAlignCssPositionProp] < followerOverTargetSize) {\n                    // opposite align has larger space\n                    // -------[ target ]-----------|\n                    // -------[     follower     ]-|\n                    if (targetRect[oppositeAlignCssPositionProp] <\n                        targetRect[currentAlignCssPositionProp]) {\n                        properAlign = oppositeAligns[align];\n                        properOffset = deriveOffset(oppositeAlignCssSizeProp, currentAlignCssPositionProp, offsetVertically);\n                    }\n                    else {\n                        // ----------------[ target ]----|\n                        // --------[   follower     ]----|\n                        properOffset = deriveOffset(oppositeAlignCssSizeProp, oppositeAlignCssPositionProp, offsetVertically);\n                    }\n                }\n                else {\n                    // 'center' align is better\n                    // ------------[ target ]--------|\n                    // -------[       follower    ]--|\n                    properAlign = 'center';\n                }\n            }\n        }\n        else if (followerRect[oppositeAlignCssSizeProp] <\n            targetRect[oppositeAlignCssSizeProp]) {\n            // TODO: maybe center is better\n            if (targetRect[currentAlignCssPositionProp] < 0 &&\n                // opposite align has larger space\n                // ------------[   target   ]\n                // ----------------[follower]\n                targetRect[oppositeAlignCssPositionProp] >\n                    targetRect[currentAlignCssPositionProp]) {\n                properAlign = oppositeAligns[align];\n            }\n        }\n    }\n    else {\n        const possibleAlternativeAlignCssPositionProp1 = position === 'bottom' || position === 'top' ? 'left' : 'top';\n        const possibleAlternativeAlignCssPositionProp2 = oppositionPositions[possibleAlternativeAlignCssPositionProp1];\n        const alternativeAlignCssSizeProp = propToCompare[possibleAlternativeAlignCssPositionProp1];\n        const followerOverTargetSize = (followerRect[alternativeAlignCssSizeProp] -\n            targetRect[alternativeAlignCssSizeProp]) /\n            2;\n        if (\n        // center is not enough\n        // ----------- [ target ]--|\n        // -------[     follower     ]\n        targetRect[possibleAlternativeAlignCssPositionProp1] <\n            followerOverTargetSize ||\n            targetRect[possibleAlternativeAlignCssPositionProp2] <\n                followerOverTargetSize) {\n            // alternative 2 position's space is larger\n            if (targetRect[possibleAlternativeAlignCssPositionProp1] >\n                targetRect[possibleAlternativeAlignCssPositionProp2]) {\n                properAlign =\n                    cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp1];\n                properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp1, offsetVertically);\n            }\n            else {\n                // alternative 1 position's space is larger\n                properAlign =\n                    cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp2];\n                properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp2, offsetVertically);\n            }\n        }\n    }\n    let properPosition = position;\n    if (\n    // space is not enough\n    targetRect[position] < followerRect[propToCompare[position]] &&\n        // opposite position's space is larger\n        targetRect[position] < targetRect[oppositionPositions[position]]) {\n        properPosition = oppositionPositions[position];\n    }\n    return {\n        placement: properAlign !== 'center'\n            ? `${properPosition}-${properAlign}`\n            : properPosition,\n        left: properOffset.left,\n        top: properOffset.top\n    };\n}\nexport function getProperTransformOrigin(placement, overlap) {\n    if (overlap)\n        return overlapTransformOrigin[placement];\n    return transformOrigins[placement];\n}\n// ------------\n// |  offset  |\n// |          |\n// | [target] |\n// |          |\n// ------------\n// TODO: refactor it to remove dup logic\nexport function getOffset(placement, offsetRect, targetRect, offsetTopToStandardPlacement, offsetLeftToStandardPlacement, overlap) {\n    if (overlap) {\n        switch (placement) {\n            case 'bottom-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-100%)'\n                };\n            case 'bottom-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-100%)'\n                };\n            case 'top-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: ''\n                };\n            case 'top-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%)'\n                };\n            case 'right-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%)'\n                };\n            case 'right-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-100%)'\n                };\n            case 'left-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: ''\n                };\n            case 'left-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-100%)'\n                };\n            case 'top':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n                    transform: 'translateX(-50%)'\n                };\n            case 'right':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-50%)'\n                };\n            case 'left':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-50%)'\n                };\n            case 'bottom':\n            default:\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n                    transform: 'translateX(-50%) translateY(-100%)'\n                };\n        }\n    }\n    switch (placement) {\n        case 'bottom-start':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: ''\n            };\n        case 'bottom-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%)'\n            };\n        case 'top-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%)'\n            };\n        case 'top-end':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%) translateY(-100%)'\n            };\n        case 'right-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: ''\n            };\n        case 'right-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%)'\n            };\n        case 'left-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%)'\n            };\n        case 'left-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%) translateY(-100%)'\n            };\n        case 'top':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width / 2 +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%) translateX(-50%)'\n            };\n        case 'right':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height / 2 +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-50%)'\n            };\n        case 'left':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height / 2 +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-50%) translateX(-100%)'\n            };\n        case 'bottom':\n        default:\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width / 2 +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-50%)'\n            };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}