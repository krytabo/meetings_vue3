{"ast":null,"code":"import { userList } from \"@/views/config/api\";\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    isSingel: {\n      type: Boolean,\n      default: false\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true\n    }\n  },\n  // emits: [\"selected-user\"],\n  /*setup(props, { emit }) {\n    // 选择用户\n    const setSelectRows = (selection) => {\n      // 单选\n      if (props.isSingel) {\n        if (selection.length > 1) {\n          const del_row = selection.shift();\n          state.table.toggleRowSelection(del_row, false); //设置这一行取消选中\n        }\n      }\n      // 多选\n      state.selectRows = selection;\n    };\n     // 打开弹框\n    const showModel = () => {\n      state.dialogFormVisible = true;\n    };\n     // 关闭弹框\n    const close = () => {\n      state.dialogFormVisible = false;\n    };\n     // 保存选择的用户\n    const save = () => {\n      emit(\"selected-user\", state.selectRows); // 派发事件，具体逻辑在父组件中实现\n      close();\n    };\n     return {\n      ...toRefs(state),\n      setSelectRows,\n      showModel,\n      close,\n      save,\n    };\n  },*/\n  data() {\n    return {\n      rules: this.rulesOption,\n      memberList: [],\n      search: this.value,\n      checkedDetail: []\n    };\n  },\n  mounted() {\n    userList().then(res => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    // table選擇框\n    select(rows) {\n      this.checkedDetail = rows;\n      this.$emit(\"selected-user\", rows);\n    },\n    // 確認按鈕(驗證)\n    confirmButton() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 確認按鈕\n    confirmButton2() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      /* this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });*/\n    }\n  },\n\n  watch: {\n    /*multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    },*/\n  },\n  computed: {\n    /*dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      },\n    },*/\n  }\n};","map":{"version":3,"mappings":"AAmCA,SAASA,QAAO,QAAS,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;IACJC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACDG,QAAQ,EAAE;MACRL,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACD;IACAI,WAAW,EAAE;MACXN,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACD;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAsCAK,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI,CAACF,WAAW;MACvBG,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,IAAI,CAACX,KAAK;MAClBY,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACRhB,QAAQ,EAAE,CAACiB,IAAI,CAAEC,GAAG,IAAK;MACvB,IAAI,CAACL,UAAS,GAAIK,GAAG,CAACP,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC;EACDQ,OAAO,EAAE;IACP;IACAC,MAAM,CAACC,IAAI,EAAE;MACX,IAAI,CAACN,aAAY,GAAIM,IAAI;MACzB,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,IAAI,CAAC;IACnC,CAAC;IACD;IACAE,aAAa,GAAG;MACd,IAAIC,GAAE,GAAI,IAAI,CAACT,aAAa;MAC5B,IAAI,CAACD,MAAK,GAAIU,GAAG;MACjB,IAAI,CAACF,KAAK,CAAC,iBAAiB,EAAE,mBAAmB,EAAEE,GAAG,CAAC;;MAEvD;MACA,IAAI,IAAI,CAACC,IAAI,CAACC,MAAK,KAAM,CAAC,EAAE;QAC1B,IAAI,CAACC,aAAY,GAAI,OAAO;MAC9B,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,SAAS;QAC9B,MAAMN,IAAG,GAAI,IAAI,CAACI,IAAI;QACtB,IAAI,CAACH,KAAK,CAAC,WAAW,EAAED,IAAI,CAAC;MAC/B;;MAEA;MACA,IAAI,CAACO,SAAS,CAAC,MAAM;QACnB,IAAI,CAACH,IAAI,CAACI,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACH,IAAI,EAAE,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACD;IACAI,cAAc,GAAG;MACf,IAAIV,GAAE,GAAI,IAAI,CAACT,aAAa;MAC5B,IAAI,CAACD,MAAK,GAAIU,GAAG;MACjB,IAAI,CAACF,KAAK,CAAC,iBAAiB,EAAE,mBAAmB,EAAEE,GAAG,CAAC;;MAEvD;MACA,IAAI,CAACI,SAAS,CAAC,MAAM;QACnB,IAAI,CAACH,IAAI,CAACI,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACH,IAAI,EAAE,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACD;IACAK,YAAY,GAAG;MACb,IAAI,CAACb,KAAK,CAAC,gBAAgB,CAAC;MAC5B;;;;;IAKF;EACF,CAAC;;EACDc,KAAK,EAAE;IACL;;;;;EAAA,CAKD;EACDC,QAAQ,EAAE;IACR;;;;;;;;EAAA;AASJ,CAAC","names":["userList","name","prop","value","type","Array","default","visible","Boolean","isSingel","rulesOption","data","rules","memberList","search","checkedDetail","mounted","then","res","methods","select","rows","$emit","confirmButton","val","tags","length","validateState","$nextTick","forEach","item","$refs","multipleTables","toggleRowSelection","confirmButton2","cancelButton","watch","computed"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-dialog title=\"選擇人員\" draggable :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button v-if=\"rules === true\" type=\"primary\" @click=\"confirmButton\">確定</a-button>\n      <a-button v-else type=\"primary\" @click=\"confirmButton2\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    isSingel: {\n      type: Boolean,\n      default: false,\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  // emits: [\"selected-user\"],\n  /*setup(props, { emit }) {\n    // 选择用户\n    const setSelectRows = (selection) => {\n      // 单选\n      if (props.isSingel) {\n        if (selection.length > 1) {\n          const del_row = selection.shift();\n          state.table.toggleRowSelection(del_row, false); //设置这一行取消选中\n        }\n      }\n      // 多选\n      state.selectRows = selection;\n    };\n\n    // 打开弹框\n    const showModel = () => {\n      state.dialogFormVisible = true;\n    };\n\n    // 关闭弹框\n    const close = () => {\n      state.dialogFormVisible = false;\n    };\n\n    // 保存选择的用户\n    const save = () => {\n      emit(\"selected-user\", state.selectRows); // 派发事件，具体逻辑在父组件中实现\n      close();\n    };\n\n    return {\n      ...toRefs(state),\n      setSelectRows,\n      showModel,\n      close,\n      save,\n    };\n  },*/\n  data() {\n    return {\n      rules: this.rulesOption,\n      memberList: [],\n      search: this.value,\n      checkedDetail: [],\n    };\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    // table選擇框\n    select(rows) {\n      this.checkedDetail = rows;\n      this.$emit(\"selected-user\", rows);\n    },\n    // 確認按鈕(驗證)\n    confirmButton() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 確認按鈕\n    confirmButton2() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      /* this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });*/\n    },\n  },\n  watch: {\n    /*multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    },*/\n  },\n  computed: {\n    /*dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      },\n    },*/\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}