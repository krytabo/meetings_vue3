{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, vShow as _vShow, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5752faac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flex w-full items-center\"\n};\nconst _hoisted_2 = {\n  class: \"relative w-full\"\n};\nconst _hoisted_3 = {\n  class: \"absolute text-red-500\",\n  style: {\n    \"bottom\": \"-20px\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"flax mb-5 space-x-4\"\n};\nconst _hoisted_5 = {\n  class: \"flex w-full items-center justify-center space-x-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\"<p class=\\\"text-red-500\\\">{{ tags }}</p>\"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex h-8 flex-1 items-center space-x-2 rounded border border-gray-200 bg-white px-4 hover:border-gray-300\", {\n      inputError: $data.validateState === 'error'\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createBlock(_component_a_tag, {\n      key: tag.name,\n      color: \"#165dff\",\n      class: \"rounded\",\n      closable: \"\",\n      onClose: $event => $options.handleClose(tag)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(tag.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args), [\"enter\"])),\n    class: \"flex-1\",\n    onBlur: _cache[2] || (_cache[2] = (...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vShow, $props.allowCreate === true], [_vModelText, $data.inputValue]])], 2 /* CLASS */), _withDirectives(_createElementVNode(\"p\", _hoisted_3, \"請選擇對象\", 512 /* NEED_PATCH */), [[_vShow, $data.validateState === 'error']])], 512 /* NEED_PATCH */), [[_vShow, $props.tagsInput === true]]), _createVNode(_component_a_button, {\n    type: $props.type,\n    size: $props.size,\n    plain: $props.plain,\n    circle: $props.circle,\n    status: $props.status,\n    onClick: $options.edit_countersign\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"選擇\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"type\", \"size\", \"plain\", \"circle\", \"status\", \"onClick\"])]), _createVNode(_component_el_dialog, {\n    title: \"選擇人員\",\n    draggable: \"\",\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.dialogVisible = $event),\n    \"show-close\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_table, {\n      ref: \"memberTables\",\n      data: $data.memberList,\n      onSelectionChange: $options.select,\n      \"row-key\": $options.getRowKeys\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"編號\",\n        prop: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"姓名\",\n        prop: \"name\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"部門\",\n        prop: \"department\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onSelectionChange\", \"row-key\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_a_button, {\n      status: \"primary\",\n      onClick: $options.memberListDialog_Cancel\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), $props.rulesOption === true ? (_openBlock(), _createBlock(_component_a_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: $options.memberListDialog_Confirm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_a_button, {\n      key: 1,\n      type: \"primary\",\n      onClick: $options.memberListDialog_Confirm2\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]))])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"mappings":";;;EAGSA,KAAK,EAAC;AAA0B;;EACFA,KAAK,EAAC;AAAiB;;EAKhBA,KAAK,EAAC,uBAAuB;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EAKjED,KAAK,EAAC;AAAqB;;EAQ3BA,KAAK,EAAC;AAAmD;;;;;;;uBArBlEE,oBA2BM,cA1BJC,+DAA6C,EAC7CC,oBASM,OATNC,UASM,mBARJD,oBAMM,OANNE,UAMM,GALJF,oBAGM;IAHDJ,KAAK,mBAAC,2GAA2G;MAAAO,YAAuBC,mBAAa;IAAA;yBACxJN,oBAAoIO,6BAA/GD,UAAI,EAAXE,GAAG;yBAAjBC,aAAoIC;MAAxGC,GAAG,EAAEH,GAAG,CAACI,IAAI;MAAEC,KAAK,EAAC,SAAS;MAACf,KAAK,EAAC,SAAS;MAACgB,QAAQ,EAAR,EAAQ;MAAEC,OAAK,YAAEC,oBAAW,CAACR,GAAG;;wBAAG,MAAc,mCAAXA,GAAG,CAACI,IAAI;;;;kDACzHV,oBAAwI;+DAA1FI,gBAAU;IAAGW,OAAK,mDAAQD,mEAAkB;IAAElB,KAAK,EAAC,QAAQ;IAAEoB,MAAI,yCAAEF,mEAAkB;4DAArHG,kBAAW,0BAAoBb,gBAAU,sCAE1DJ,oBAAmG,KAAnGkB,UAAmG,EAAT,OAAK,mCAApFd,mBAAa,mDALba,gBAAS,cAOtBE,aAA4HC;IAAjHC,IAAI,EAAEJ,WAAI;IAAGK,IAAI,EAAEL,WAAI;IAAGM,KAAK,EAAEN,YAAK;IAAGO,MAAM,EAAEP,aAAM;IAAGQ,MAAM,EAAER,aAAM;IAAGS,OAAK,EAAEZ;;sBAAkB,MAAE,kBAAF,IAAE;;iFAEnHK,aAcYQ;IAdDC,KAAK,EAAC,MAAM;IAACC,SAAS,EAAT,EAAS;gBAAUzB,mBAAa;+DAAbA,mBAAa;IAAG,YAAU,EAAE;;sBACrE,MAOM,CAPNJ,oBAOM,OAPN8B,UAOM,GANJX,aAKWY;MALDC,GAAG,EAAC,cAAc;MAAEC,IAAI,EAAE7B,gBAAU;MAAG8B,iBAAgB,EAAEpB,eAAM;MAAG,SAAO,EAAEA;;wBACnF,MAA+D,CAA/DK,aAA+DgB;QAA9Cd,IAAI,EAAC,WAAW;QAACe,KAAK,EAAC;UACxCjB,aAAwDgB;QAAvCE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCnB,aAA0DgB;QAAzCE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCnB,aAAgEgB;QAA/CE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;;mEAGrCtC,oBAIM,OAJNuC,UAIM,GAHJpB,aAAyEC;MAA/DK,MAAM,EAAC,SAAS;MAAEC,OAAK,EAAEZ;;wBAAyB,MAAE,kBAAF,IAAE;;oCAC9CG,kBAAW,2BAA3BV,aAAoGa;;MAA9DC,IAAI,EAAC,SAAS;MAAEK,OAAK,EAAEZ;;wBAA0B,MAAE,kBAAF,IAAE;;qDACzFP,aAAgFa;;MAA/DC,IAAI,EAAC,SAAS;MAAEK,OAAK,EAAEZ;;wBAA2B,MAAE,kBAAF,IAAE","names":["class","style","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","inputError","$data","_Fragment","tag","_createBlock","_component_a_tag","key","name","color","closable","onClose","$options","onKeyup","onBlur","$props","_hoisted_3","_createVNode","_component_a_button","type","size","plain","circle","status","onClick","_component_el_dialog","title","draggable","_hoisted_4","_component_el_table","ref","data","onSelectionChange","_component_el_table_column","width","label","prop","_hoisted_5"],"sourceRoot":"","sources":["/Users/elmo/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  <div>\n    <!--<p class=\"text-red-500\">{{ tags }}</p>-->\n    <div class=\"flex w-full items-center\">\n      <div v-show=\"tagsInput === true\" class=\"relative w-full\">\n        <div class=\"flex h-8 flex-1 items-center space-x-2 rounded border border-gray-200 bg-white px-4 hover:border-gray-300\" :class=\"{ inputError: validateState === 'error' }\">\n          <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable @close=\"handleClose(tag)\">{{ tag.name }}</a-tag>\n          <input v-show=\"allowCreate === true\" v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" @blur=\"handleInputConfirm\" />\n        </div>\n        <p v-show=\"validateState === 'error'\" class=\"absolute text-red-500\" style=\"bottom: -20px\">請選擇對象</p>\n      </div>\n      <a-button :type=\"type\" :size=\"size\" :plain=\"plain\" :circle=\"circle\" :status=\"status\" @click=\"edit_countersign\">選擇</a-button>\n    </div>\n    <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n      <div class=\"flax mb-5 space-x-4\">\n        <el-table ref=\"memberTables\" :data=\"memberList\" @selection-change=\"select\" :row-key=\"getRowKeys\">\n          <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n          <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n          <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n          <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n        </el-table>\n      </div>\n      <div class=\"flex w-full items-center justify-center space-x-2\">\n        <a-button status=\"primary\" @click=\"memberListDialog_Cancel\">取消</a-button>\n        <a-button v-if=\"rulesOption === true\" type=\"primary\" @click=\"memberListDialog_Confirm\">確定</a-button>\n        <a-button v-else type=\"primary\" @click=\"memberListDialog_Confirm2\">確定</a-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {},\n  props: {\n    status: {\n      type: String,\n      default: null,\n    },\n    circle: {\n      type: String,\n      default: null,\n    },\n    plain: {\n      type: String,\n      default: null,\n    },\n    size: {\n      type: String,\n      default: null,\n    },\n    type: {\n      type: String,\n      default: null,\n    },\n    // 可新增\n    allowCreate: {\n      type: Boolean,\n      default: true,\n    },\n    // 輸入欄位\n    tagsInput: {\n      type: Boolean,\n      default: true,\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true,\n    },\n    //內容\n    tagsValue: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tags: this.tagsValue,\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n      validateState: \"success\",\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n        //object中新增數值\n        /*for (let stage of this.memberList) {\n          Object.assign(stage, { isSelected: false });\n        }*/\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n      console.log(this.selectTags);\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.$refs.memberTables.clearSelection();\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員(驗證)\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm2() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      const rows = this.tags;\n      this.$emit(\"sand-form\", rows);\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n    },\n\n    // 刪除tag\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n      this.selectTags.splice(this.tags.indexOf(tag), 1);\n    },\n    // input輸入\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n\n    getRowKeys(row) {\n      return row.id;\n    },\n\n    test() {\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.memberTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n  },\n  mounted() {\n    this.getApi();\n    this.test();\n  },\n  created() {},\n};\n</script>\n\n<style scoped lang=\"scss\">\n.inputError {\n  border: #f56c6c 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}