{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flax mb-5 space-x-4\"\n};\nconst _hoisted_2 = {\n  class: \"flex w-full items-center justify-center space-x-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<el-dialog title=\\\"選擇人員\\\" draggable>\\n    <div class=\\\"flax space-x-4\\\">\\n      <div class=\\\"\\\"></div>\\n      <el-table :data=\\\"memberList\\\" ref=\\\"multipleTable\\\" @selection-change=\\\"select\\\">\\n        <el-table-column type=\\\"selection\\\" width=\\\"50\\\"></el-table-column>\\n        <el-table-column label=\\\"編號\\\" prop=\\\"id\\\"></el-table-column>\\n        <el-table-column label=\\\"姓名\\\" prop=\\\"name\\\"></el-table-column>\\n        <el-table-column label=\\\"部門\\\" prop=\\\"department\\\"></el-table-column>\\n      </el-table>\\n    </div>\\n\\n    &lt;!&ndash;    <el-input v-model=\\\"searchText\\\"></el-input>&ndash;&gt;\\n    <el-button @click=\\\"confirmButton\\\">確定</el-button>\\n  </el-dialog>\"), _createVNode(_component_el_dialog, {\n    title: \"選擇人員\",\n    draggable: \"\",\n    \"show-close\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n      ref: \"multipleTables\",\n      data: $data.memberList,\n      onSelectionChange: $options.select\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"編號\",\n        prop: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"姓名\",\n        prop: \"name\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"部門\",\n        prop: \"department\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"])]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_a_button, {\n      status: \"primary\",\n      onClick: $options.cancelButton\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), $data.rules === true ? (_openBlock(), _createBlock(_component_a_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: $options.confirmButton\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_a_button, {\n      key: 1,\n      type: \"primary\",\n      onClick: $options.confirmButton2\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]))])]),\n    _: 1 /* STABLE */\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAiBSA,KAAK,EAAC;AAAqB;;EAS3BA,KAAK,EAAC;AAAmD;;;;;;6DAzBhEC,srBAae,EAEfC,aAeYC;IAfDC,KAAK,EAAC,MAAM;IAACC,SAAS,EAAT,EAAS;IAAE,YAAU,EAAE;;sBAC7C,MAOM,CAPNC,oBAOM,OAPNC,UAOM,GANJL,aAKWM;MALDC,GAAG,EAAC,gBAAgB;MAAEC,IAAI,EAAEC,gBAAU;MAAGC,iBAAgB,EAAEC;;wBACnE,MAA+D,CAA/DX,aAA+DY;QAA9CC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC;UACxCd,aAAwDY;QAAvCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjChB,aAA0DY;QAAzCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjChB,aAAgEY;QAA/CG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;;wDAIrCZ,oBAIM,OAJNa,UAIM,GAHJjB,aAA8DkB;MAApDC,MAAM,EAAC,SAAS;MAAEC,OAAK,EAAET;;wBAAc,MAAE,kBAAF,IAAE;;oCACnCF,WAAK,2BAArBY,aAAmFH;;MAAnDL,IAAI,EAAC,SAAS;MAAEO,OAAK,EAAET;;wBAAe,MAAE,kBAAF,IAAE;;qDACxEU,aAAqEH;;MAApDL,IAAI,EAAC,SAAS;MAAEO,OAAK,EAAET;;wBAAgB,MAAE,kBAAF,IAAE","names":["class","_createCommentVNode","_createVNode","_component_el_dialog","title","draggable","_createElementVNode","_hoisted_1","_component_el_table","ref","data","$data","onSelectionChange","$options","_component_el_table_column","type","width","label","prop","_hoisted_2","_component_a_button","status","onClick","_createBlock"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-dialog title=\"選擇人員\" draggable :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button v-if=\"rules === true\" type=\"primary\" @click=\"confirmButton\">確定</a-button>\n      <a-button v-else type=\"primary\" @click=\"confirmButton2\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    isSingel: {\n      type: Boolean,\n      default: false,\n    },\n    // 驗證\n    rulesOption: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  // emits: [\"selected-user\"],\n  /*setup(props, { emit }) {\n    // 选择用户\n    const setSelectRows = (selection) => {\n      // 单选\n      if (props.isSingel) {\n        if (selection.length > 1) {\n          const del_row = selection.shift();\n          state.table.toggleRowSelection(del_row, false); //设置这一行取消选中\n        }\n      }\n      // 多选\n      state.selectRows = selection;\n    };\n\n    // 打开弹框\n    const showModel = () => {\n      state.dialogFormVisible = true;\n    };\n\n    // 关闭弹框\n    const close = () => {\n      state.dialogFormVisible = false;\n    };\n\n    // 保存选择的用户\n    const save = () => {\n      emit(\"selected-user\", state.selectRows); // 派发事件，具体逻辑在父组件中实现\n      close();\n    };\n\n    return {\n      ...toRefs(state),\n      setSelectRows,\n      showModel,\n      close,\n      save,\n    };\n  },*/\n  data() {\n    return {\n      rules: this.rulesOption,\n      memberList: [],\n      search: this.value,\n      checkedDetail: [],\n    };\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    // table選擇框\n    select(rows) {\n      this.checkedDetail = rows;\n      this.$emit(\"selected-user\", rows);\n    },\n    // 確認按鈕(驗證)\n    confirmButton() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** 驗證 */\n      if (this.tags.length === 0) {\n        this.validateState = \"error\";\n      } else {\n        this.validateState = \"success\";\n        const rows = this.tags;\n        this.$emit(\"sand-form\", rows);\n      }\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 確認按鈕\n    confirmButton2() {\n      let val = this.checkedDetail;\n      this.search = val;\n      this.$emit(\"submitPopupData\", \"update:modelValue\", val);\n\n      /** Table回顯 */\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      /* this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });*/\n    },\n  },\n  watch: {\n    /*multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    },*/\n  },\n  computed: {\n    /*dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      },\n    },*/\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}