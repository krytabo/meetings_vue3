{"ast":null,"code":"import { onMounted, onBeforeUnmount } from 'vue';\nimport { isBrowser } from './utils';\nlet fontsReady;\nlet isFontReady;\nconst init = () => {\n  var _a, _b;\n  fontsReady = isBrowser ? (_b = (_a = document) === null || _a === void 0 ? void 0 : _a.fonts) === null || _b === void 0 ? void 0 : _b.ready : undefined;\n  isFontReady = false;\n  /* istanbul ignore if */\n  if (fontsReady !== undefined) {\n    void fontsReady.then(() => {\n      isFontReady = true;\n    });\n  } else {\n    isFontReady = true;\n  }\n};\ninit();\n// For testing\nexport { init };\n/**\n * Call callback on fontsReady is resolved. If fontsReady is already resolved,\n * callback won't be called.\n */\nexport default function onFontsReady(cb) {\n  /* istanbul ignore next */\n  if (isFontReady) return;\n  let deactivated = false;\n  onMounted(() => {\n    /* istanbul ignore next */\n    if (!isFontReady) {\n      fontsReady === null || fontsReady === void 0 ? void 0 : fontsReady.then(() => {\n        if (deactivated) return;\n        cb();\n      });\n    }\n  });\n  onBeforeUnmount(() => {\n    deactivated = true;\n  });\n}","map":{"version":3,"names":["onMounted","onBeforeUnmount","isBrowser","fontsReady","isFontReady","init","_a","_b","document","fonts","ready","undefined","then","onFontsReady","cb","deactivated"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/vooks/es/on-fonts-ready.js"],"sourcesContent":["import { onMounted, onBeforeUnmount } from 'vue';\nimport { isBrowser } from './utils';\nlet fontsReady;\nlet isFontReady;\nconst init = () => {\n    var _a, _b;\n    fontsReady = isBrowser ? (_b = (_a = document) === null || _a === void 0 ? void 0 : _a.fonts) === null || _b === void 0 ? void 0 : _b.ready : undefined;\n    isFontReady = false;\n    /* istanbul ignore if */\n    if (fontsReady !== undefined) {\n        void fontsReady.then(() => {\n            isFontReady = true;\n        });\n    }\n    else {\n        isFontReady = true;\n    }\n};\ninit();\n// For testing\nexport { init };\n/**\n * Call callback on fontsReady is resolved. If fontsReady is already resolved,\n * callback won't be called.\n */\nexport default function onFontsReady(cb) {\n    /* istanbul ignore next */\n    if (isFontReady)\n        return;\n    let deactivated = false;\n    onMounted(() => {\n        /* istanbul ignore next */\n        if (!isFontReady) {\n            fontsReady === null || fontsReady === void 0 ? void 0 : fontsReady.then(() => {\n                if (deactivated)\n                    return;\n                cb();\n            });\n        }\n    });\n    onBeforeUnmount(() => {\n        deactivated = true;\n    });\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAChD,SAASC,SAAS,QAAQ,SAAS;AACnC,IAAIC,UAAU;AACd,IAAIC,WAAW;AACf,MAAMC,IAAI,GAAG,MAAM;EACf,IAAIC,EAAE,EAAEC,EAAE;EACVJ,UAAU,GAAGD,SAAS,GAAG,CAACK,EAAE,GAAG,CAACD,EAAE,GAAGE,QAAQ,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,KAAK,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,KAAK,GAAGC,SAAS;EACvJP,WAAW,GAAG,KAAK;EACnB;EACA,IAAID,UAAU,KAAKQ,SAAS,EAAE;IAC1B,KAAKR,UAAU,CAACS,IAAI,CAAC,MAAM;MACvBR,WAAW,GAAG,IAAI;IACtB,CAAC,CAAC;EACN,CAAC,MACI;IACDA,WAAW,GAAG,IAAI;EACtB;AACJ,CAAC;AACDC,IAAI,EAAE;AACN;AACA,SAASA,IAAI;AACb;AACA;AACA;AACA;AACA,eAAe,SAASQ,YAAY,CAACC,EAAE,EAAE;EACrC;EACA,IAAIV,WAAW,EACX;EACJ,IAAIW,WAAW,GAAG,KAAK;EACvBf,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAACI,WAAW,EAAE;MACdD,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACS,IAAI,CAAC,MAAM;QAC1E,IAAIG,WAAW,EACX;QACJD,EAAE,EAAE;MACR,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACFb,eAAe,CAAC,MAAM;IAClBc,WAAW,GAAG,IAAI;EACtB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}