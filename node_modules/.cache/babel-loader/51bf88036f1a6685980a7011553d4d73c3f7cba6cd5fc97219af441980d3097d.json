{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isBrowser } from '../../_utils';\nexport const isImageFileType = type => type.includes('image/');\nconst getExtname = (url = '') => {\n  const temp = url.split('/');\n  const filename = temp[temp.length - 1];\n  const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\nexport const isImageFile = file => {\n  if (file.type) {\n    return isImageFileType(file.type);\n  }\n  const url = file.thumbnailUrl || file.url || '';\n  const extension = getExtname(url);\n  if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n    return true;\n  }\n  if (/^data:/.test(url)) {\n    return false;\n  }\n  if (extension) {\n    return false;\n  }\n  return true;\n};\nexport function createImageDataUrl(file) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield new Promise(resolve => {\n      if (!file.type || !isImageFileType(file.type)) {\n        resolve('');\n        return;\n      }\n      resolve(window.URL.createObjectURL(file));\n    });\n  });\n}\nexport const environmentSupportFile = isBrowser && window.FileReader && window.File;\nexport function isFileSystemDirectoryEntry(item) {\n  return item.isDirectory;\n}\nexport function isFileSystemFileEntry(item) {\n  return item.isFile;\n}\nexport function getFilesFromEntries(entries, directory) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const fileAndEntries = [];\n    let _resolve;\n    let requestCallbackCount = 0;\n    function lock() {\n      requestCallbackCount++;\n    }\n    function unlock() {\n      requestCallbackCount--;\n      if (!requestCallbackCount) {\n        _resolve(fileAndEntries);\n      }\n    }\n    function _getFilesFromEntries(entries) {\n      entries.forEach(entry => {\n        if (!entry) return;\n        lock();\n        if (directory && isFileSystemDirectoryEntry(entry)) {\n          const directoryReader = entry.createReader();\n          lock();\n          directoryReader.readEntries(entries => {\n            _getFilesFromEntries(entries);\n            unlock();\n          }, () => {\n            unlock();\n          });\n        } else if (isFileSystemFileEntry(entry)) {\n          lock();\n          entry.file(file => {\n            fileAndEntries.push({\n              file,\n              entry,\n              source: 'dnd'\n            });\n            unlock();\n          }, () => {\n            unlock();\n          });\n        }\n        unlock();\n      });\n    }\n    yield new Promise(resolve => {\n      _resolve = resolve;\n      _getFilesFromEntries(entries);\n    });\n    return fileAndEntries;\n  });\n}\nexport function createSettledFileInfo(fileInfo) {\n  const {\n    id,\n    name,\n    percentage,\n    status,\n    url,\n    file,\n    thumbnailUrl,\n    type,\n    fullPath,\n    batchId\n  } = fileInfo;\n  return {\n    id,\n    name,\n    percentage: percentage !== null && percentage !== void 0 ? percentage : null,\n    status,\n    url: url !== null && url !== void 0 ? url : null,\n    file: file !== null && file !== void 0 ? file : null,\n    thumbnailUrl: thumbnailUrl !== null && thumbnailUrl !== void 0 ? thumbnailUrl : null,\n    type: type !== null && type !== void 0 ? type : null,\n    fullPath: fullPath !== null && fullPath !== void 0 ? fullPath : null,\n    batchId: batchId !== null && batchId !== void 0 ? batchId : null\n  };\n}\n/**\n * This is a rather simple version. I may fix it later to make it more accurate.\n * I've looked at https://github.com/broofa/mime, however it doesn't has a esm\n * version, so I can't simply use it.\n */\nexport function matchType(name, mimeType, accept) {\n  name = name.toLowerCase();\n  mimeType = mimeType.toLocaleLowerCase();\n  accept = accept.toLocaleLowerCase();\n  const acceptAtoms = accept.split(',').map(acceptAtom => acceptAtom.trim()).filter(Boolean);\n  return acceptAtoms.some(acceptAtom => {\n    if (acceptAtom.startsWith('.')) {\n      // suffix\n      if (name.endsWith(acceptAtom)) return true;\n    } else if (acceptAtom.includes('/')) {\n      // mime type\n      const [type, subtype] = mimeType.split('/');\n      const [acceptType, acceptSubtype] = acceptAtom.split('/');\n      if (acceptType === '*' || type && acceptType && acceptType === type) {\n        if (acceptSubtype === '*' || subtype && acceptSubtype && acceptSubtype === subtype) {\n          return true;\n        }\n      }\n    } else {\n      // invalid type\n      return true;\n    }\n    return false;\n  });\n}\nexport const download = (url, name) => {\n  if (!url) return;\n  const a = document.createElement('a');\n  a.href = url;\n  if (name !== undefined) {\n    a.download = name;\n  }\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isBrowser","isImageFileType","type","includes","getExtname","url","temp","split","filename","length","filenameWithoutSuffix","exec","isImageFile","file","thumbnailUrl","extension","test","createImageDataUrl","window","URL","createObjectURL","environmentSupportFile","FileReader","File","isFileSystemDirectoryEntry","item","isDirectory","isFileSystemFileEntry","isFile","getFilesFromEntries","entries","directory","fileAndEntries","_resolve","requestCallbackCount","lock","unlock","_getFilesFromEntries","forEach","entry","directoryReader","createReader","readEntries","push","source","createSettledFileInfo","fileInfo","id","name","percentage","status","fullPath","batchId","matchType","mimeType","accept","toLowerCase","toLocaleLowerCase","acceptAtoms","map","acceptAtom","trim","filter","Boolean","some","startsWith","endsWith","subtype","acceptType","acceptSubtype","download","a","document","createElement","href","undefined","body","appendChild","click","removeChild"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/upload/src/utils.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isBrowser } from '../../_utils';\nexport const isImageFileType = (type) => type.includes('image/');\nconst getExtname = (url = '') => {\n    const temp = url.split('/');\n    const filename = temp[temp.length - 1];\n    const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n    return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\nexport const isImageFile = (file) => {\n    if (file.type) {\n        return isImageFileType(file.type);\n    }\n    const url = file.thumbnailUrl || file.url || '';\n    const extension = getExtname(url);\n    if (/^data:image\\//.test(url) ||\n        /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n        return true;\n    }\n    if (/^data:/.test(url)) {\n        return false;\n    }\n    if (extension) {\n        return false;\n    }\n    return true;\n};\nexport function createImageDataUrl(file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => {\n            if (!file.type || !isImageFileType(file.type)) {\n                resolve('');\n                return;\n            }\n            resolve(window.URL.createObjectURL(file));\n        });\n    });\n}\nexport const environmentSupportFile = isBrowser && window.FileReader && window.File;\nexport function isFileSystemDirectoryEntry(item) {\n    return item.isDirectory;\n}\nexport function isFileSystemFileEntry(item) {\n    return item.isFile;\n}\nexport function getFilesFromEntries(entries, directory) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fileAndEntries = [];\n        let _resolve;\n        let requestCallbackCount = 0;\n        function lock() {\n            requestCallbackCount++;\n        }\n        function unlock() {\n            requestCallbackCount--;\n            if (!requestCallbackCount) {\n                _resolve(fileAndEntries);\n            }\n        }\n        function _getFilesFromEntries(entries) {\n            entries.forEach((entry) => {\n                if (!entry)\n                    return;\n                lock();\n                if (directory && isFileSystemDirectoryEntry(entry)) {\n                    const directoryReader = entry.createReader();\n                    lock();\n                    directoryReader.readEntries((entries) => {\n                        _getFilesFromEntries(entries);\n                        unlock();\n                    }, () => {\n                        unlock();\n                    });\n                }\n                else if (isFileSystemFileEntry(entry)) {\n                    lock();\n                    entry.file((file) => {\n                        fileAndEntries.push({ file, entry, source: 'dnd' });\n                        unlock();\n                    }, () => {\n                        unlock();\n                    });\n                }\n                unlock();\n            });\n        }\n        yield new Promise((resolve) => {\n            _resolve = resolve;\n            _getFilesFromEntries(entries);\n        });\n        return fileAndEntries;\n    });\n}\nexport function createSettledFileInfo(fileInfo) {\n    const { id, name, percentage, status, url, file, thumbnailUrl, type, fullPath, batchId } = fileInfo;\n    return {\n        id,\n        name,\n        percentage: percentage !== null && percentage !== void 0 ? percentage : null,\n        status,\n        url: url !== null && url !== void 0 ? url : null,\n        file: file !== null && file !== void 0 ? file : null,\n        thumbnailUrl: thumbnailUrl !== null && thumbnailUrl !== void 0 ? thumbnailUrl : null,\n        type: type !== null && type !== void 0 ? type : null,\n        fullPath: fullPath !== null && fullPath !== void 0 ? fullPath : null,\n        batchId: batchId !== null && batchId !== void 0 ? batchId : null\n    };\n}\n/**\n * This is a rather simple version. I may fix it later to make it more accurate.\n * I've looked at https://github.com/broofa/mime, however it doesn't has a esm\n * version, so I can't simply use it.\n */\nexport function matchType(name, mimeType, accept) {\n    name = name.toLowerCase();\n    mimeType = mimeType.toLocaleLowerCase();\n    accept = accept.toLocaleLowerCase();\n    const acceptAtoms = accept\n        .split(',')\n        .map((acceptAtom) => acceptAtom.trim())\n        .filter(Boolean);\n    return acceptAtoms.some((acceptAtom) => {\n        if (acceptAtom.startsWith('.')) {\n            // suffix\n            if (name.endsWith(acceptAtom))\n                return true;\n        }\n        else if (acceptAtom.includes('/')) {\n            // mime type\n            const [type, subtype] = mimeType.split('/');\n            const [acceptType, acceptSubtype] = acceptAtom.split('/');\n            if (acceptType === '*' || (type && acceptType && acceptType === type)) {\n                if (acceptSubtype === '*' ||\n                    (subtype && acceptSubtype && acceptSubtype === subtype)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            // invalid type\n            return true;\n        }\n        return false;\n    });\n}\nexport const download = (url, name) => {\n    if (!url)\n        return;\n    const a = document.createElement('a');\n    a.href = url;\n    if (name !== undefined) {\n        a.download = name;\n    }\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}