{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flax mb-5 space-x-4\"\n};\nconst _hoisted_2 = {\n  class: \"flex w-full items-center justify-center space-x-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    title: \"選擇人員\",\n    draggable: \"\",\n    \"show-close\": false,\n    modelValue: $options.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n      ref: \"multipleTables\",\n      data: $data.memberList,\n      onSelectionChange: $options.select\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"編號\",\n        prop: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"姓名\",\n        prop: \"name\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"部門\",\n        prop: \"department\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"])]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_a_button, {\n      status: \"primary\",\n      onClick: $options.memberListDialog_Cance\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $options.childClick\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAqB;;EAS3BA,KAAK,EAAC;AAAmD;;;;;;uBAVhEC,aAcYC;IAdDC,KAAK,EAAC,MAAM;IAACC,SAAS,EAAT,EAAS;IAAE,YAAU,EAAE,KAAK;gBAAWC,sBAAa;+DAAbA,sBAAa;;sBAC1E,MAOM,CAPNC,oBAOM,OAPNC,UAOM,GANJC,aAKWC;MALDC,GAAG,EAAC,gBAAgB;MAAEC,IAAI,EAAEC,gBAAU;MAAGC,iBAAgB,EAAER;;wBACnE,MAA+D,CAA/DG,aAA+DM;QAA9CC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC;UACxCR,aAAwDM;QAAvCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCV,aAA0DM;QAAzCG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCV,aAAgEM;QAA/CG,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;;wDAIrCZ,oBAGM,OAHNa,UAGM,GAFJX,aAAwEY;MAA9DC,MAAM,EAAC,SAAS;MAAEC,OAAK,EAAEjB;;wBAAwB,MAAE,kBAAF,IAAE;;oCAC7DG,aAA0DY;MAAhDL,IAAI,EAAC,SAAS;MAAEO,OAAK,EAAEjB;;wBAAY,MAAE,kBAAF,IAAE","names":["class","_createBlock","_component_el_dialog","title","draggable","$options","_createElementVNode","_hoisted_1","_createVNode","_component_el_table","ref","data","$data","onSelectionChange","_component_el_table_column","type","width","label","prop","_hoisted_2","_component_a_button","status","onClick"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <el-dialog title=\"選擇人員\" draggable :show-close=\"false\" v-model=\"dialogVisible\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"memberListDialog_Cance\">取消</a-button>\n      <a-button type=\"primary\" @click=\"childClick\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    inputName: String,\n    modelValue: {\n      type: String,\n      default: \"\",\n    },\n    dialogFlag: {\n      default: false,\n    },\n    //窗口可见状态\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      dialog: this.dialogFlag,\n      searchText: this.inputName,\n      memberList: [],\n      selected: null,\n      editForm: {\n        id: \"\",\n        countersign: \"\",\n      }, //選擇員工待存區\n    };\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"update:visble\", val);\n      },\n    },\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    childClick() {\n      this.$emit(\"childByValue\", this.searchText);\n    },\n    select(rows) {\n      this.searchText = rows;\n    },\n    selectAll(rows) {\n      this.searchText = rows;\n    },\n    sendSearch(e) {\n      this.$emit(\"update:modelValue\", e);\n      this.searchText = e;\n    },\n    memberListDialog_Cance() {\n      this.dialogVisible = false;\n      this.$emit(\"update:dialogFlag\", false);\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n  },\n  watch: {\n    multipleTable() {\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n\n      /* this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });*/\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}