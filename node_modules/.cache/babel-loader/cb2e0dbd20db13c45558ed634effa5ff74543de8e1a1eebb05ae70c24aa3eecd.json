{"ast":null,"code":"import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from '../../_utils/env/browser';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyInputValue, useCursor } from './utils';\nimport WordCount from './WordCount';\nimport style, { safariStyle } from './styles/input.cssr';\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  placeholder: [Array, String],\n  defaultValue: {\n    type: [String, Array],\n    default: null\n  },\n  value: [String, Array],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  rows: {\n    type: [Number, String],\n    default: 3\n  },\n  round: Boolean,\n  minlength: [String, Number],\n  maxlength: [String, Number],\n  clearable: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    default: false\n  },\n  pair: Boolean,\n  separator: String,\n  readonly: {\n    type: [String, Boolean],\n    default: false\n  },\n  passivelyActivated: Boolean,\n  showPasswordOn: String,\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  autofocus: Boolean,\n  inputProps: Object,\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  showCount: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  allowInput: Function,\n  renderCount: Function,\n  onMousedown: Function,\n  onKeydown: Function,\n  onKeyup: Function,\n  onInput: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClick: [Function, Array],\n  onChange: [Function, Array],\n  onClear: [Function, Array],\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  /** private */\n  textDecoration: [String, Array],\n  attrSize: {\n    type: Number,\n    default: 20\n  },\n  onInputBlur: [Function, Array],\n  onInputFocus: [Function, Array],\n  onDeactivate: [Function, Array],\n  onActivate: [Function, Array],\n  onWrapperFocus: [Function, Array],\n  onWrapperBlur: [Function, Array],\n  internalDeactivateOnEnter: Boolean,\n  internalForceFocus: Boolean,\n  internalLoadingBeforeSuffix: Boolean,\n  /** deprecated */\n  showPasswordToggle: Boolean\n});\nexport default defineComponent({\n  name: 'Input',\n  props: inputProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.showPasswordToggle) {\n          warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n        }\n      });\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n    if (isSafari) {\n      useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n    }\n    // dom refs\n    const wrapperElRef = ref(null);\n    const textareaElRef = ref(null);\n    const textareaMirrorElRef = ref(null);\n    const inputMirrorElRef = ref(null);\n    const inputElRef = ref(null);\n    const inputEl2Ref = ref(null);\n    const currentFocusedInputRef = ref(null);\n    const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n    const textareaScrollbarInstRef = ref(null);\n    // local\n    const {\n      localeRef\n    } = useLocale('Input');\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    // form-item\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // states\n    const focusedRef = ref(false);\n    const hoverRef = ref(false);\n    const isComposingRef = ref(false);\n    const activatedRef = ref(false);\n    let syncSource = null;\n    // placeholder\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder,\n        pair\n      } = props;\n      if (pair) {\n        if (Array.isArray(placeholder)) {\n          return placeholder;\n        } else if (placeholder === undefined) {\n          return ['', ''];\n        }\n        return [placeholder, placeholder];\n      } else if (placeholder === undefined) {\n        return [localeRef.value.placeholder];\n      } else {\n        return [placeholder];\n      }\n    });\n    const showPlaceholder1Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0])) && mergedPlaceholder[0];\n    });\n    const showPlaceholder2Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && mergedPlaceholder[1] && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]));\n    });\n    // focus\n    const mergedFocusRef = useMemo(() => {\n      return props.internalForceFocus || focusedRef.value;\n    });\n    // clear\n    const showClearButton = useMemo(() => {\n      if (mergedDisabledRef.value || props.readonly || !props.clearable || !mergedFocusRef.value && !hoverRef.value) {\n        return false;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedFocus\n      } = mergedFocusRef;\n      if (props.pair) {\n        return !!(Array.isArray(mergedValue) && (mergedValue[0] || mergedValue[1])) && (hoverRef.value || mergedFocus);\n      } else {\n        return !!mergedValue && (hoverRef.value || mergedFocus);\n      }\n    });\n    // passwordVisible\n    const mergedShowPasswordOnRef = computed(() => {\n      const {\n        showPasswordOn\n      } = props;\n      if (showPasswordOn) {\n        return showPasswordOn;\n      }\n      if (props.showPasswordToggle) return 'click';\n      return undefined;\n    });\n    const passwordVisibleRef = ref(false);\n    // text-decoration\n    const textDecorationStyleRef = computed(() => {\n      const {\n        textDecoration\n      } = props;\n      if (!textDecoration) return ['', ''];\n      if (Array.isArray(textDecoration)) {\n        return textDecoration.map(v => ({\n          textDecoration: v\n        }));\n      }\n      return [{\n        textDecoration\n      }];\n    });\n    const textAreaScrollContainerWidthRef = ref(undefined);\n    // textarea autosize\n    const updateTextAreaStyle = () => {\n      var _a, _b;\n      if (props.type === 'textarea') {\n        const {\n          autosize\n        } = props;\n        if (autosize) {\n          textAreaScrollContainerWidthRef.value = (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        }\n        if (!textareaElRef.value) return;\n        if (typeof autosize === 'boolean') return;\n        const {\n          paddingTop: stylePaddingTop,\n          paddingBottom: stylePaddingBottom,\n          lineHeight: styleLineHeight\n        } = window.getComputedStyle(textareaElRef.value);\n        const paddingTop = Number(stylePaddingTop.slice(0, -2));\n        const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n        const lineHeight = Number(styleLineHeight.slice(0, -2));\n        const {\n          value: textareaMirrorEl\n        } = textareaMirrorElRef;\n        if (!textareaMirrorEl) return;\n        if (autosize.minRows) {\n          const minRows = Math.max(autosize.minRows, 1);\n          const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n          textareaMirrorEl.style.minHeight = styleMinHeight;\n        }\n        if (autosize.maxRows) {\n          const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n          textareaMirrorEl.style.maxHeight = styleMaxHeight;\n        }\n      }\n    };\n    // word count\n    const maxlengthRef = computed(() => {\n      const {\n        maxlength\n      } = props;\n      return maxlength === undefined ? undefined : Number(maxlength);\n    });\n    onMounted(() => {\n      // sync mirror if is not pair\n      const {\n        value\n      } = mergedValueRef;\n      if (!Array.isArray(value)) {\n        syncMirror(value);\n      }\n    });\n    // other methods\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const vm = getCurrentInstance().proxy;\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onInput\n      } = props;\n      const {\n        nTriggerFormInput\n      } = formItem;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onInput) call(onInput, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n    }\n    function doChange(value) {\n      const {\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doUpdateValueBlur(e) {\n      const {\n        onInputBlur\n      } = props;\n      if (onInputBlur) call(onInputBlur, e);\n    }\n    function doUpdateValueFocus(e) {\n      const {\n        onInputFocus\n      } = props;\n      if (onInputFocus) call(onInputFocus, e);\n    }\n    function doDeactivate() {\n      const {\n        onDeactivate\n      } = props;\n      if (onDeactivate) call(onDeactivate);\n    }\n    function doActivate() {\n      const {\n        onActivate\n      } = props;\n      if (onActivate) call(onActivate);\n    }\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) call(onClick, e);\n    }\n    function doWrapperFocus(e) {\n      const {\n        onWrapperFocus\n      } = props;\n      if (onWrapperFocus) call(onWrapperFocus, e);\n    }\n    function doWrapperBlur(e) {\n      const {\n        onWrapperBlur\n      } = props;\n      if (onWrapperBlur) call(onWrapperBlur, e);\n    }\n    // methods\n    function handleCompositionStart() {\n      isComposingRef.value = true;\n    }\n    function handleCompositionEnd(e) {\n      isComposingRef.value = false;\n      if (e.target === inputEl2Ref.value) {\n        handleInput(e, 1);\n      } else {\n        handleInput(e, 0);\n      }\n    }\n    function handleInput(e, index = 0, event = 'input') {\n      const targetValue = e.target.value;\n      syncMirror(targetValue);\n      if (e instanceof InputEvent && !e.isComposing) {\n        isComposingRef.value = false;\n      }\n      if (props.type === 'textarea') {\n        const {\n          value: textareaScrollbarInst\n        } = textareaScrollbarInstRef;\n        if (textareaScrollbarInst) {\n          textareaScrollbarInst.syncUnifiedContainer();\n        }\n      }\n      syncSource = targetValue;\n      if (isComposingRef.value) return;\n      focusedInputCursorControl.recordCursor();\n      const isIncomingValueValid = allowInput(targetValue);\n      if (isIncomingValueValid) {\n        if (!props.pair) {\n          event === 'input' ? doUpdateValue(targetValue) : doChange(targetValue);\n        } else {\n          let {\n            value\n          } = mergedValueRef;\n          if (!Array.isArray(value)) {\n            value = ['', ''];\n          } else {\n            value = [value[0], value[1]];\n          }\n          value[index] = targetValue;\n          event === 'input' ? doUpdateValue(value) : doChange(value);\n        }\n      }\n      // force update to sync input's view with value\n      // if not set, after input, input value won't sync with dom input value\n      vm.$forceUpdate();\n      if (!isIncomingValueValid) {\n        void nextTick(focusedInputCursorControl.restoreCursor);\n      }\n    }\n    function allowInput(value) {\n      const {\n        allowInput\n      } = props;\n      if (typeof allowInput === 'function') {\n        return allowInput(value);\n      }\n      return true;\n    }\n    function handleInputBlur(e) {\n      doUpdateValueBlur(e);\n      if (e.relatedTarget === wrapperElRef.value) {\n        doDeactivate();\n      }\n      if (!(e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value))) {\n        activatedRef.value = false;\n      }\n      dealWithEvent(e, 'blur');\n      currentFocusedInputRef.value = null;\n    }\n    function handleInputFocus(e, index) {\n      doUpdateValueFocus(e);\n      focusedRef.value = true;\n      activatedRef.value = true;\n      doActivate();\n      dealWithEvent(e, 'focus');\n      if (index === 0) {\n        currentFocusedInputRef.value = inputElRef.value;\n      } else if (index === 1) {\n        currentFocusedInputRef.value = inputEl2Ref.value;\n      } else if (index === 2) {\n        currentFocusedInputRef.value = textareaElRef.value;\n      }\n    }\n    function handleWrapperBlur(e) {\n      if (props.passivelyActivated) {\n        doWrapperBlur(e);\n        dealWithEvent(e, 'blur');\n      }\n    }\n    function handleWrapperFocus(e) {\n      if (props.passivelyActivated) {\n        focusedRef.value = true;\n        doWrapperFocus(e);\n        dealWithEvent(e, 'focus');\n      }\n    }\n    function dealWithEvent(e, type) {\n      if (e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value || e.relatedTarget === wrapperElRef.value)) {\n        /**\n         * activeElement transfer inside the input, do nothing\n         */\n      } else {\n        if (type === 'focus') {\n          doFocus(e);\n          focusedRef.value = true;\n        } else if (type === 'blur') {\n          doBlur(e);\n          focusedRef.value = false;\n        }\n      }\n    }\n    function handleChange(e, index) {\n      handleInput(e, index, 'change');\n    }\n    function handleClick(e) {\n      doClick(e);\n    }\n    function handleClear(e) {\n      doClear(e);\n      if (props.pair) {\n        doUpdateValue(['', '']);\n        doChange(['', '']);\n      } else {\n        doUpdateValue('');\n        doChange('');\n      }\n    }\n    function handleMouseDown(e) {\n      const {\n        onMousedown\n      } = props;\n      if (onMousedown) onMousedown(e);\n      const {\n        tagName\n      } = e.target;\n      if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n        if (props.resizable) {\n          const {\n            value: wrapperEl\n          } = wrapperElRef;\n          if (wrapperEl) {\n            const {\n              left,\n              top,\n              width,\n              height\n            } = wrapperEl.getBoundingClientRect();\n            const resizeHandleSize = 14;\n            if (left + width - resizeHandleSize < e.clientX && e.clientX < left + width && top + height - resizeHandleSize < e.clientY && e.clientY < top + height) {\n              // touching resize handle, just let it go.\n              // resize won't take focus, maybe there is a better way to do this.\n              // hope someone can figure out a better solution\n              return;\n            }\n          }\n        }\n        e.preventDefault();\n        if (!focusedRef.value) {\n          focus();\n        }\n      }\n    }\n    function handleMouseEnter() {\n      var _a;\n      hoverRef.value = true;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n      }\n    }\n    function handleMouseLeave() {\n      var _a;\n      hoverRef.value = false;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n      }\n    }\n    function handlePasswordToggleClick() {\n      if (mergedDisabledRef.value) return;\n      if (mergedShowPasswordOnRef.value !== 'click') return;\n      passwordVisibleRef.value = !passwordVisibleRef.value;\n    }\n    function handlePasswordToggleMousedown(e) {\n      if (mergedDisabledRef.value) return;\n      e.preventDefault();\n      const preventDefaultOnce = e => {\n        e.preventDefault();\n        off('mouseup', document, preventDefaultOnce);\n      };\n      on('mouseup', document, preventDefaultOnce);\n      if (mergedShowPasswordOnRef.value !== 'mousedown') return;\n      passwordVisibleRef.value = true;\n      const hidePassword = () => {\n        passwordVisibleRef.value = false;\n        off('mouseup', document, hidePassword);\n      };\n      on('mouseup', document, hidePassword);\n    }\n    function handleWrapperKeydown(e) {\n      var _a;\n      (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      switch (e.key) {\n        case 'Escape':\n          handleWrapperKeydownEsc();\n          break;\n        case 'Enter':\n          handleWrapperKeydownEnter(e);\n          break;\n      }\n    }\n    function handleWrapperKeydownEnter(e) {\n      var _a, _b;\n      if (props.passivelyActivated) {\n        const {\n          value: focused\n        } = activatedRef;\n        if (focused) {\n          if (props.internalDeactivateOnEnter) {\n            handleWrapperKeydownEsc();\n          }\n          return;\n        }\n        e.preventDefault();\n        if (props.type === 'textarea') {\n          (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n      }\n    }\n    function handleWrapperKeydownEsc() {\n      if (props.passivelyActivated) {\n        activatedRef.value = false;\n        void nextTick(() => {\n          var _a;\n          (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        });\n      }\n    }\n    function focus() {\n      var _a, _b, _c;\n      if (mergedDisabledRef.value) return;\n      if (props.passivelyActivated) {\n        (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n    function blur() {\n      var _a;\n      if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n        ;\n        document.activeElement.blur();\n      }\n    }\n    function select() {\n      var _a, _b;\n      (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n    }\n    function activate() {\n      if (mergedDisabledRef.value) return;\n      if (textareaElRef.value) textareaElRef.value.focus();else if (inputElRef.value) inputElRef.value.focus();\n    }\n    function deactivate() {\n      const {\n        value: wrapperEl\n      } = wrapperElRef;\n      if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) && wrapperEl !== document.activeElement) {\n        handleWrapperKeydownEsc();\n      }\n    }\n    function scrollTo(options) {\n      if (props.type === 'textarea') {\n        const {\n          value: textareaEl\n        } = textareaElRef;\n        textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n      } else {\n        const {\n          value: inputEl\n        } = inputElRef;\n        inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n      }\n    }\n    function syncMirror(value) {\n      const {\n        type,\n        pair,\n        autosize\n      } = props;\n      if (!pair && autosize) {\n        if (type === 'textarea') {\n          const {\n            value: textareaMirrorEl\n          } = textareaMirrorElRef;\n          if (textareaMirrorEl) {\n            textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n          }\n        } else {\n          const {\n            value: inputMirrorEl\n          } = inputMirrorElRef;\n          if (inputMirrorEl) {\n            if (value) {\n              inputMirrorEl.textContent = value;\n            } else {\n              inputMirrorEl.innerHTML = '&nbsp;';\n            }\n          }\n        }\n      }\n    }\n    function handleTextAreaMirrorResize() {\n      updateTextAreaStyle();\n    }\n    const placeholderStyleRef = ref({\n      top: '0'\n    });\n    function handleTextAreaScroll(e) {\n      var _a;\n      const {\n        scrollTop\n      } = e.target;\n      placeholderStyleRef.value.top = `${-scrollTop}px`;\n      (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n    }\n    let stopWatchMergedValue1 = null;\n    watchEffect(() => {\n      const {\n        autosize,\n        type\n      } = props;\n      if (autosize && type === 'textarea') {\n        stopWatchMergedValue1 = watch(mergedValueRef, value => {\n          if (!Array.isArray(value) && value !== syncSource) {\n            syncMirror(value);\n          }\n        });\n      } else {\n        stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n      }\n    });\n    let stopWatchMergedValue2 = null;\n    watchEffect(() => {\n      if (props.type === 'textarea') {\n        stopWatchMergedValue2 = watch(mergedValueRef, value => {\n          var _a;\n          if (!Array.isArray(value) && value !== syncSource) {\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n          }\n        });\n      } else {\n        stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n      }\n    });\n    provide(inputInjectionKey, {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef\n    });\n    const exposedProps = {\n      wrapperElRef,\n      inputElRef,\n      textareaElRef,\n      isCompositing: isComposingRef,\n      focus,\n      blur,\n      select,\n      deactivate,\n      activate,\n      scrollTo\n    };\n    const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          borderRadius,\n          textColor,\n          caretColor,\n          caretColorError,\n          caretColorWarning,\n          textDecorationColor,\n          border,\n          borderDisabled,\n          borderHover,\n          borderFocus,\n          placeholderColor,\n          placeholderColorDisabled,\n          lineHeightTextarea,\n          colorDisabled,\n          colorFocus,\n          textColorDisabled,\n          boxShadowFocus,\n          iconSize,\n          colorFocusWarning,\n          boxShadowFocusWarning,\n          borderWarning,\n          borderFocusWarning,\n          borderHoverWarning,\n          colorFocusError,\n          boxShadowFocusError,\n          borderError,\n          borderFocusError,\n          borderHoverError,\n          clearSize,\n          clearColor,\n          clearColorHover,\n          clearColorPressed,\n          iconColor,\n          iconColorDisabled,\n          suffixTextColor,\n          countTextColor,\n          countTextColorDisabled,\n          iconColorHover,\n          iconColorPressed,\n          loadingColor,\n          loadingColorError,\n          loadingColorWarning,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height\n        }\n      } = themeRef.value;\n      const {\n        left: paddingLeft,\n        right: paddingRight\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-count-text-color': countTextColor,\n        '--n-count-text-color-disabled': countTextColorDisabled,\n        '--n-color': color,\n        '--n-font-size': fontSize,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-padding-left': paddingLeft,\n        '--n-padding-right': paddingRight,\n        '--n-text-color': textColor,\n        '--n-caret-color': caretColor,\n        '--n-text-decoration-color': textDecorationColor,\n        '--n-border': border,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-hover': borderHover,\n        '--n-border-focus': borderFocus,\n        '--n-placeholder-color': placeholderColor,\n        '--n-placeholder-color-disabled': placeholderColorDisabled,\n        '--n-icon-size': iconSize,\n        '--n-line-height-textarea': lineHeightTextarea,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-focus': colorFocus,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        // form warning\n        '--n-caret-color-warning': caretColorWarning,\n        '--n-color-focus-warning': colorFocusWarning,\n        '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n        '--n-border-warning': borderWarning,\n        '--n-border-focus-warning': borderFocusWarning,\n        '--n-border-hover-warning': borderHoverWarning,\n        '--n-loading-color-warning': loadingColorWarning,\n        // form error\n        '--n-caret-color-error': caretColorError,\n        '--n-color-focus-error': colorFocusError,\n        '--n-box-shadow-focus-error': boxShadowFocusError,\n        '--n-border-error': borderError,\n        '--n-border-focus-error': borderFocusError,\n        '--n-border-hover-error': borderHoverError,\n        '--n-loading-color-error': loadingColorError,\n        // clear-button\n        '--n-clear-color': clearColor,\n        '--n-clear-size': clearSize,\n        '--n-clear-color-hover': clearColorHover,\n        '--n-clear-color-pressed': clearColorPressed,\n        '--n-icon-color': iconColor,\n        '--n-icon-color-hover': iconColorHover,\n        '--n-icon-color-pressed': iconColorPressed,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-suffix-text-color': suffixTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('input', computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      return size[0];\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedProps), {\n      // DOM ref\n      wrapperElRef,\n      inputElRef,\n      inputMirrorElRef,\n      inputEl2Ref,\n      textareaElRef,\n      textareaMirrorElRef,\n      textareaScrollbarInstRef,\n      // value\n      rtlEnabled: rtlEnabledRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      passwordVisible: passwordVisibleRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      showPlaceholder1: showPlaceholder1Ref,\n      showPlaceholder2: showPlaceholder2Ref,\n      mergedFocus: mergedFocusRef,\n      isComposing: isComposingRef,\n      activated: activatedRef,\n      showClearButton,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      textDecorationStyle: textDecorationStyleRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      mergedShowPasswordOn: mergedShowPasswordOnRef,\n      placeholderStyle: placeholderStyleRef,\n      mergedStatus: mergedStatusRef,\n      textAreaScrollContainerWidth: textAreaScrollContainerWidthRef,\n      // methods\n      handleTextAreaScroll,\n      handleCompositionStart,\n      handleCompositionEnd,\n      handleInput,\n      handleInputBlur,\n      handleInputFocus,\n      handleWrapperBlur,\n      handleWrapperFocus,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      handleChange,\n      handleClick,\n      handleClear,\n      handlePasswordToggleClick,\n      handlePasswordToggleMousedown,\n      handleWrapperKeydown,\n      handleTextAreaMirrorResize,\n      getTextareaScrollContainer: () => {\n        return textareaElRef.value;\n      },\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a, _b;\n    const {\n      mergedClsPrefix,\n      mergedStatus,\n      themeClass,\n      type,\n      onRender\n    } = this;\n    const $slots = this.$slots;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"wrapperElRef\",\n      class: [`${mergedClsPrefix}-input`, themeClass, mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`, {\n        [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n        [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n        [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n        [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n        [`${mergedClsPrefix}-input--pair`]: this.pair,\n        [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n        [`${mergedClsPrefix}-input--stateful`]: this.stateful\n      }],\n      style: this.cssVars,\n      tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated ? 0 : undefined,\n      onFocus: this.handleWrapperFocus,\n      onBlur: this.handleWrapperBlur,\n      onClick: this.handleClick,\n      onMousedown: this.handleMouseDown,\n      onMouseenter: this.handleMouseEnter,\n      onMouseleave: this.handleMouseLeave,\n      onCompositionstart: this.handleCompositionStart,\n      onCompositionend: this.handleCompositionEnd,\n      onKeyup: this.onKeyup,\n      onKeydown: this.handleWrapperKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, resolveWrappedSlot($slots.prefix, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-input__prefix`\n    }, children)), type === 'textarea' ? h(NScrollbar, {\n      ref: \"textareaScrollbarInstRef\",\n      class: `${mergedClsPrefix}-input__textarea`,\n      container: this.getTextareaScrollContainer,\n      triggerDisplayManually: true,\n      useUnifiedContainer: true,\n      internalHoistYRail: true\n    }, {\n      default: () => {\n        var _a, _b;\n        const {\n          textAreaScrollContainerWidth\n        } = this;\n        const scrollContainerWidthStyle = {\n          width: this.autosize && textAreaScrollContainerWidth && `${textAreaScrollContainerWidth}px`\n        };\n        return h(Fragment, null, h(\"textarea\", Object.assign({}, this.inputProps, {\n          ref: \"textareaElRef\",\n          class: [`${mergedClsPrefix}-input__textarea-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n          autofocus: this.autofocus,\n          rows: Number(this.rows),\n          placeholder: this.placeholder,\n          value: this.mergedValue,\n          disabled: this.mergedDisabled,\n          maxlength: this.maxlength,\n          minlength: this.minlength,\n          readonly: this.readonly,\n          tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n          style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style, scrollContainerWidthStyle],\n          onBlur: this.handleInputBlur,\n          onFocus: e => this.handleInputFocus(e, 2),\n          onInput: this.handleInput,\n          onChange: this.handleChange,\n          onScroll: this.handleTextAreaScroll\n        })), this.showPlaceholder1 ? h(\"div\", {\n          class: `${mergedClsPrefix}-input__placeholder`,\n          style: [this.placeholderStyle, scrollContainerWidthStyle],\n          key: \"placeholder\"\n        }, this.mergedPlaceholder[0]) : null, this.autosize ? h(VResizeObserver, {\n          onResize: this.handleTextAreaMirrorResize\n        }, {\n          default: () => h(\"div\", {\n            ref: \"textareaMirrorElRef\",\n            class: `${mergedClsPrefix}-input__textarea-mirror`,\n            key: \"mirror\"\n          })\n        }) : null);\n      }\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", Object.assign({\n      type: type === 'password' && this.mergedShowPasswordOn && this.passwordVisible ? 'text' : type\n    }, this.inputProps, {\n      ref: \"inputElRef\",\n      class: [`${mergedClsPrefix}-input__input-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n      style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style],\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[0],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[0] : this.mergedValue,\n      readonly: this.readonly,\n      autofocus: this.autofocus,\n      size: this.attrSize,\n      onBlur: this.handleInputBlur,\n      onFocus: e => this.handleInputFocus(e, 0),\n      onInput: e => this.handleInput(e, 0),\n      onChange: e => this.handleChange(e, 0)\n    })), this.showPlaceholder1 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[0])) : null, this.autosize ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__input-mirror`,\n      key: \"mirror\",\n      ref: \"inputMirrorElRef\"\n    }, \"\\u00A0\") : null), !this.pair && resolveWrappedSlot($slots.suffix, children => {\n      return children || this.clearable || this.showCount || this.mergedShowPasswordOn || this.loading !== undefined ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [resolveWrappedSlot($slots['clear-icon-placeholder'], children => {\n        return (this.clearable || children) && h(NBaseClear, {\n          clsPrefix: mergedClsPrefix,\n          show: this.showClearButton,\n          onClear: this.handleClear\n        }, {\n          placeholder: () => children,\n          icon: () => {\n            var _a, _b;\n            return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n        });\n      }), !this.internalLoadingBeforeSuffix ? children : null, this.loading !== undefined ? h(NBaseSuffix, {\n        clsPrefix: mergedClsPrefix,\n        loading: this.loading,\n        showArrow: false,\n        showClear: false,\n        style: this.cssVars\n      }) : null, this.internalLoadingBeforeSuffix ? children : null, this.showCount && this.type !== 'textarea' ? h(WordCount, null, {\n        default: props => {\n          var _a;\n          return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n        }\n      }) : null, this.mergedShowPasswordOn && this.type === 'password' ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__eye`,\n        onMousedown: this.handlePasswordToggleMousedown,\n        onClick: this.handlePasswordToggleClick\n      }, this.passwordVisible ? resolveSlot($slots['password-visible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeIcon, null)\n      })]) : resolveSlot($slots['password-invisible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeOffIcon, null)\n      })])) : null]) : null;\n    })), this.pair ? h(\"span\", {\n      class: `${mergedClsPrefix}-input__separator`\n    }, resolveSlot($slots.separator, () => [this.separator])) : null, this.pair ? h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", {\n      ref: \"inputEl2Ref\",\n      type: this.type,\n      class: `${mergedClsPrefix}-input__input-el`,\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[1],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[1] : undefined,\n      readonly: this.readonly,\n      style: this.textDecorationStyle[1],\n      onBlur: this.handleInputBlur,\n      onFocus: e => this.handleInputFocus(e, 1),\n      onInput: e => this.handleInput(e, 1),\n      onChange: e => this.handleChange(e, 1)\n    }), this.showPlaceholder2 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[1])) : null), resolveWrappedSlot($slots.suffix, children => {\n      return (this.clearable || children) && h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [this.clearable && h(NBaseClear, {\n        clsPrefix: mergedClsPrefix,\n        show: this.showClearButton,\n        onClear: this.handleClear\n      }, {\n        icon: () => {\n          var _a;\n          return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        },\n        placeholder: () => {\n          var _a;\n          return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        }\n      }), children]);\n    })) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__border`\n    }) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__state-border`\n    }) : null, this.showCount && type === 'textarea' ? h(WordCount, null, {\n      default: props => {\n        var _a;\n        const {\n          renderCount\n        } = this;\n        if (renderCount) {\n          return renderCount(props);\n        }\n        return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n      }\n    }) : null);\n  }\n});","map":{"version":3,"names":["h","computed","defineComponent","nextTick","ref","toRef","onMounted","getCurrentInstance","watch","watchEffect","provide","Fragment","useMergedState","useMemo","getPadding","VResizeObserver","off","on","isSafari","EyeIcon","EyeOffIcon","useRtl","NBaseClear","NBaseIcon","NBaseSuffix","NScrollbar","useTheme","useLocale","useFormItem","useConfig","useThemeClass","useStyle","call","createKey","resolveSlot","resolveWrappedSlot","warnOnce","inputLight","inputInjectionKey","isEmptyInputValue","useCursor","WordCount","style","safariStyle","inputProps","Object","assign","props","bordered","type","Boolean","default","undefined","String","placeholder","Array","defaultValue","value","disabled","size","rows","Number","round","minlength","maxlength","clearable","autosize","pair","separator","readonly","passivelyActivated","showPasswordOn","stateful","autofocus","resizable","showCount","loading","allowInput","Function","renderCount","onMousedown","onKeydown","onKeyup","onInput","onFocus","onBlur","onClick","onChange","onClear","status","onUpdateValue","textDecoration","attrSize","onInputBlur","onInputFocus","onDeactivate","onActivate","onWrapperFocus","onWrapperBlur","internalDeactivateOnEnter","internalForceFocus","internalLoadingBeforeSuffix","showPasswordToggle","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","inlineThemeDisabled","mergedRtlRef","themeRef","wrapperElRef","textareaElRef","textareaMirrorElRef","inputMirrorElRef","inputElRef","inputEl2Ref","currentFocusedInputRef","focusedInputCursorControl","textareaScrollbarInstRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","focusedRef","hoverRef","isComposingRef","activatedRef","syncSource","mergedPlaceholderRef","isArray","showPlaceholder1Ref","isComposing","mergedValue","mergedPlaceholder","showPlaceholder2Ref","mergedFocusRef","showClearButton","mergedFocus","mergedShowPasswordOnRef","passwordVisibleRef","textDecorationStyleRef","map","v","textAreaScrollContainerWidthRef","updateTextAreaStyle","_a","_b","$el","offsetWidth","paddingTop","stylePaddingTop","paddingBottom","stylePaddingBottom","lineHeight","styleLineHeight","window","getComputedStyle","slice","textareaMirrorEl","minRows","Math","max","styleMinHeight","minHeight","maxRows","styleMaxHeight","maxHeight","maxlengthRef","syncMirror","vm","proxy","doUpdateValue","_onUpdateValue","nTriggerFormInput","doChange","nTriggerFormChange","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","doClear","doUpdateValueBlur","doUpdateValueFocus","doDeactivate","doActivate","doClick","doWrapperFocus","doWrapperBlur","handleCompositionStart","handleCompositionEnd","target","handleInput","index","event","targetValue","InputEvent","textareaScrollbarInst","syncUnifiedContainer","recordCursor","isIncomingValueValid","$forceUpdate","restoreCursor","handleInputBlur","relatedTarget","dealWithEvent","handleInputFocus","handleWrapperBlur","handleWrapperFocus","handleChange","handleClick","handleClear","handleMouseDown","tagName","wrapperEl","left","top","width","height","getBoundingClientRect","resizeHandleSize","clientX","clientY","preventDefault","focus","handleMouseEnter","handleMouseEnterWrapper","handleMouseLeave","handleMouseLeaveWrapper","handlePasswordToggleClick","handlePasswordToggleMousedown","preventDefaultOnce","document","hidePassword","handleWrapperKeydown","key","handleWrapperKeydownEsc","handleWrapperKeydownEnter","focused","_c","blur","contains","activeElement","select","activate","deactivate","scrollTo","options","textareaEl","inputEl","textContent","inputMirrorEl","innerHTML","handleTextAreaMirrorResize","placeholderStyleRef","handleTextAreaScroll","scrollTop","stopWatchMergedValue1","stopWatchMergedValue2","exposedProps","isCompositing","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","color","borderRadius","textColor","caretColor","caretColorError","caretColorWarning","textDecorationColor","border","borderDisabled","borderHover","borderFocus","placeholderColor","placeholderColorDisabled","lineHeightTextarea","colorDisabled","colorFocus","textColorDisabled","boxShadowFocus","iconSize","colorFocusWarning","boxShadowFocusWarning","borderWarning","borderFocusWarning","borderHoverWarning","colorFocusError","boxShadowFocusError","borderError","borderFocusError","borderHoverError","clearSize","clearColor","clearColorHover","clearColorPressed","iconColor","iconColorDisabled","suffixTextColor","countTextColor","countTextColorDisabled","iconColorHover","iconColorPressed","loadingColor","loadingColorError","loadingColorWarning","padding","fontSize","paddingLeft","right","paddingRight","themeClassHandle","rtlEnabled","uncontrolledValue","passwordVisible","showPlaceholder1","showPlaceholder2","activated","mergedSize","mergedDisabled","textDecorationStyle","mergedClsPrefix","mergedBordered","mergedShowPasswordOn","placeholderStyle","mergedStatus","textAreaScrollContainerWidth","getTextareaScrollContainer","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","tabindex","onMouseenter","onMouseleave","onCompositionstart","onCompositionend","prefix","children","container","triggerDisplayManually","useUnifiedContainer","internalHoistYRail","scrollContainerWidthStyle","onScroll","onResize","suffix","clsPrefix","show","icon","showArrow","showClear","count"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/input/src/Input.js"],"sourcesContent":["import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from '../../_utils/env/browser';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyInputValue, useCursor } from './utils';\nimport WordCount from './WordCount';\nimport style, { safariStyle } from './styles/input.cssr';\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), { bordered: {\n        type: Boolean,\n        default: undefined\n    }, type: {\n        type: String,\n        default: 'text'\n    }, placeholder: [Array, String], defaultValue: {\n        type: [String, Array],\n        default: null\n    }, value: [String, Array], disabled: {\n        type: Boolean,\n        default: undefined\n    }, size: String, rows: {\n        type: [Number, String],\n        default: 3\n    }, round: Boolean, minlength: [String, Number], maxlength: [String, Number], clearable: Boolean, autosize: {\n        type: [Boolean, Object],\n        default: false\n    }, pair: Boolean, separator: String, readonly: {\n        type: [String, Boolean],\n        default: false\n    }, passivelyActivated: Boolean, showPasswordOn: String, stateful: {\n        type: Boolean,\n        default: true\n    }, autofocus: Boolean, inputProps: Object, resizable: {\n        type: Boolean,\n        default: true\n    }, showCount: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, allowInput: Function, renderCount: Function, onMousedown: Function, onKeydown: Function, onKeyup: Function, onInput: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClick: [Function, Array], onChange: [Function, Array], onClear: [Function, Array], status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    /** private */\n    textDecoration: [String, Array], attrSize: {\n        type: Number,\n        default: 20\n    }, onInputBlur: [Function, Array], onInputFocus: [Function, Array], onDeactivate: [Function, Array], onActivate: [Function, Array], onWrapperFocus: [Function, Array], onWrapperBlur: [Function, Array], internalDeactivateOnEnter: Boolean, internalForceFocus: Boolean, internalLoadingBeforeSuffix: Boolean, \n    /** deprecated */\n    showPasswordToggle: Boolean });\nexport default defineComponent({\n    name: 'Input',\n    props: inputProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.showPasswordToggle) {\n                    warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n        if (isSafari) {\n            useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n        }\n        // dom refs\n        const wrapperElRef = ref(null);\n        const textareaElRef = ref(null);\n        const textareaMirrorElRef = ref(null);\n        const inputMirrorElRef = ref(null);\n        const inputElRef = ref(null);\n        const inputEl2Ref = ref(null);\n        const currentFocusedInputRef = ref(null);\n        const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n        const textareaScrollbarInstRef = ref(null);\n        // local\n        const { localeRef } = useLocale('Input');\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        // form-item\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // states\n        const focusedRef = ref(false);\n        const hoverRef = ref(false);\n        const isComposingRef = ref(false);\n        const activatedRef = ref(false);\n        let syncSource = null;\n        // placeholder\n        const mergedPlaceholderRef = computed(() => {\n            const { placeholder, pair } = props;\n            if (pair) {\n                if (Array.isArray(placeholder)) {\n                    return placeholder;\n                }\n                else if (placeholder === undefined) {\n                    return ['', ''];\n                }\n                return [placeholder, placeholder];\n            }\n            else if (placeholder === undefined) {\n                return [localeRef.value.placeholder];\n            }\n            else {\n                return [placeholder];\n            }\n        });\n        const showPlaceholder1Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                (isEmptyInputValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0]))) &&\n                mergedPlaceholder[0]);\n        });\n        const showPlaceholder2Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                mergedPlaceholder[1] &&\n                (isEmptyInputValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]))));\n        });\n        // focus\n        const mergedFocusRef = useMemo(() => {\n            return props.internalForceFocus || focusedRef.value;\n        });\n        // clear\n        const showClearButton = useMemo(() => {\n            if (mergedDisabledRef.value ||\n                props.readonly ||\n                !props.clearable ||\n                (!mergedFocusRef.value && !hoverRef.value)) {\n                return false;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedFocus } = mergedFocusRef;\n            if (props.pair) {\n                return (!!(Array.isArray(mergedValue) &&\n                    (mergedValue[0] || mergedValue[1])) &&\n                    (hoverRef.value || mergedFocus));\n            }\n            else {\n                return !!mergedValue && (hoverRef.value || mergedFocus);\n            }\n        });\n        // passwordVisible\n        const mergedShowPasswordOnRef = computed(() => {\n            const { showPasswordOn } = props;\n            if (showPasswordOn) {\n                return showPasswordOn;\n            }\n            if (props.showPasswordToggle)\n                return 'click';\n            return undefined;\n        });\n        const passwordVisibleRef = ref(false);\n        // text-decoration\n        const textDecorationStyleRef = computed(() => {\n            const { textDecoration } = props;\n            if (!textDecoration)\n                return ['', ''];\n            if (Array.isArray(textDecoration)) {\n                return textDecoration.map((v) => ({\n                    textDecoration: v\n                }));\n            }\n            return [\n                {\n                    textDecoration\n                }\n            ];\n        });\n        const textAreaScrollContainerWidthRef = ref(undefined);\n        // textarea autosize\n        const updateTextAreaStyle = () => {\n            var _a, _b;\n            if (props.type === 'textarea') {\n                const { autosize } = props;\n                if (autosize) {\n                    textAreaScrollContainerWidthRef.value =\n                        (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n                }\n                if (!textareaElRef.value)\n                    return;\n                if (typeof autosize === 'boolean')\n                    return;\n                const { paddingTop: stylePaddingTop, paddingBottom: stylePaddingBottom, lineHeight: styleLineHeight } = window.getComputedStyle(textareaElRef.value);\n                const paddingTop = Number(stylePaddingTop.slice(0, -2));\n                const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n                const lineHeight = Number(styleLineHeight.slice(0, -2));\n                const { value: textareaMirrorEl } = textareaMirrorElRef;\n                if (!textareaMirrorEl)\n                    return;\n                if (autosize.minRows) {\n                    const minRows = Math.max(autosize.minRows, 1);\n                    const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n                    textareaMirrorEl.style.minHeight = styleMinHeight;\n                }\n                if (autosize.maxRows) {\n                    const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n                    textareaMirrorEl.style.maxHeight = styleMaxHeight;\n                }\n            }\n        };\n        // word count\n        const maxlengthRef = computed(() => {\n            const { maxlength } = props;\n            return maxlength === undefined ? undefined : Number(maxlength);\n        });\n        onMounted(() => {\n            // sync mirror if is not pair\n            const { value } = mergedValueRef;\n            if (!Array.isArray(value)) {\n                syncMirror(value);\n            }\n        });\n        // other methods\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const vm = getCurrentInstance().proxy;\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onInput } = props;\n            const { nTriggerFormInput } = formItem;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onInput)\n                call(onInput, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n        }\n        function doChange(value) {\n            const { onChange } = props;\n            const { nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doUpdateValueBlur(e) {\n            const { onInputBlur } = props;\n            if (onInputBlur)\n                call(onInputBlur, e);\n        }\n        function doUpdateValueFocus(e) {\n            const { onInputFocus } = props;\n            if (onInputFocus)\n                call(onInputFocus, e);\n        }\n        function doDeactivate() {\n            const { onDeactivate } = props;\n            if (onDeactivate)\n                call(onDeactivate);\n        }\n        function doActivate() {\n            const { onActivate } = props;\n            if (onActivate)\n                call(onActivate);\n        }\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                call(onClick, e);\n        }\n        function doWrapperFocus(e) {\n            const { onWrapperFocus } = props;\n            if (onWrapperFocus)\n                call(onWrapperFocus, e);\n        }\n        function doWrapperBlur(e) {\n            const { onWrapperBlur } = props;\n            if (onWrapperBlur)\n                call(onWrapperBlur, e);\n        }\n        // methods\n        function handleCompositionStart() {\n            isComposingRef.value = true;\n        }\n        function handleCompositionEnd(e) {\n            isComposingRef.value = false;\n            if (e.target === inputEl2Ref.value) {\n                handleInput(e, 1);\n            }\n            else {\n                handleInput(e, 0);\n            }\n        }\n        function handleInput(e, index = 0, event = 'input') {\n            const targetValue = e.target.value;\n            syncMirror(targetValue);\n            if (e instanceof InputEvent && !e.isComposing) {\n                isComposingRef.value = false;\n            }\n            if (props.type === 'textarea') {\n                const { value: textareaScrollbarInst } = textareaScrollbarInstRef;\n                if (textareaScrollbarInst) {\n                    textareaScrollbarInst.syncUnifiedContainer();\n                }\n            }\n            syncSource = targetValue;\n            if (isComposingRef.value)\n                return;\n            focusedInputCursorControl.recordCursor();\n            const isIncomingValueValid = allowInput(targetValue);\n            if (isIncomingValueValid) {\n                if (!props.pair) {\n                    event === 'input' ? doUpdateValue(targetValue) : doChange(targetValue);\n                }\n                else {\n                    let { value } = mergedValueRef;\n                    if (!Array.isArray(value)) {\n                        value = ['', ''];\n                    }\n                    else {\n                        value = [value[0], value[1]];\n                    }\n                    value[index] = targetValue;\n                    event === 'input' ? doUpdateValue(value) : doChange(value);\n                }\n            }\n            // force update to sync input's view with value\n            // if not set, after input, input value won't sync with dom input value\n            vm.$forceUpdate();\n            if (!isIncomingValueValid) {\n                void nextTick(focusedInputCursorControl.restoreCursor);\n            }\n        }\n        function allowInput(value) {\n            const { allowInput } = props;\n            if (typeof allowInput === 'function') {\n                return allowInput(value);\n            }\n            return true;\n        }\n        function handleInputBlur(e) {\n            doUpdateValueBlur(e);\n            if (e.relatedTarget === wrapperElRef.value) {\n                doDeactivate();\n            }\n            if (!(e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value))) {\n                activatedRef.value = false;\n            }\n            dealWithEvent(e, 'blur');\n            currentFocusedInputRef.value = null;\n        }\n        function handleInputFocus(e, index) {\n            doUpdateValueFocus(e);\n            focusedRef.value = true;\n            activatedRef.value = true;\n            doActivate();\n            dealWithEvent(e, 'focus');\n            if (index === 0) {\n                currentFocusedInputRef.value = inputElRef.value;\n            }\n            else if (index === 1) {\n                currentFocusedInputRef.value = inputEl2Ref.value;\n            }\n            else if (index === 2) {\n                currentFocusedInputRef.value = textareaElRef.value;\n            }\n        }\n        function handleWrapperBlur(e) {\n            if (props.passivelyActivated) {\n                doWrapperBlur(e);\n                dealWithEvent(e, 'blur');\n            }\n        }\n        function handleWrapperFocus(e) {\n            if (props.passivelyActivated) {\n                focusedRef.value = true;\n                doWrapperFocus(e);\n                dealWithEvent(e, 'focus');\n            }\n        }\n        function dealWithEvent(e, type) {\n            if (e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value ||\n                    e.relatedTarget === wrapperElRef.value)) {\n                /**\n                 * activeElement transfer inside the input, do nothing\n                 */\n            }\n            else {\n                if (type === 'focus') {\n                    doFocus(e);\n                    focusedRef.value = true;\n                }\n                else if (type === 'blur') {\n                    doBlur(e);\n                    focusedRef.value = false;\n                }\n            }\n        }\n        function handleChange(e, index) {\n            handleInput(e, index, 'change');\n        }\n        function handleClick(e) {\n            doClick(e);\n        }\n        function handleClear(e) {\n            doClear(e);\n            if (props.pair) {\n                doUpdateValue(['', '']);\n                doChange(['', '']);\n            }\n            else {\n                doUpdateValue('');\n                doChange('');\n            }\n        }\n        function handleMouseDown(e) {\n            const { onMousedown } = props;\n            if (onMousedown)\n                onMousedown(e);\n            const { tagName } = e.target;\n            if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n                if (props.resizable) {\n                    const { value: wrapperEl } = wrapperElRef;\n                    if (wrapperEl) {\n                        const { left, top, width, height } = wrapperEl.getBoundingClientRect();\n                        const resizeHandleSize = 14;\n                        if (left + width - resizeHandleSize < e.clientX &&\n                            e.clientX < left + width &&\n                            top + height - resizeHandleSize < e.clientY &&\n                            e.clientY < top + height) {\n                            // touching resize handle, just let it go.\n                            // resize won't take focus, maybe there is a better way to do this.\n                            // hope someone can figure out a better solution\n                            return;\n                        }\n                    }\n                }\n                e.preventDefault();\n                if (!focusedRef.value) {\n                    focus();\n                }\n            }\n        }\n        function handleMouseEnter() {\n            var _a;\n            hoverRef.value = true;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n            }\n        }\n        function handleMouseLeave() {\n            var _a;\n            hoverRef.value = false;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n            }\n        }\n        function handlePasswordToggleClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (mergedShowPasswordOnRef.value !== 'click')\n                return;\n            passwordVisibleRef.value = !passwordVisibleRef.value;\n        }\n        function handlePasswordToggleMousedown(e) {\n            if (mergedDisabledRef.value)\n                return;\n            e.preventDefault();\n            const preventDefaultOnce = (e) => {\n                e.preventDefault();\n                off('mouseup', document, preventDefaultOnce);\n            };\n            on('mouseup', document, preventDefaultOnce);\n            if (mergedShowPasswordOnRef.value !== 'mousedown')\n                return;\n            passwordVisibleRef.value = true;\n            const hidePassword = () => {\n                passwordVisibleRef.value = false;\n                off('mouseup', document, hidePassword);\n            };\n            on('mouseup', document, hidePassword);\n        }\n        function handleWrapperKeydown(e) {\n            var _a;\n            (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n            switch (e.key) {\n                case 'Escape':\n                    handleWrapperKeydownEsc();\n                    break;\n                case 'Enter':\n                    handleWrapperKeydownEnter(e);\n                    break;\n            }\n        }\n        function handleWrapperKeydownEnter(e) {\n            var _a, _b;\n            if (props.passivelyActivated) {\n                const { value: focused } = activatedRef;\n                if (focused) {\n                    if (props.internalDeactivateOnEnter) {\n                        handleWrapperKeydownEsc();\n                    }\n                    return;\n                }\n                e.preventDefault();\n                if (props.type === 'textarea') {\n                    (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n                else {\n                    (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                }\n            }\n        }\n        function handleWrapperKeydownEsc() {\n            if (props.passivelyActivated) {\n                activatedRef.value = false;\n                void nextTick(() => {\n                    var _a;\n                    (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                });\n            }\n        }\n        function focus() {\n            var _a, _b, _c;\n            if (mergedDisabledRef.value)\n                return;\n            if (props.passivelyActivated) {\n                (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n            }\n        }\n        function blur() {\n            var _a;\n            if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n                ;\n                document.activeElement.blur();\n            }\n        }\n        function select() {\n            var _a, _b;\n            (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n            (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n        }\n        function activate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (textareaElRef.value)\n                textareaElRef.value.focus();\n            else if (inputElRef.value)\n                inputElRef.value.focus();\n        }\n        function deactivate() {\n            const { value: wrapperEl } = wrapperElRef;\n            if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) &&\n                wrapperEl !== document.activeElement) {\n                handleWrapperKeydownEsc();\n            }\n        }\n        function scrollTo(options) {\n            if (props.type === 'textarea') {\n                const { value: textareaEl } = textareaElRef;\n                textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n            }\n            else {\n                const { value: inputEl } = inputElRef;\n                inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n            }\n        }\n        function syncMirror(value) {\n            const { type, pair, autosize } = props;\n            if (!pair && autosize) {\n                if (type === 'textarea') {\n                    const { value: textareaMirrorEl } = textareaMirrorElRef;\n                    if (textareaMirrorEl) {\n                        textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n                    }\n                }\n                else {\n                    const { value: inputMirrorEl } = inputMirrorElRef;\n                    if (inputMirrorEl) {\n                        if (value) {\n                            inputMirrorEl.textContent = value;\n                        }\n                        else {\n                            inputMirrorEl.innerHTML = '&nbsp;';\n                        }\n                    }\n                }\n            }\n        }\n        function handleTextAreaMirrorResize() {\n            updateTextAreaStyle();\n        }\n        const placeholderStyleRef = ref({\n            top: '0'\n        });\n        function handleTextAreaScroll(e) {\n            var _a;\n            const { scrollTop } = e.target;\n            placeholderStyleRef.value.top = `${-scrollTop}px`;\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n        }\n        let stopWatchMergedValue1 = null;\n        watchEffect(() => {\n            const { autosize, type } = props;\n            if (autosize && type === 'textarea') {\n                stopWatchMergedValue1 = watch(mergedValueRef, (value) => {\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        syncMirror(value);\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n            }\n        });\n        let stopWatchMergedValue2 = null;\n        watchEffect(() => {\n            if (props.type === 'textarea') {\n                stopWatchMergedValue2 = watch(mergedValueRef, (value) => {\n                    var _a;\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n            }\n        });\n        provide(inputInjectionKey, {\n            mergedValueRef,\n            maxlengthRef,\n            mergedClsPrefixRef\n        });\n        const exposedProps = {\n            wrapperElRef,\n            inputElRef,\n            textareaElRef,\n            isCompositing: isComposingRef,\n            focus,\n            blur,\n            select,\n            deactivate,\n            activate,\n            scrollTo\n        };\n        const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: size } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { color, borderRadius, textColor, caretColor, caretColorError, caretColorWarning, textDecorationColor, border, borderDisabled, borderHover, borderFocus, placeholderColor, placeholderColorDisabled, lineHeightTextarea, colorDisabled, colorFocus, textColorDisabled, boxShadowFocus, iconSize, colorFocusWarning, boxShadowFocusWarning, borderWarning, borderFocusWarning, borderHoverWarning, colorFocusError, boxShadowFocusError, borderError, borderFocusError, borderHoverError, clearSize, clearColor, clearColorHover, clearColorPressed, iconColor, iconColorDisabled, suffixTextColor, countTextColor, countTextColorDisabled, iconColorHover, iconColorPressed, loadingColor, loadingColorError, loadingColorWarning, [createKey('padding', size)]: padding, [createKey('fontSize', size)]: fontSize, [createKey('height', size)]: height } } = themeRef.value;\n            const { left: paddingLeft, right: paddingRight } = getPadding(padding);\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-count-text-color': countTextColor,\n                '--n-count-text-color-disabled': countTextColorDisabled,\n                '--n-color': color,\n                '--n-font-size': fontSize,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-padding-left': paddingLeft,\n                '--n-padding-right': paddingRight,\n                '--n-text-color': textColor,\n                '--n-caret-color': caretColor,\n                '--n-text-decoration-color': textDecorationColor,\n                '--n-border': border,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-hover': borderHover,\n                '--n-border-focus': borderFocus,\n                '--n-placeholder-color': placeholderColor,\n                '--n-placeholder-color-disabled': placeholderColorDisabled,\n                '--n-icon-size': iconSize,\n                '--n-line-height-textarea': lineHeightTextarea,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-focus': colorFocus,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-loading-color': loadingColor,\n                // form warning\n                '--n-caret-color-warning': caretColorWarning,\n                '--n-color-focus-warning': colorFocusWarning,\n                '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n                '--n-border-warning': borderWarning,\n                '--n-border-focus-warning': borderFocusWarning,\n                '--n-border-hover-warning': borderHoverWarning,\n                '--n-loading-color-warning': loadingColorWarning,\n                // form error\n                '--n-caret-color-error': caretColorError,\n                '--n-color-focus-error': colorFocusError,\n                '--n-box-shadow-focus-error': boxShadowFocusError,\n                '--n-border-error': borderError,\n                '--n-border-focus-error': borderFocusError,\n                '--n-border-hover-error': borderHoverError,\n                '--n-loading-color-error': loadingColorError,\n                // clear-button\n                '--n-clear-color': clearColor,\n                '--n-clear-size': clearSize,\n                '--n-clear-color-hover': clearColorHover,\n                '--n-clear-color-pressed': clearColorPressed,\n                '--n-icon-color': iconColor,\n                '--n-icon-color-hover': iconColorHover,\n                '--n-icon-color-pressed': iconColorPressed,\n                '--n-icon-color-disabled': iconColorDisabled,\n                '--n-suffix-text-color': suffixTextColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('input', computed(() => {\n                const { value: size } = mergedSizeRef;\n                return size[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedProps), { \n            // DOM ref\n            wrapperElRef,\n            inputElRef,\n            inputMirrorElRef,\n            inputEl2Ref,\n            textareaElRef,\n            textareaMirrorElRef,\n            textareaScrollbarInstRef, \n            // value\n            rtlEnabled: rtlEnabledRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, passwordVisible: passwordVisibleRef, mergedPlaceholder: mergedPlaceholderRef, showPlaceholder1: showPlaceholder1Ref, showPlaceholder2: showPlaceholder2Ref, mergedFocus: mergedFocusRef, isComposing: isComposingRef, activated: activatedRef, showClearButton, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, textDecorationStyle: textDecorationStyleRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, mergedShowPasswordOn: mergedShowPasswordOnRef, placeholderStyle: placeholderStyleRef, mergedStatus: mergedStatusRef, textAreaScrollContainerWidth: textAreaScrollContainerWidthRef, \n            // methods\n            handleTextAreaScroll,\n            handleCompositionStart,\n            handleCompositionEnd,\n            handleInput,\n            handleInputBlur,\n            handleInputFocus,\n            handleWrapperBlur,\n            handleWrapperFocus,\n            handleMouseEnter,\n            handleMouseLeave,\n            handleMouseDown,\n            handleChange,\n            handleClick,\n            handleClear,\n            handlePasswordToggleClick,\n            handlePasswordToggleMousedown,\n            handleWrapperKeydown,\n            handleTextAreaMirrorResize, getTextareaScrollContainer: () => {\n                return textareaElRef.value;\n            }, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, mergedStatus, themeClass, type, onRender } = this;\n        const $slots = this.$slots;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { ref: \"wrapperElRef\", class: [\n                `${mergedClsPrefix}-input`,\n                themeClass,\n                mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`,\n                {\n                    [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n                    [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n                    [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n                    [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n                    [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n                    [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n                    [`${mergedClsPrefix}-input--pair`]: this.pair,\n                    [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n                    [`${mergedClsPrefix}-input--stateful`]: this.stateful\n                }\n            ], style: this.cssVars, tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated\n                ? 0\n                : undefined, onFocus: this.handleWrapperFocus, onBlur: this.handleWrapperBlur, onClick: this.handleClick, onMousedown: this.handleMouseDown, onMouseenter: this.handleMouseEnter, onMouseleave: this.handleMouseLeave, onCompositionstart: this.handleCompositionStart, onCompositionend: this.handleCompositionEnd, onKeyup: this.onKeyup, onKeydown: this.handleWrapperKeydown },\n            h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                resolveWrappedSlot($slots.prefix, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-input__prefix` }, children))),\n                type === 'textarea' ? (h(NScrollbar, { ref: \"textareaScrollbarInstRef\", class: `${mergedClsPrefix}-input__textarea`, container: this.getTextareaScrollContainer, triggerDisplayManually: true, useUnifiedContainer: true, internalHoistYRail: true }, {\n                    default: () => {\n                        var _a, _b;\n                        const { textAreaScrollContainerWidth } = this;\n                        const scrollContainerWidthStyle = {\n                            width: this.autosize &&\n                                textAreaScrollContainerWidth &&\n                                `${textAreaScrollContainerWidth}px`\n                        };\n                        return (h(Fragment, null,\n                            h(\"textarea\", Object.assign({}, this.inputProps, { ref: \"textareaElRef\", class: [\n                                    `${mergedClsPrefix}-input__textarea-el`,\n                                    (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class\n                                ], autofocus: this.autofocus, rows: Number(this.rows), placeholder: this.placeholder, value: this.mergedValue, disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, readonly: this.readonly, tabindex: this.passivelyActivated && !this.activated\n                                    ? -1\n                                    : undefined, style: [\n                                    this.textDecorationStyle[0],\n                                    (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style,\n                                    scrollContainerWidthStyle\n                                ], onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 2), onInput: this.handleInput, onChange: this.handleChange, onScroll: this.handleTextAreaScroll })),\n                            this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder`, style: [\n                                    this.placeholderStyle,\n                                    scrollContainerWidthStyle\n                                ], key: \"placeholder\" }, this.mergedPlaceholder[0])) : null,\n                            this.autosize ? (h(VResizeObserver, { onResize: this.handleTextAreaMirrorResize }, {\n                                default: () => (h(\"div\", { ref: \"textareaMirrorElRef\", class: `${mergedClsPrefix}-input__textarea-mirror`, key: \"mirror\" }))\n                            })) : null));\n                    }\n                })) : (h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", Object.assign({ type: type === 'password' &&\n                            this.mergedShowPasswordOn &&\n                            this.passwordVisible\n                            ? 'text'\n                            : type }, this.inputProps, { ref: \"inputElRef\", class: [\n                            `${mergedClsPrefix}-input__input-el`,\n                            (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class\n                        ], style: [\n                            this.textDecorationStyle[0],\n                            (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style\n                        ], tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[0], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[0]\n                            : this.mergedValue, readonly: this.readonly, autofocus: this.autofocus, size: this.attrSize, onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 0), onInput: (e) => this.handleInput(e, 0), onChange: (e) => this.handleChange(e, 0) })),\n                    this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[0]))) : null,\n                    this.autosize ? (h(\"div\", { class: `${mergedClsPrefix}-input__input-mirror`, key: \"mirror\", ref: \"inputMirrorElRef\" }, \"\\u00A0\")) : null)),\n                !this.pair &&\n                    resolveWrappedSlot($slots.suffix, (children) => {\n                        return children ||\n                            this.clearable ||\n                            this.showCount ||\n                            this.mergedShowPasswordOn ||\n                            this.loading !== undefined ? (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                            resolveWrappedSlot($slots['clear-icon-placeholder'], (children) => {\n                                return ((this.clearable || children) && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, {\n                                    placeholder: () => children,\n                                    icon: () => { var _a, _b; return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a); }\n                                })));\n                            }),\n                            !this.internalLoadingBeforeSuffix ? children : null,\n                            this.loading !== undefined ? (h(NBaseSuffix, { clsPrefix: mergedClsPrefix, loading: this.loading, showArrow: false, showClear: false, style: this.cssVars })) : null,\n                            this.internalLoadingBeforeSuffix ? children : null,\n                            this.showCount && this.type !== 'textarea' ? (h(WordCount, null, {\n                                default: (props) => { var _a; return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props); }\n                            })) : null,\n                            this.mergedShowPasswordOn && this.type === 'password' ? (h(\"div\", { class: `${mergedClsPrefix}-input__eye`, onMousedown: this.handlePasswordToggleMousedown, onClick: this.handlePasswordToggleClick }, this.passwordVisible\n                                ? resolveSlot($slots['password-visible-icon'], () => [\n                                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(EyeIcon, null) })\n                                ])\n                                : resolveSlot($slots['password-invisible-icon'], () => [\n                                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(EyeOffIcon, null) })\n                                ]))) : null\n                        ])) : null;\n                    })),\n            this.pair ? (h(\"span\", { class: `${mergedClsPrefix}-input__separator` }, resolveSlot($slots.separator, () => [this.separator]))) : null,\n            this.pair ? (h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", { ref: \"inputEl2Ref\", type: this.type, class: `${mergedClsPrefix}-input__input-el`, tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[1], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[1]\n                            : undefined, readonly: this.readonly, style: this.textDecorationStyle[1], onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 1), onInput: (e) => this.handleInput(e, 1), onChange: (e) => this.handleChange(e, 1) }),\n                    this.showPlaceholder2 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[1]))) : null),\n                resolveWrappedSlot($slots.suffix, (children) => {\n                    return ((this.clearable || children) && (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                        this.clearable && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, {\n                            icon: () => { var _a; return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots); },\n                            placeholder: () => { var _a; return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots); }\n                        })),\n                        children\n                    ])));\n                }))) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__border` })) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__state-border` })) : null,\n            this.showCount && type === 'textarea' ? (h(WordCount, null, {\n                default: (props) => {\n                    var _a;\n                    const { renderCount } = this;\n                    if (renderCount) {\n                        return renderCount(props);\n                    }\n                    return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n                }\n            })) : null));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,KAAK;AAC9I,SAASC,cAAc,EAAEC,OAAO,QAAQ,OAAO;AAC/C,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,eAAe,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC9B,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,OAAO,EAAEC,UAAU,QAAQ,uBAAuB;AAC3D,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,iBAAiB;AAChF,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,eAAe;AACpG,SAASC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,QAAQ,QAAQ,cAAc;AACzF,SAASC,UAAU,QAAQ,WAAW;AACtC,SAASC,iBAAiB,QAAQ,aAAa;AAC/C,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,SAAS;AACtD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,IAAIC,WAAW,QAAQ,qBAAqB;AACxD,OAAO,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEpB,QAAQ,CAACqB,KAAK,CAAC,EAAE;EAAEC,QAAQ,EAAE;IAC/EC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEH,IAAI,EAAE;IACLA,IAAI,EAAEI,MAAM;IACZF,OAAO,EAAE;EACb,CAAC;EAAEG,WAAW,EAAE,CAACC,KAAK,EAAEF,MAAM,CAAC;EAAEG,YAAY,EAAE;IAC3CP,IAAI,EAAE,CAACI,MAAM,EAAEE,KAAK,CAAC;IACrBJ,OAAO,EAAE;EACb,CAAC;EAAEM,KAAK,EAAE,CAACJ,MAAM,EAAEE,KAAK,CAAC;EAAEG,QAAQ,EAAE;IACjCT,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEO,IAAI,EAAEN,MAAM;EAAEO,IAAI,EAAE;IACnBX,IAAI,EAAE,CAACY,MAAM,EAAER,MAAM,CAAC;IACtBF,OAAO,EAAE;EACb,CAAC;EAAEW,KAAK,EAAEZ,OAAO;EAAEa,SAAS,EAAE,CAACV,MAAM,EAAEQ,MAAM,CAAC;EAAEG,SAAS,EAAE,CAACX,MAAM,EAAEQ,MAAM,CAAC;EAAEI,SAAS,EAAEf,OAAO;EAAEgB,QAAQ,EAAE;IACvGjB,IAAI,EAAE,CAACC,OAAO,EAAEL,MAAM,CAAC;IACvBM,OAAO,EAAE;EACb,CAAC;EAAEgB,IAAI,EAAEjB,OAAO;EAAEkB,SAAS,EAAEf,MAAM;EAAEgB,QAAQ,EAAE;IAC3CpB,IAAI,EAAE,CAACI,MAAM,EAAEH,OAAO,CAAC;IACvBC,OAAO,EAAE;EACb,CAAC;EAAEmB,kBAAkB,EAAEpB,OAAO;EAAEqB,cAAc,EAAElB,MAAM;EAAEmB,QAAQ,EAAE;IAC9DvB,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb,CAAC;EAAEsB,SAAS,EAAEvB,OAAO;EAAEN,UAAU,EAAEC,MAAM;EAAE6B,SAAS,EAAE;IAClDzB,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb,CAAC;EAAEwB,SAAS,EAAEzB,OAAO;EAAE0B,OAAO,EAAE;IAC5B3B,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEyB,UAAU,EAAEC,QAAQ;EAAEC,WAAW,EAAED,QAAQ;EAAEE,WAAW,EAAEF,QAAQ;EAAEG,SAAS,EAAEH,QAAQ;EAAEI,OAAO,EAAEJ,QAAQ;EAAEK,OAAO,EAAE,CAACL,QAAQ,EAAEvB,KAAK,CAAC;EAAE6B,OAAO,EAAE,CAACN,QAAQ,EAAEvB,KAAK,CAAC;EAAE8B,MAAM,EAAE,CAACP,QAAQ,EAAEvB,KAAK,CAAC;EAAE+B,OAAO,EAAE,CAACR,QAAQ,EAAEvB,KAAK,CAAC;EAAEgC,QAAQ,EAAE,CAACT,QAAQ,EAAEvB,KAAK,CAAC;EAAEiC,OAAO,EAAE,CAACV,QAAQ,EAAEvB,KAAK,CAAC;EAAEkC,MAAM,EAAEpC,MAAM;EAAE,gBAAgB,EAAE,CAACyB,QAAQ,EAAEvB,KAAK,CAAC;EAAEmC,aAAa,EAAE,CAACZ,QAAQ,EAAEvB,KAAK,CAAC;EAC5W;EACAoC,cAAc,EAAE,CAACtC,MAAM,EAAEE,KAAK,CAAC;EAAEqC,QAAQ,EAAE;IACvC3C,IAAI,EAAEY,MAAM;IACZV,OAAO,EAAE;EACb,CAAC;EAAE0C,WAAW,EAAE,CAACf,QAAQ,EAAEvB,KAAK,CAAC;EAAEuC,YAAY,EAAE,CAAChB,QAAQ,EAAEvB,KAAK,CAAC;EAAEwC,YAAY,EAAE,CAACjB,QAAQ,EAAEvB,KAAK,CAAC;EAAEyC,UAAU,EAAE,CAAClB,QAAQ,EAAEvB,KAAK,CAAC;EAAE0C,cAAc,EAAE,CAACnB,QAAQ,EAAEvB,KAAK,CAAC;EAAE2C,aAAa,EAAE,CAACpB,QAAQ,EAAEvB,KAAK,CAAC;EAAE4C,yBAAyB,EAAEjD,OAAO;EAAEkD,kBAAkB,EAAElD,OAAO;EAAEmD,2BAA2B,EAAEnD,OAAO;EAC9S;EACAoD,kBAAkB,EAAEpD;AAAQ,CAAC,CAAC;AAClC,eAAehD,eAAe,CAAC;EAC3BqG,IAAI,EAAE,OAAO;EACbxD,KAAK,EAAEH,UAAU;EACjB4D,KAAK,CAACzD,KAAK,EAAE;IACT,IAAI0D,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvClG,WAAW,CAAC,MAAM;QACd,IAAIsC,KAAK,CAACuD,kBAAkB,EAAE;UAC1BlE,QAAQ,CAAC,OAAO,EAAE,mFAAmF,CAAC;QAC1G;MACJ,CAAC,CAAC;IACN;IACA,MAAM;MAAEwE,kBAAkB;MAAEC,iBAAiB;MAAEC,mBAAmB;MAAEC;IAAa,CAAC,GAAGlF,SAAS,CAACkB,KAAK,CAAC;IACrG,MAAMiE,QAAQ,GAAGtF,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAEgB,KAAK,EAAEL,UAAU,EAAEU,KAAK,EAAE6D,kBAAkB,CAAC;IAC1F,IAAI1F,QAAQ,EAAE;MACVa,QAAQ,CAAC,eAAe,EAAEY,WAAW,EAAEiE,kBAAkB,CAAC;IAC9D;IACA;IACA,MAAMK,YAAY,GAAG7G,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAM8G,aAAa,GAAG9G,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAM+G,mBAAmB,GAAG/G,GAAG,CAAC,IAAI,CAAC;IACrC,MAAMgH,gBAAgB,GAAGhH,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMiH,UAAU,GAAGjH,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMkH,WAAW,GAAGlH,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMmH,sBAAsB,GAAGnH,GAAG,CAAC,IAAI,CAAC;IACxC,MAAMoH,yBAAyB,GAAGhF,SAAS,CAAC+E,sBAAsB,CAAC;IACnE,MAAME,wBAAwB,GAAGrH,GAAG,CAAC,IAAI,CAAC;IAC1C;IACA,MAAM;MAAEsH;IAAU,CAAC,GAAG/F,SAAS,CAAC,OAAO,CAAC;IACxC;IACA,MAAMgG,oBAAoB,GAAGvH,GAAG,CAAC2C,KAAK,CAACS,YAAY,CAAC;IACpD,MAAMoE,kBAAkB,GAAGvH,KAAK,CAAC0C,KAAK,EAAE,OAAO,CAAC;IAChD,MAAM8E,cAAc,GAAGjH,cAAc,CAACgH,kBAAkB,EAAED,oBAAoB,CAAC;IAC/E;IACA,MAAMG,QAAQ,GAAGlG,WAAW,CAACmB,KAAK,CAAC;IACnC,MAAM;MAAEgF,aAAa;MAAEC,iBAAiB;MAAEC;IAAgB,CAAC,GAAGH,QAAQ;IACtE;IACA,MAAMI,UAAU,GAAG9H,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAM+H,QAAQ,GAAG/H,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMgI,cAAc,GAAGhI,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMiI,YAAY,GAAGjI,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAIkI,UAAU,GAAG,IAAI;IACrB;IACA,MAAMC,oBAAoB,GAAGtI,QAAQ,CAAC,MAAM;MACxC,MAAM;QAAEqD,WAAW;QAAEa;MAAK,CAAC,GAAGpB,KAAK;MACnC,IAAIoB,IAAI,EAAE;QACN,IAAIZ,KAAK,CAACiF,OAAO,CAAClF,WAAW,CAAC,EAAE;UAC5B,OAAOA,WAAW;QACtB,CAAC,MACI,IAAIA,WAAW,KAAKF,SAAS,EAAE;UAChC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;QACnB;QACA,OAAO,CAACE,WAAW,EAAEA,WAAW,CAAC;MACrC,CAAC,MACI,IAAIA,WAAW,KAAKF,SAAS,EAAE;QAChC,OAAO,CAACsE,SAAS,CAACjE,KAAK,CAACH,WAAW,CAAC;MACxC,CAAC,MACI;QACD,OAAO,CAACA,WAAW,CAAC;MACxB;IACJ,CAAC,CAAC;IACF,MAAMmF,mBAAmB,GAAGxI,QAAQ,CAAC,MAAM;MACvC,MAAM;QAAEwD,KAAK,EAAEiF;MAAY,CAAC,GAAGN,cAAc;MAC7C,MAAM;QAAE3E,KAAK,EAAEkF;MAAY,CAAC,GAAGd,cAAc;MAC7C,MAAM;QAAEpE,KAAK,EAAEmF;MAAkB,CAAC,GAAGL,oBAAoB;MACzD,OAAQ,CAACG,WAAW,KACfnG,iBAAiB,CAACoG,WAAW,CAAC,IAC1BpF,KAAK,CAACiF,OAAO,CAACG,WAAW,CAAC,IAAIpG,iBAAiB,CAACoG,WAAW,CAAC,CAAC,CAAC,CAAE,CAAC,IACtEC,iBAAiB,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IACF,MAAMC,mBAAmB,GAAG5I,QAAQ,CAAC,MAAM;MACvC,MAAM;QAAEwD,KAAK,EAAEiF;MAAY,CAAC,GAAGN,cAAc;MAC7C,MAAM;QAAE3E,KAAK,EAAEkF;MAAY,CAAC,GAAGd,cAAc;MAC7C,MAAM;QAAEpE,KAAK,EAAEmF;MAAkB,CAAC,GAAGL,oBAAoB;MACzD,OAAQ,CAACG,WAAW,IAChBE,iBAAiB,CAAC,CAAC,CAAC,KACnBrG,iBAAiB,CAACoG,WAAW,CAAC,IAC1BpF,KAAK,CAACiF,OAAO,CAACG,WAAW,CAAC,IAAIpG,iBAAiB,CAACoG,WAAW,CAAC,CAAC,CAAC,CAAE,CAAC;IAC9E,CAAC,CAAC;IACF;IACA,MAAMG,cAAc,GAAGjI,OAAO,CAAC,MAAM;MACjC,OAAOkC,KAAK,CAACqD,kBAAkB,IAAI8B,UAAU,CAACzE,KAAK;IACvD,CAAC,CAAC;IACF;IACA,MAAMsF,eAAe,GAAGlI,OAAO,CAAC,MAAM;MAClC,IAAImH,iBAAiB,CAACvE,KAAK,IACvBV,KAAK,CAACsB,QAAQ,IACd,CAACtB,KAAK,CAACkB,SAAS,IACf,CAAC6E,cAAc,CAACrF,KAAK,IAAI,CAAC0E,QAAQ,CAAC1E,KAAM,EAAE;QAC5C,OAAO,KAAK;MAChB;MACA,MAAM;QAAEA,KAAK,EAAEkF;MAAY,CAAC,GAAGd,cAAc;MAC7C,MAAM;QAAEpE,KAAK,EAAEuF;MAAY,CAAC,GAAGF,cAAc;MAC7C,IAAI/F,KAAK,CAACoB,IAAI,EAAE;QACZ,OAAQ,CAAC,EAAEZ,KAAK,CAACiF,OAAO,CAACG,WAAW,CAAC,KAChCA,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAClCR,QAAQ,CAAC1E,KAAK,IAAIuF,WAAW,CAAC;MACvC,CAAC,MACI;QACD,OAAO,CAAC,CAACL,WAAW,KAAKR,QAAQ,CAAC1E,KAAK,IAAIuF,WAAW,CAAC;MAC3D;IACJ,CAAC,CAAC;IACF;IACA,MAAMC,uBAAuB,GAAGhJ,QAAQ,CAAC,MAAM;MAC3C,MAAM;QAAEsE;MAAe,CAAC,GAAGxB,KAAK;MAChC,IAAIwB,cAAc,EAAE;QAChB,OAAOA,cAAc;MACzB;MACA,IAAIxB,KAAK,CAACuD,kBAAkB,EACxB,OAAO,OAAO;MAClB,OAAOlD,SAAS;IACpB,CAAC,CAAC;IACF,MAAM8F,kBAAkB,GAAG9I,GAAG,CAAC,KAAK,CAAC;IACrC;IACA,MAAM+I,sBAAsB,GAAGlJ,QAAQ,CAAC,MAAM;MAC1C,MAAM;QAAE0F;MAAe,CAAC,GAAG5C,KAAK;MAChC,IAAI,CAAC4C,cAAc,EACf,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;MACnB,IAAIpC,KAAK,CAACiF,OAAO,CAAC7C,cAAc,CAAC,EAAE;QAC/B,OAAOA,cAAc,CAACyD,GAAG,CAAEC,CAAC,KAAM;UAC9B1D,cAAc,EAAE0D;QACpB,CAAC,CAAC,CAAC;MACP;MACA,OAAO,CACH;QACI1D;MACJ,CAAC,CACJ;IACL,CAAC,CAAC;IACF,MAAM2D,+BAA+B,GAAGlJ,GAAG,CAACgD,SAAS,CAAC;IACtD;IACA,MAAMmG,mBAAmB,GAAG,MAAM;MAC9B,IAAIC,EAAE,EAAEC,EAAE;MACV,IAAI1G,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3B,MAAM;UAAEiB;QAAS,CAAC,GAAGnB,KAAK;QAC1B,IAAImB,QAAQ,EAAE;UACVoF,+BAA+B,CAAC7F,KAAK,GACjC,CAACgG,EAAE,GAAG,CAACD,EAAE,GAAG/B,wBAAwB,CAAChE,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,GAAG,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,WAAW;QACpJ;QACA,IAAI,CAACzC,aAAa,CAACzD,KAAK,EACpB;QACJ,IAAI,OAAOS,QAAQ,KAAK,SAAS,EAC7B;QACJ,MAAM;UAAE0F,UAAU,EAAEC,eAAe;UAAEC,aAAa,EAAEC,kBAAkB;UAAEC,UAAU,EAAEC;QAAgB,CAAC,GAAGC,MAAM,CAACC,gBAAgB,CAACjD,aAAa,CAACzD,KAAK,CAAC;QACpJ,MAAMmG,UAAU,GAAG/F,MAAM,CAACgG,eAAe,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,MAAMN,aAAa,GAAGjG,MAAM,CAACkG,kBAAkB,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAMJ,UAAU,GAAGnG,MAAM,CAACoG,eAAe,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM;UAAE3G,KAAK,EAAE4G;QAAiB,CAAC,GAAGlD,mBAAmB;QACvD,IAAI,CAACkD,gBAAgB,EACjB;QACJ,IAAInG,QAAQ,CAACoG,OAAO,EAAE;UAClB,MAAMA,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACtG,QAAQ,CAACoG,OAAO,EAAE,CAAC,CAAC;UAC7C,MAAMG,cAAc,GAAI,GAAEb,UAAU,GAAGE,aAAa,GAAGE,UAAU,GAAGM,OAAQ,IAAG;UAC/ED,gBAAgB,CAAC3H,KAAK,CAACgI,SAAS,GAAGD,cAAc;QACrD;QACA,IAAIvG,QAAQ,CAACyG,OAAO,EAAE;UAClB,MAAMC,cAAc,GAAI,GAAEhB,UAAU,GAAGE,aAAa,GAAGE,UAAU,GAAG9F,QAAQ,CAACyG,OAAQ,IAAG;UACxFN,gBAAgB,CAAC3H,KAAK,CAACmI,SAAS,GAAGD,cAAc;QACrD;MACJ;IACJ,CAAC;IACD;IACA,MAAME,YAAY,GAAG7K,QAAQ,CAAC,MAAM;MAChC,MAAM;QAAE+D;MAAU,CAAC,GAAGjB,KAAK;MAC3B,OAAOiB,SAAS,KAAKZ,SAAS,GAAGA,SAAS,GAAGS,MAAM,CAACG,SAAS,CAAC;IAClE,CAAC,CAAC;IACF1D,SAAS,CAAC,MAAM;MACZ;MACA,MAAM;QAAEmD;MAAM,CAAC,GAAGoE,cAAc;MAChC,IAAI,CAACtE,KAAK,CAACiF,OAAO,CAAC/E,KAAK,CAAC,EAAE;QACvBsH,UAAU,CAACtH,KAAK,CAAC;MACrB;IACJ,CAAC,CAAC;IACF;IACA;IACA,MAAMuH,EAAE,GAAGzK,kBAAkB,EAAE,CAAC0K,KAAK;IACrC,SAASC,aAAa,CAACzH,KAAK,EAAE;MAC1B,MAAM;QAAEiC,aAAa;QAAE,gBAAgB,EAAEyF,cAAc;QAAEhG;MAAQ,CAAC,GAAGpC,KAAK;MAC1E,MAAM;QAAEqI;MAAkB,CAAC,GAAGtD,QAAQ;MACtC,IAAIpC,aAAa,EACb1D,IAAI,CAAC0D,aAAa,EAAEjC,KAAK,CAAC;MAC9B,IAAI0H,cAAc,EACdnJ,IAAI,CAACmJ,cAAc,EAAE1H,KAAK,CAAC;MAC/B,IAAI0B,OAAO,EACPnD,IAAI,CAACmD,OAAO,EAAE1B,KAAK,CAAC;MACxBkE,oBAAoB,CAAClE,KAAK,GAAGA,KAAK;MAClC2H,iBAAiB,EAAE;IACvB;IACA,SAASC,QAAQ,CAAC5H,KAAK,EAAE;MACrB,MAAM;QAAE8B;MAAS,CAAC,GAAGxC,KAAK;MAC1B,MAAM;QAAEuI;MAAmB,CAAC,GAAGxD,QAAQ;MACvC,IAAIvC,QAAQ,EACRvD,IAAI,CAACuD,QAAQ,EAAE9B,KAAK,CAAC;MACzBkE,oBAAoB,CAAClE,KAAK,GAAGA,KAAK;MAClC6H,kBAAkB,EAAE;IACxB;IACA,SAASC,MAAM,CAACC,CAAC,EAAE;MACf,MAAM;QAAEnG;MAAO,CAAC,GAAGtC,KAAK;MACxB,MAAM;QAAE0I;MAAiB,CAAC,GAAG3D,QAAQ;MACrC,IAAIzC,MAAM,EACNrD,IAAI,CAACqD,MAAM,EAAEmG,CAAC,CAAC;MACnBC,gBAAgB,EAAE;IACtB;IACA,SAASC,OAAO,CAACF,CAAC,EAAE;MAChB,MAAM;QAAEpG;MAAQ,CAAC,GAAGrC,KAAK;MACzB,MAAM;QAAE4I;MAAkB,CAAC,GAAG7D,QAAQ;MACtC,IAAI1C,OAAO,EACPpD,IAAI,CAACoD,OAAO,EAAEoG,CAAC,CAAC;MACpBG,iBAAiB,EAAE;IACvB;IACA,SAASC,OAAO,CAACJ,CAAC,EAAE;MAChB,MAAM;QAAEhG;MAAQ,CAAC,GAAGzC,KAAK;MACzB,IAAIyC,OAAO,EACPxD,IAAI,CAACwD,OAAO,EAAEgG,CAAC,CAAC;IACxB;IACA,SAASK,iBAAiB,CAACL,CAAC,EAAE;MAC1B,MAAM;QAAE3F;MAAY,CAAC,GAAG9C,KAAK;MAC7B,IAAI8C,WAAW,EACX7D,IAAI,CAAC6D,WAAW,EAAE2F,CAAC,CAAC;IAC5B;IACA,SAASM,kBAAkB,CAACN,CAAC,EAAE;MAC3B,MAAM;QAAE1F;MAAa,CAAC,GAAG/C,KAAK;MAC9B,IAAI+C,YAAY,EACZ9D,IAAI,CAAC8D,YAAY,EAAE0F,CAAC,CAAC;IAC7B;IACA,SAASO,YAAY,GAAG;MACpB,MAAM;QAAEhG;MAAa,CAAC,GAAGhD,KAAK;MAC9B,IAAIgD,YAAY,EACZ/D,IAAI,CAAC+D,YAAY,CAAC;IAC1B;IACA,SAASiG,UAAU,GAAG;MAClB,MAAM;QAAEhG;MAAW,CAAC,GAAGjD,KAAK;MAC5B,IAAIiD,UAAU,EACVhE,IAAI,CAACgE,UAAU,CAAC;IACxB;IACA,SAASiG,OAAO,CAACT,CAAC,EAAE;MAChB,MAAM;QAAElG;MAAQ,CAAC,GAAGvC,KAAK;MACzB,IAAIuC,OAAO,EACPtD,IAAI,CAACsD,OAAO,EAAEkG,CAAC,CAAC;IACxB;IACA,SAASU,cAAc,CAACV,CAAC,EAAE;MACvB,MAAM;QAAEvF;MAAe,CAAC,GAAGlD,KAAK;MAChC,IAAIkD,cAAc,EACdjE,IAAI,CAACiE,cAAc,EAAEuF,CAAC,CAAC;IAC/B;IACA,SAASW,aAAa,CAACX,CAAC,EAAE;MACtB,MAAM;QAAEtF;MAAc,CAAC,GAAGnD,KAAK;MAC/B,IAAImD,aAAa,EACblE,IAAI,CAACkE,aAAa,EAAEsF,CAAC,CAAC;IAC9B;IACA;IACA,SAASY,sBAAsB,GAAG;MAC9BhE,cAAc,CAAC3E,KAAK,GAAG,IAAI;IAC/B;IACA,SAAS4I,oBAAoB,CAACb,CAAC,EAAE;MAC7BpD,cAAc,CAAC3E,KAAK,GAAG,KAAK;MAC5B,IAAI+H,CAAC,CAACc,MAAM,KAAKhF,WAAW,CAAC7D,KAAK,EAAE;QAChC8I,WAAW,CAACf,CAAC,EAAE,CAAC,CAAC;MACrB,CAAC,MACI;QACDe,WAAW,CAACf,CAAC,EAAE,CAAC,CAAC;MACrB;IACJ;IACA,SAASe,WAAW,CAACf,CAAC,EAAEgB,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,OAAO,EAAE;MAChD,MAAMC,WAAW,GAAGlB,CAAC,CAACc,MAAM,CAAC7I,KAAK;MAClCsH,UAAU,CAAC2B,WAAW,CAAC;MACvB,IAAIlB,CAAC,YAAYmB,UAAU,IAAI,CAACnB,CAAC,CAAC9C,WAAW,EAAE;QAC3CN,cAAc,CAAC3E,KAAK,GAAG,KAAK;MAChC;MACA,IAAIV,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3B,MAAM;UAAEQ,KAAK,EAAEmJ;QAAsB,CAAC,GAAGnF,wBAAwB;QACjE,IAAImF,qBAAqB,EAAE;UACvBA,qBAAqB,CAACC,oBAAoB,EAAE;QAChD;MACJ;MACAvE,UAAU,GAAGoE,WAAW;MACxB,IAAItE,cAAc,CAAC3E,KAAK,EACpB;MACJ+D,yBAAyB,CAACsF,YAAY,EAAE;MACxC,MAAMC,oBAAoB,GAAGlI,UAAU,CAAC6H,WAAW,CAAC;MACpD,IAAIK,oBAAoB,EAAE;QACtB,IAAI,CAAChK,KAAK,CAACoB,IAAI,EAAE;UACbsI,KAAK,KAAK,OAAO,GAAGvB,aAAa,CAACwB,WAAW,CAAC,GAAGrB,QAAQ,CAACqB,WAAW,CAAC;QAC1E,CAAC,MACI;UACD,IAAI;YAAEjJ;UAAM,CAAC,GAAGoE,cAAc;UAC9B,IAAI,CAACtE,KAAK,CAACiF,OAAO,CAAC/E,KAAK,CAAC,EAAE;YACvBA,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;UACpB,CAAC,MACI;YACDA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;UAChC;UACAA,KAAK,CAAC+I,KAAK,CAAC,GAAGE,WAAW;UAC1BD,KAAK,KAAK,OAAO,GAAGvB,aAAa,CAACzH,KAAK,CAAC,GAAG4H,QAAQ,CAAC5H,KAAK,CAAC;QAC9D;MACJ;MACA;MACA;MACAuH,EAAE,CAACgC,YAAY,EAAE;MACjB,IAAI,CAACD,oBAAoB,EAAE;QACvB,KAAK5M,QAAQ,CAACqH,yBAAyB,CAACyF,aAAa,CAAC;MAC1D;IACJ;IACA,SAASpI,UAAU,CAACpB,KAAK,EAAE;MACvB,MAAM;QAAEoB;MAAW,CAAC,GAAG9B,KAAK;MAC5B,IAAI,OAAO8B,UAAU,KAAK,UAAU,EAAE;QAClC,OAAOA,UAAU,CAACpB,KAAK,CAAC;MAC5B;MACA,OAAO,IAAI;IACf;IACA,SAASyJ,eAAe,CAAC1B,CAAC,EAAE;MACxBK,iBAAiB,CAACL,CAAC,CAAC;MACpB,IAAIA,CAAC,CAAC2B,aAAa,KAAKlG,YAAY,CAACxD,KAAK,EAAE;QACxCsI,YAAY,EAAE;MAClB;MACA,IAAI,EAAEP,CAAC,CAAC2B,aAAa,KAAK,IAAI,KACzB3B,CAAC,CAAC2B,aAAa,KAAK9F,UAAU,CAAC5D,KAAK,IACjC+H,CAAC,CAAC2B,aAAa,KAAK7F,WAAW,CAAC7D,KAAK,IACrC+H,CAAC,CAAC2B,aAAa,KAAKjG,aAAa,CAACzD,KAAK,CAAC,CAAC,EAAE;QAC/C4E,YAAY,CAAC5E,KAAK,GAAG,KAAK;MAC9B;MACA2J,aAAa,CAAC5B,CAAC,EAAE,MAAM,CAAC;MACxBjE,sBAAsB,CAAC9D,KAAK,GAAG,IAAI;IACvC;IACA,SAAS4J,gBAAgB,CAAC7B,CAAC,EAAEgB,KAAK,EAAE;MAChCV,kBAAkB,CAACN,CAAC,CAAC;MACrBtD,UAAU,CAACzE,KAAK,GAAG,IAAI;MACvB4E,YAAY,CAAC5E,KAAK,GAAG,IAAI;MACzBuI,UAAU,EAAE;MACZoB,aAAa,CAAC5B,CAAC,EAAE,OAAO,CAAC;MACzB,IAAIgB,KAAK,KAAK,CAAC,EAAE;QACbjF,sBAAsB,CAAC9D,KAAK,GAAG4D,UAAU,CAAC5D,KAAK;MACnD,CAAC,MACI,IAAI+I,KAAK,KAAK,CAAC,EAAE;QAClBjF,sBAAsB,CAAC9D,KAAK,GAAG6D,WAAW,CAAC7D,KAAK;MACpD,CAAC,MACI,IAAI+I,KAAK,KAAK,CAAC,EAAE;QAClBjF,sBAAsB,CAAC9D,KAAK,GAAGyD,aAAa,CAACzD,KAAK;MACtD;IACJ;IACA,SAAS6J,iBAAiB,CAAC9B,CAAC,EAAE;MAC1B,IAAIzI,KAAK,CAACuB,kBAAkB,EAAE;QAC1B6H,aAAa,CAACX,CAAC,CAAC;QAChB4B,aAAa,CAAC5B,CAAC,EAAE,MAAM,CAAC;MAC5B;IACJ;IACA,SAAS+B,kBAAkB,CAAC/B,CAAC,EAAE;MAC3B,IAAIzI,KAAK,CAACuB,kBAAkB,EAAE;QAC1B4D,UAAU,CAACzE,KAAK,GAAG,IAAI;QACvByI,cAAc,CAACV,CAAC,CAAC;QACjB4B,aAAa,CAAC5B,CAAC,EAAE,OAAO,CAAC;MAC7B;IACJ;IACA,SAAS4B,aAAa,CAAC5B,CAAC,EAAEvI,IAAI,EAAE;MAC5B,IAAIuI,CAAC,CAAC2B,aAAa,KAAK,IAAI,KACvB3B,CAAC,CAAC2B,aAAa,KAAK9F,UAAU,CAAC5D,KAAK,IACjC+H,CAAC,CAAC2B,aAAa,KAAK7F,WAAW,CAAC7D,KAAK,IACrC+H,CAAC,CAAC2B,aAAa,KAAKjG,aAAa,CAACzD,KAAK,IACvC+H,CAAC,CAAC2B,aAAa,KAAKlG,YAAY,CAACxD,KAAK,CAAC,EAAE;QAC7C;AAChB;AACA;MAFgB,CAGH,MACI;QACD,IAAIR,IAAI,KAAK,OAAO,EAAE;UAClByI,OAAO,CAACF,CAAC,CAAC;UACVtD,UAAU,CAACzE,KAAK,GAAG,IAAI;QAC3B,CAAC,MACI,IAAIR,IAAI,KAAK,MAAM,EAAE;UACtBsI,MAAM,CAACC,CAAC,CAAC;UACTtD,UAAU,CAACzE,KAAK,GAAG,KAAK;QAC5B;MACJ;IACJ;IACA,SAAS+J,YAAY,CAAChC,CAAC,EAAEgB,KAAK,EAAE;MAC5BD,WAAW,CAACf,CAAC,EAAEgB,KAAK,EAAE,QAAQ,CAAC;IACnC;IACA,SAASiB,WAAW,CAACjC,CAAC,EAAE;MACpBS,OAAO,CAACT,CAAC,CAAC;IACd;IACA,SAASkC,WAAW,CAAClC,CAAC,EAAE;MACpBI,OAAO,CAACJ,CAAC,CAAC;MACV,IAAIzI,KAAK,CAACoB,IAAI,EAAE;QACZ+G,aAAa,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvBG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACtB,CAAC,MACI;QACDH,aAAa,CAAC,EAAE,CAAC;QACjBG,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ;IACA,SAASsC,eAAe,CAACnC,CAAC,EAAE;MACxB,MAAM;QAAExG;MAAY,CAAC,GAAGjC,KAAK;MAC7B,IAAIiC,WAAW,EACXA,WAAW,CAACwG,CAAC,CAAC;MAClB,MAAM;QAAEoC;MAAQ,CAAC,GAAGpC,CAAC,CAACc,MAAM;MAC5B,IAAIsB,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,UAAU,EAAE;QAC/C,IAAI7K,KAAK,CAAC2B,SAAS,EAAE;UACjB,MAAM;YAAEjB,KAAK,EAAEoK;UAAU,CAAC,GAAG5G,YAAY;UACzC,IAAI4G,SAAS,EAAE;YACX,MAAM;cAAEC,IAAI;cAAEC,GAAG;cAAEC,KAAK;cAAEC;YAAO,CAAC,GAAGJ,SAAS,CAACK,qBAAqB,EAAE;YACtE,MAAMC,gBAAgB,GAAG,EAAE;YAC3B,IAAIL,IAAI,GAAGE,KAAK,GAAGG,gBAAgB,GAAG3C,CAAC,CAAC4C,OAAO,IAC3C5C,CAAC,CAAC4C,OAAO,GAAGN,IAAI,GAAGE,KAAK,IACxBD,GAAG,GAAGE,MAAM,GAAGE,gBAAgB,GAAG3C,CAAC,CAAC6C,OAAO,IAC3C7C,CAAC,CAAC6C,OAAO,GAAGN,GAAG,GAAGE,MAAM,EAAE;cAC1B;cACA;cACA;cACA;YACJ;UACJ;QACJ;QACAzC,CAAC,CAAC8C,cAAc,EAAE;QAClB,IAAI,CAACpG,UAAU,CAACzE,KAAK,EAAE;UACnB8K,KAAK,EAAE;QACX;MACJ;IACJ;IACA,SAASC,gBAAgB,GAAG;MACxB,IAAIhF,EAAE;MACNrB,QAAQ,CAAC1E,KAAK,GAAG,IAAI;MACrB,IAAIV,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3B,CAACuG,EAAE,GAAG/B,wBAAwB,CAAChE,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACiF,uBAAuB,EAAE;MAC3G;IACJ;IACA,SAASC,gBAAgB,GAAG;MACxB,IAAIlF,EAAE;MACNrB,QAAQ,CAAC1E,KAAK,GAAG,KAAK;MACtB,IAAIV,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3B,CAACuG,EAAE,GAAG/B,wBAAwB,CAAChE,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmF,uBAAuB,EAAE;MAC3G;IACJ;IACA,SAASC,yBAAyB,GAAG;MACjC,IAAI5G,iBAAiB,CAACvE,KAAK,EACvB;MACJ,IAAIwF,uBAAuB,CAACxF,KAAK,KAAK,OAAO,EACzC;MACJyF,kBAAkB,CAACzF,KAAK,GAAG,CAACyF,kBAAkB,CAACzF,KAAK;IACxD;IACA,SAASoL,6BAA6B,CAACrD,CAAC,EAAE;MACtC,IAAIxD,iBAAiB,CAACvE,KAAK,EACvB;MACJ+H,CAAC,CAAC8C,cAAc,EAAE;MAClB,MAAMQ,kBAAkB,GAAItD,CAAC,IAAK;QAC9BA,CAAC,CAAC8C,cAAc,EAAE;QAClBtN,GAAG,CAAC,SAAS,EAAE+N,QAAQ,EAAED,kBAAkB,CAAC;MAChD,CAAC;MACD7N,EAAE,CAAC,SAAS,EAAE8N,QAAQ,EAAED,kBAAkB,CAAC;MAC3C,IAAI7F,uBAAuB,CAACxF,KAAK,KAAK,WAAW,EAC7C;MACJyF,kBAAkB,CAACzF,KAAK,GAAG,IAAI;MAC/B,MAAMuL,YAAY,GAAG,MAAM;QACvB9F,kBAAkB,CAACzF,KAAK,GAAG,KAAK;QAChCzC,GAAG,CAAC,SAAS,EAAE+N,QAAQ,EAAEC,YAAY,CAAC;MAC1C,CAAC;MACD/N,EAAE,CAAC,SAAS,EAAE8N,QAAQ,EAAEC,YAAY,CAAC;IACzC;IACA,SAASC,oBAAoB,CAACzD,CAAC,EAAE;MAC7B,IAAIhC,EAAE;MACN,CAACA,EAAE,GAAGzG,KAAK,CAACkC,SAAS,MAAM,IAAI,IAAIuE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACxH,IAAI,CAACe,KAAK,EAAEyI,CAAC,CAAC;MAC7E,QAAQA,CAAC,CAAC0D,GAAG;QACT,KAAK,QAAQ;UACTC,uBAAuB,EAAE;UACzB;QACJ,KAAK,OAAO;UACRC,yBAAyB,CAAC5D,CAAC,CAAC;UAC5B;MAAM;IAElB;IACA,SAAS4D,yBAAyB,CAAC5D,CAAC,EAAE;MAClC,IAAIhC,EAAE,EAAEC,EAAE;MACV,IAAI1G,KAAK,CAACuB,kBAAkB,EAAE;QAC1B,MAAM;UAAEb,KAAK,EAAE4L;QAAQ,CAAC,GAAGhH,YAAY;QACvC,IAAIgH,OAAO,EAAE;UACT,IAAItM,KAAK,CAACoD,yBAAyB,EAAE;YACjCgJ,uBAAuB,EAAE;UAC7B;UACA;QACJ;QACA3D,CAAC,CAAC8C,cAAc,EAAE;QAClB,IAAIvL,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;UAC3B,CAACuG,EAAE,GAAGtC,aAAa,CAACzD,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+E,KAAK,EAAE;QAC9E,CAAC,MACI;UACD,CAAC9E,EAAE,GAAGpC,UAAU,CAAC5D,KAAK,MAAM,IAAI,IAAIgG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8E,KAAK,EAAE;QAC3E;MACJ;IACJ;IACA,SAASY,uBAAuB,GAAG;MAC/B,IAAIpM,KAAK,CAACuB,kBAAkB,EAAE;QAC1B+D,YAAY,CAAC5E,KAAK,GAAG,KAAK;QAC1B,KAAKtD,QAAQ,CAAC,MAAM;UAChB,IAAIqJ,EAAE;UACN,CAACA,EAAE,GAAGvC,YAAY,CAACxD,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+E,KAAK,EAAE;QAC7E,CAAC,CAAC;MACN;IACJ;IACA,SAASA,KAAK,GAAG;MACb,IAAI/E,EAAE,EAAEC,EAAE,EAAE6F,EAAE;MACd,IAAItH,iBAAiB,CAACvE,KAAK,EACvB;MACJ,IAAIV,KAAK,CAACuB,kBAAkB,EAAE;QAC1B,CAACkF,EAAE,GAAGvC,YAAY,CAACxD,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+E,KAAK,EAAE;MAC7E,CAAC,MACI;QACD,CAAC9E,EAAE,GAAGvC,aAAa,CAACzD,KAAK,MAAM,IAAI,IAAIgG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8E,KAAK,EAAE;QAC1E,CAACe,EAAE,GAAGjI,UAAU,CAAC5D,KAAK,MAAM,IAAI,IAAI6L,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACf,KAAK,EAAE;MAC3E;IACJ;IACA,SAASgB,IAAI,GAAG;MACZ,IAAI/F,EAAE;MACN,IAAI,CAACA,EAAE,GAAGvC,YAAY,CAACxD,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgG,QAAQ,CAACT,QAAQ,CAACU,aAAa,CAAC,EAAE;QACpG;QACAV,QAAQ,CAACU,aAAa,CAACF,IAAI,EAAE;MACjC;IACJ;IACA,SAASG,MAAM,GAAG;MACd,IAAIlG,EAAE,EAAEC,EAAE;MACV,CAACD,EAAE,GAAGtC,aAAa,CAACzD,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkG,MAAM,EAAE;MAC3E,CAACjG,EAAE,GAAGpC,UAAU,CAAC5D,KAAK,MAAM,IAAI,IAAIgG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACiG,MAAM,EAAE;IAC5E;IACA,SAASC,QAAQ,GAAG;MAChB,IAAI3H,iBAAiB,CAACvE,KAAK,EACvB;MACJ,IAAIyD,aAAa,CAACzD,KAAK,EACnByD,aAAa,CAACzD,KAAK,CAAC8K,KAAK,EAAE,CAAC,KAC3B,IAAIlH,UAAU,CAAC5D,KAAK,EACrB4D,UAAU,CAAC5D,KAAK,CAAC8K,KAAK,EAAE;IAChC;IACA,SAASqB,UAAU,GAAG;MAClB,MAAM;QAAEnM,KAAK,EAAEoK;MAAU,CAAC,GAAG5G,YAAY;MACzC,IAAI,CAAC4G,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAAC2B,QAAQ,CAACT,QAAQ,CAACU,aAAa,CAAC,KACjG5B,SAAS,KAAKkB,QAAQ,CAACU,aAAa,EAAE;QACtCN,uBAAuB,EAAE;MAC7B;IACJ;IACA,SAASU,QAAQ,CAACC,OAAO,EAAE;MACvB,IAAI/M,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3B,MAAM;UAAEQ,KAAK,EAAEsM;QAAW,CAAC,GAAG7I,aAAa;QAC3C6I,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACF,QAAQ,CAACC,OAAO,CAAC;MACxF,CAAC,MACI;QACD,MAAM;UAAErM,KAAK,EAAEuM;QAAQ,CAAC,GAAG3I,UAAU;QACrC2I,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACH,QAAQ,CAACC,OAAO,CAAC;MAC/E;IACJ;IACA,SAAS/E,UAAU,CAACtH,KAAK,EAAE;MACvB,MAAM;QAAER,IAAI;QAAEkB,IAAI;QAAED;MAAS,CAAC,GAAGnB,KAAK;MACtC,IAAI,CAACoB,IAAI,IAAID,QAAQ,EAAE;QACnB,IAAIjB,IAAI,KAAK,UAAU,EAAE;UACrB,MAAM;YAAEQ,KAAK,EAAE4G;UAAiB,CAAC,GAAGlD,mBAAmB;UACvD,IAAIkD,gBAAgB,EAAE;YAClBA,gBAAgB,CAAC4F,WAAW,GAAG,CAACxM,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,IAAI,MAAM;UAC7F;QACJ,CAAC,MACI;UACD,MAAM;YAAEA,KAAK,EAAEyM;UAAc,CAAC,GAAG9I,gBAAgB;UACjD,IAAI8I,aAAa,EAAE;YACf,IAAIzM,KAAK,EAAE;cACPyM,aAAa,CAACD,WAAW,GAAGxM,KAAK;YACrC,CAAC,MACI;cACDyM,aAAa,CAACC,SAAS,GAAG,QAAQ;YACtC;UACJ;QACJ;MACJ;IACJ;IACA,SAASC,0BAA0B,GAAG;MAClC7G,mBAAmB,EAAE;IACzB;IACA,MAAM8G,mBAAmB,GAAGjQ,GAAG,CAAC;MAC5B2N,GAAG,EAAE;IACT,CAAC,CAAC;IACF,SAASuC,oBAAoB,CAAC9E,CAAC,EAAE;MAC7B,IAAIhC,EAAE;MACN,MAAM;QAAE+G;MAAU,CAAC,GAAG/E,CAAC,CAACc,MAAM;MAC9B+D,mBAAmB,CAAC5M,KAAK,CAACsK,GAAG,GAAI,GAAE,CAACwC,SAAU,IAAG;MACjD,CAAC/G,EAAE,GAAG/B,wBAAwB,CAAChE,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqD,oBAAoB,EAAE;IACxG;IACA,IAAI2D,qBAAqB,GAAG,IAAI;IAChC/P,WAAW,CAAC,MAAM;MACd,MAAM;QAAEyD,QAAQ;QAAEjB;MAAK,CAAC,GAAGF,KAAK;MAChC,IAAImB,QAAQ,IAAIjB,IAAI,KAAK,UAAU,EAAE;QACjCuN,qBAAqB,GAAGhQ,KAAK,CAACqH,cAAc,EAAGpE,KAAK,IAAK;UACrD,IAAI,CAACF,KAAK,CAACiF,OAAO,CAAC/E,KAAK,CAAC,IAAIA,KAAK,KAAK6E,UAAU,EAAE;YAC/CyC,UAAU,CAACtH,KAAK,CAAC;UACrB;QACJ,CAAC,CAAC;MACN,CAAC,MACI;QACD+M,qBAAqB,KAAK,IAAI,IAAIA,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,EAAE;MACzG;IACJ,CAAC,CAAC;IACF,IAAIC,qBAAqB,GAAG,IAAI;IAChChQ,WAAW,CAAC,MAAM;MACd,IAAIsC,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;QAC3BwN,qBAAqB,GAAGjQ,KAAK,CAACqH,cAAc,EAAGpE,KAAK,IAAK;UACrD,IAAI+F,EAAE;UACN,IAAI,CAACjG,KAAK,CAACiF,OAAO,CAAC/E,KAAK,CAAC,IAAIA,KAAK,KAAK6E,UAAU,EAAE;YAC/C,CAACkB,EAAE,GAAG/B,wBAAwB,CAAChE,KAAK,MAAM,IAAI,IAAI+F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqD,oBAAoB,EAAE;UACxG;QACJ,CAAC,CAAC;MACN,CAAC,MACI;QACD4D,qBAAqB,KAAK,IAAI,IAAIA,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,EAAE;MACzG;IACJ,CAAC,CAAC;IACF/P,OAAO,CAAC4B,iBAAiB,EAAE;MACvBuF,cAAc;MACdiD,YAAY;MACZlE;IACJ,CAAC,CAAC;IACF,MAAM8J,YAAY,GAAG;MACjBzJ,YAAY;MACZI,UAAU;MACVH,aAAa;MACbyJ,aAAa,EAAEvI,cAAc;MAC7BmG,KAAK;MACLgB,IAAI;MACJG,MAAM;MACNE,UAAU;MACVD,QAAQ;MACRE;IACJ,CAAC;IACD,MAAMe,aAAa,GAAGvP,MAAM,CAAC,OAAO,EAAE0F,YAAY,EAAEH,kBAAkB,CAAC;IACvE,MAAMiK,UAAU,GAAG5Q,QAAQ,CAAC,MAAM;MAC9B,MAAM;QAAEwD,KAAK,EAAEE;MAAK,CAAC,GAAGoE,aAAa;MACrC,MAAM;QAAE+I,MAAM,EAAE;UAAEC;QAAqB,CAAC;QAAEC,IAAI,EAAE;UAAEC,KAAK;UAAEC,YAAY;UAAEC,SAAS;UAAEC,UAAU;UAAEC,eAAe;UAAEC,iBAAiB;UAAEC,mBAAmB;UAAEC,MAAM;UAAEC,cAAc;UAAEC,WAAW;UAAEC,WAAW;UAAEC,gBAAgB;UAAEC,wBAAwB;UAAEC,kBAAkB;UAAEC,aAAa;UAAEC,UAAU;UAAEC,iBAAiB;UAAEC,cAAc;UAAEC,QAAQ;UAAEC,iBAAiB;UAAEC,qBAAqB;UAAEC,aAAa;UAAEC,kBAAkB;UAAEC,kBAAkB;UAAEC,eAAe;UAAEC,mBAAmB;UAAEC,WAAW;UAAEC,gBAAgB;UAAEC,gBAAgB;UAAEC,SAAS;UAAEC,UAAU;UAAEC,eAAe;UAAEC,iBAAiB;UAAEC,SAAS;UAAEC,iBAAiB;UAAEC,eAAe;UAAEC,cAAc;UAAEC,sBAAsB;UAAEC,cAAc;UAAEC,gBAAgB;UAAEC,YAAY;UAAEC,iBAAiB;UAAEC,mBAAmB;UAAE,CAAC1R,SAAS,CAAC,SAAS,EAAE0B,IAAI,CAAC,GAAGiQ,OAAO;UAAE,CAAC3R,SAAS,CAAC,UAAU,EAAE0B,IAAI,CAAC,GAAGkQ,QAAQ;UAAE,CAAC5R,SAAS,CAAC,QAAQ,EAAE0B,IAAI,CAAC,GAAGsK;QAAO;MAAE,CAAC,GAAGjH,QAAQ,CAACvD,KAAK;MAC33B,MAAM;QAAEqK,IAAI,EAAEgG,WAAW;QAAEC,KAAK,EAAEC;MAAa,CAAC,GAAGlT,UAAU,CAAC8S,OAAO,CAAC;MACtE,OAAO;QACH,YAAY,EAAE7C,oBAAoB;QAClC,sBAAsB,EAAEsC,cAAc;QACtC,+BAA+B,EAAEC,sBAAsB;QACvD,WAAW,EAAErC,KAAK;QAClB,eAAe,EAAE4C,QAAQ;QACzB,mBAAmB,EAAE3C,YAAY;QACjC,YAAY,EAAEjD,MAAM;QACpB,kBAAkB,EAAE6F,WAAW;QAC/B,mBAAmB,EAAEE,YAAY;QACjC,gBAAgB,EAAE7C,SAAS;QAC3B,iBAAiB,EAAEC,UAAU;QAC7B,2BAA2B,EAAEG,mBAAmB;QAChD,YAAY,EAAEC,MAAM;QACpB,qBAAqB,EAAEC,cAAc;QACrC,kBAAkB,EAAEC,WAAW;QAC/B,kBAAkB,EAAEC,WAAW;QAC/B,uBAAuB,EAAEC,gBAAgB;QACzC,gCAAgC,EAAEC,wBAAwB;QAC1D,eAAe,EAAEM,QAAQ;QACzB,0BAA0B,EAAEL,kBAAkB;QAC9C,oBAAoB,EAAEC,aAAa;QACnC,iBAAiB,EAAEC,UAAU;QAC7B,yBAAyB,EAAEC,iBAAiB;QAC5C,sBAAsB,EAAEC,cAAc;QACtC,mBAAmB,EAAEuB,YAAY;QACjC;QACA,yBAAyB,EAAEnC,iBAAiB;QAC5C,yBAAyB,EAAEc,iBAAiB;QAC5C,8BAA8B,EAAEC,qBAAqB;QACrD,oBAAoB,EAAEC,aAAa;QACnC,0BAA0B,EAAEC,kBAAkB;QAC9C,0BAA0B,EAAEC,kBAAkB;QAC9C,2BAA2B,EAAEmB,mBAAmB;QAChD;QACA,uBAAuB,EAAEtC,eAAe;QACxC,uBAAuB,EAAEoB,eAAe;QACxC,4BAA4B,EAAEC,mBAAmB;QACjD,kBAAkB,EAAEC,WAAW;QAC/B,wBAAwB,EAAEC,gBAAgB;QAC1C,wBAAwB,EAAEC,gBAAgB;QAC1C,yBAAyB,EAAEa,iBAAiB;QAC5C;QACA,iBAAiB,EAAEX,UAAU;QAC7B,gBAAgB,EAAED,SAAS;QAC3B,uBAAuB,EAAEE,eAAe;QACxC,yBAAyB,EAAEC,iBAAiB;QAC5C,gBAAgB,EAAEC,SAAS;QAC3B,sBAAsB,EAAEK,cAAc;QACtC,wBAAwB,EAAEC,gBAAgB;QAC1C,yBAAyB,EAAEL,iBAAiB;QAC5C,uBAAuB,EAAEC;MAC7B,CAAC;IACL,CAAC,CAAC;IACF,MAAMa,gBAAgB,GAAGnN,mBAAmB,GACtChF,aAAa,CAAC,OAAO,EAAE7B,QAAQ,CAAC,MAAM;MACpC,MAAM;QAAEwD,KAAK,EAAEE;MAAK,CAAC,GAAGoE,aAAa;MACrC,OAAOpE,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,EAAEkN,UAAU,EAAE9N,KAAK,CAAC,GACpBK,SAAS;IACf,OAAOP,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE4N,YAAY,CAAC,EAAE;MAClD;MACAzJ,YAAY;MACZI,UAAU;MACVD,gBAAgB;MAChBE,WAAW;MACXJ,aAAa;MACbC,mBAAmB;MACnBM,wBAAwB;MACxB;MACAyM,UAAU,EAAEtD,aAAa;MAAEuD,iBAAiB,EAAExM,oBAAoB;MAAEgB,WAAW,EAAEd,cAAc;MAAEuM,eAAe,EAAElL,kBAAkB;MAAEN,iBAAiB,EAAEL,oBAAoB;MAAE8L,gBAAgB,EAAE5L,mBAAmB;MAAE6L,gBAAgB,EAAEzL,mBAAmB;MAAEG,WAAW,EAAEF,cAAc;MAAEJ,WAAW,EAAEN,cAAc;MAAEmM,SAAS,EAAElM,YAAY;MAAEU,eAAe;MAAEyL,UAAU,EAAEzM,aAAa;MAAE0M,cAAc,EAAEzM,iBAAiB;MAAE0M,mBAAmB,EAAEvL,sBAAsB;MAAEwL,eAAe,EAAE/N,kBAAkB;MAAEgO,cAAc,EAAE/N,iBAAiB;MAAEgO,oBAAoB,EAAE5L,uBAAuB;MAAE6L,gBAAgB,EAAEzE,mBAAmB;MAAE0E,YAAY,EAAE9M,eAAe;MAAE+M,4BAA4B,EAAE1L,+BAA+B;MACtsB;MACAgH,oBAAoB;MACpBlE,sBAAsB;MACtBC,oBAAoB;MACpBE,WAAW;MACXW,eAAe;MACfG,gBAAgB;MAChBC,iBAAiB;MACjBC,kBAAkB;MAClBiB,gBAAgB;MAChBE,gBAAgB;MAChBf,eAAe;MACfH,YAAY;MACZC,WAAW;MACXC,WAAW;MACXkB,yBAAyB;MACzBC,6BAA6B;MAC7BI,oBAAoB;MACpBmB,0BAA0B;MAAE6E,0BAA0B,EAAE,MAAM;QAC1D,OAAO/N,aAAa,CAACzD,KAAK;MAC9B,CAAC;MAAEyR,WAAW,EAAElO,QAAQ;MAAEmO,OAAO,EAAErO,mBAAmB,GAAG1D,SAAS,GAAGyN,UAAU;MAAEuE,UAAU,EAAEnB,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACmB,UAAU;MAAEC,QAAQ,EAAEpB,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACoB;IAAS,CAAC,CAAC;EAChT,CAAC;EACDC,MAAM,GAAG;IACL,IAAI9L,EAAE,EAAEC,EAAE;IACV,MAAM;MAAEkL,eAAe;MAAEI,YAAY;MAAEK,UAAU;MAAEnS,IAAI;MAAEoS;IAAS,CAAC,GAAG,IAAI;IAC1E,MAAME,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1BF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,EAAE;IAC9D,OAAQrV,CAAC,CAAC,KAAK,EAAE;MAAEI,GAAG,EAAE,cAAc;MAAEoV,KAAK,EAAE,CACtC,GAAEb,eAAgB,QAAO,EAC1BS,UAAU,EACVL,YAAY,IAAK,GAAEJ,eAAgB,WAAUI,YAAa,SAAQ,EAClE;QACI,CAAE,GAAEJ,eAAgB,aAAY,GAAG,IAAI,CAACT,UAAU;QAClD,CAAE,GAAES,eAAgB,kBAAiB,GAAG,IAAI,CAACF,cAAc;QAC3D,CAAE,GAAEE,eAAgB,kBAAiB,GAAG1R,IAAI,KAAK,UAAU;QAC3D,CAAE,GAAE0R,eAAgB,mBAAkB,GAAG,IAAI,CAACjQ,SAAS,IAAI,CAAC,IAAI,CAACR,QAAQ;QACzE,CAAE,GAAEyQ,eAAgB,kBAAiB,GAAG,IAAI,CAACzQ,QAAQ;QACrD,CAAE,GAAEyQ,eAAgB,eAAc,GAAG,IAAI,CAAC7Q,KAAK,IAAI,EAAEb,IAAI,KAAK,UAAU,CAAC;QACzE,CAAE,GAAE0R,eAAgB,cAAa,GAAG,IAAI,CAACxQ,IAAI;QAC7C,CAAE,GAAEwQ,eAAgB,eAAc,GAAG,IAAI,CAAC3L,WAAW;QACrD,CAAE,GAAE2L,eAAgB,kBAAiB,GAAG,IAAI,CAACnQ;MACjD,CAAC,CACJ;MAAE9B,KAAK,EAAE,IAAI,CAACyS,OAAO;MAAEM,QAAQ,EAAE,CAAC,IAAI,CAAChB,cAAc,IAAI,IAAI,CAACnQ,kBAAkB,IAAI,CAAC,IAAI,CAACiQ,SAAS,GAC9F,CAAC,GACDnR,SAAS;MAAEgC,OAAO,EAAE,IAAI,CAACmI,kBAAkB;MAAElI,MAAM,EAAE,IAAI,CAACiI,iBAAiB;MAAEhI,OAAO,EAAE,IAAI,CAACmI,WAAW;MAAEzI,WAAW,EAAE,IAAI,CAAC2I,eAAe;MAAE+H,YAAY,EAAE,IAAI,CAAClH,gBAAgB;MAAEmH,YAAY,EAAE,IAAI,CAACjH,gBAAgB;MAAEkH,kBAAkB,EAAE,IAAI,CAACxJ,sBAAsB;MAAEyJ,gBAAgB,EAAE,IAAI,CAACxJ,oBAAoB;MAAEnH,OAAO,EAAE,IAAI,CAACA,OAAO;MAAED,SAAS,EAAE,IAAI,CAACgK;IAAqB,CAAC,EACtXjP,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAgB,CAAC,EAClDxS,kBAAkB,CAACoT,MAAM,CAACO,MAAM,EAAGC,QAAQ,IAAKA,QAAQ,IAAK/V,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAgB,CAAC,EAAEoB,QAAQ,CAAE,CAAC,EAChI9S,IAAI,KAAK,UAAU,GAAIjD,CAAC,CAACyB,UAAU,EAAE;MAAErB,GAAG,EAAE,0BAA0B;MAAEoV,KAAK,EAAG,GAAEb,eAAgB,kBAAiB;MAAEqB,SAAS,EAAE,IAAI,CAACf,0BAA0B;MAAEgB,sBAAsB,EAAE,IAAI;MAAEC,mBAAmB,EAAE,IAAI;MAAEC,kBAAkB,EAAE;IAAK,CAAC,EAAE;MAClPhT,OAAO,EAAE,MAAM;QACX,IAAIqG,EAAE,EAAEC,EAAE;QACV,MAAM;UAAEuL;QAA6B,CAAC,GAAG,IAAI;QAC7C,MAAMoB,yBAAyB,GAAG;UAC9BpI,KAAK,EAAE,IAAI,CAAC9J,QAAQ,IAChB8Q,4BAA4B,IAC3B,GAAEA,4BAA6B;QACxC,CAAC;QACD,OAAQhV,CAAC,CAACW,QAAQ,EAAE,IAAI,EACpBX,CAAC,CAAC,UAAU,EAAE6C,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACF,UAAU,EAAE;UAAExC,GAAG,EAAE,eAAe;UAAEoV,KAAK,EAAE,CACvE,GAAEb,eAAgB,qBAAoB,EACvC,CAACnL,EAAE,GAAG,IAAI,CAAC5G,UAAU,MAAM,IAAI,IAAI4G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgM,KAAK,CACvE;UAAE/Q,SAAS,EAAE,IAAI,CAACA,SAAS;UAAEb,IAAI,EAAEC,MAAM,CAAC,IAAI,CAACD,IAAI,CAAC;UAAEN,WAAW,EAAE,IAAI,CAACA,WAAW;UAAEG,KAAK,EAAE,IAAI,CAACkF,WAAW;UAAEjF,QAAQ,EAAE,IAAI,CAAC+Q,cAAc;UAAEzQ,SAAS,EAAE,IAAI,CAACA,SAAS;UAAED,SAAS,EAAE,IAAI,CAACA,SAAS;UAAEM,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAEoR,QAAQ,EAAE,IAAI,CAACnR,kBAAkB,IAAI,CAAC,IAAI,CAACiQ,SAAS,GAC3Q,CAAC,CAAC,GACFnR,SAAS;UAAEV,KAAK,EAAE,CACpB,IAAI,CAACgS,mBAAmB,CAAC,CAAC,CAAC,EAC3B,CAACjL,EAAE,GAAG,IAAI,CAAC7G,UAAU,MAAM,IAAI,IAAI6G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/G,KAAK,EACpE0T,yBAAyB,CAC5B;UAAE/Q,MAAM,EAAE,IAAI,CAAC6H,eAAe;UAAE9H,OAAO,EAAGoG,CAAC,IAAK,IAAI,CAAC6B,gBAAgB,CAAC7B,CAAC,EAAE,CAAC,CAAC;UAAErG,OAAO,EAAE,IAAI,CAACoH,WAAW;UAAEhH,QAAQ,EAAE,IAAI,CAACiI,YAAY;UAAE6I,QAAQ,EAAE,IAAI,CAAC/F;QAAqB,CAAC,CAAC,CAAC,EACjL,IAAI,CAAC+D,gBAAgB,GAAIrU,CAAC,CAAC,KAAK,EAAE;UAAEwV,KAAK,EAAG,GAAEb,eAAgB,qBAAoB;UAAEjS,KAAK,EAAE,CACnF,IAAI,CAACoS,gBAAgB,EACrBsB,yBAAyB,CAC5B;UAAElH,GAAG,EAAE;QAAc,CAAC,EAAE,IAAI,CAACtG,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAI,IAAI,EAC/D,IAAI,CAAC1E,QAAQ,GAAIlE,CAAC,CAACe,eAAe,EAAE;UAAEuV,QAAQ,EAAE,IAAI,CAAClG;QAA2B,CAAC,EAAE;UAC/EjN,OAAO,EAAE,MAAOnD,CAAC,CAAC,KAAK,EAAE;YAAEI,GAAG,EAAE,qBAAqB;YAAEoV,KAAK,EAAG,GAAEb,eAAgB,yBAAwB;YAAEzF,GAAG,EAAE;UAAS,CAAC;QAC9H,CAAC,CAAC,GAAI,IAAI,CAAC;MACnB;IACJ,CAAC,CAAC,GAAKlP,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAe,CAAC,EACxD3U,CAAC,CAAC,OAAO,EAAE6C,MAAM,CAACC,MAAM,CAAC;MAAEG,IAAI,EAAEA,IAAI,KAAK,UAAU,IAC5C,IAAI,CAAC4R,oBAAoB,IACzB,IAAI,CAACT,eAAe,GAClB,MAAM,GACNnR;IAAK,CAAC,EAAE,IAAI,CAACL,UAAU,EAAE;MAAExC,GAAG,EAAE,YAAY;MAAEoV,KAAK,EAAE,CACtD,GAAEb,eAAgB,kBAAiB,EACpC,CAACnL,EAAE,GAAG,IAAI,CAAC5G,UAAU,MAAM,IAAI,IAAI4G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgM,KAAK,CACvE;MAAE9S,KAAK,EAAE,CACN,IAAI,CAACgS,mBAAmB,CAAC,CAAC,CAAC,EAC3B,CAACjL,EAAE,GAAG,IAAI,CAAC7G,UAAU,MAAM,IAAI,IAAI6G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/G,KAAK,CACvE;MAAE+S,QAAQ,EAAE,IAAI,CAACnR,kBAAkB,IAAI,CAAC,IAAI,CAACiQ,SAAS,GAAG,CAAC,CAAC,GAAGnR,SAAS;MAAEE,WAAW,EAAE,IAAI,CAACsF,iBAAiB,CAAC,CAAC,CAAC;MAAElF,QAAQ,EAAE,IAAI,CAAC+Q,cAAc;MAAEzQ,SAAS,EAAE,IAAI,CAACA,SAAS;MAAED,SAAS,EAAE,IAAI,CAACA,SAAS;MAAEN,KAAK,EAAEF,KAAK,CAACiF,OAAO,CAAC,IAAI,CAACG,WAAW,CAAC,GACvO,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,GACnB,IAAI,CAACA,WAAW;MAAEtE,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEI,SAAS,EAAE,IAAI,CAACA,SAAS;MAAEd,IAAI,EAAE,IAAI,CAACiC,QAAQ;MAAEP,MAAM,EAAE,IAAI,CAAC6H,eAAe;MAAE9H,OAAO,EAAGoG,CAAC,IAAK,IAAI,CAAC6B,gBAAgB,CAAC7B,CAAC,EAAE,CAAC,CAAC;MAAErG,OAAO,EAAGqG,CAAC,IAAK,IAAI,CAACe,WAAW,CAACf,CAAC,EAAE,CAAC,CAAC;MAAEjG,QAAQ,EAAGiG,CAAC,IAAK,IAAI,CAACgC,YAAY,CAAChC,CAAC,EAAE,CAAC;IAAE,CAAC,CAAC,CAAC,EACpQ,IAAI,CAAC6I,gBAAgB,GAAIrU,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAqB,CAAC,EAChF3U,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC4I,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,IAAI,EACvD,IAAI,CAAC1E,QAAQ,GAAIlE,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB,sBAAqB;MAAEzF,GAAG,EAAE,QAAQ;MAAE9O,GAAG,EAAE;IAAmB,CAAC,EAAE,QAAQ,CAAC,GAAI,IAAI,CAAE,EAC9I,CAAC,IAAI,CAAC+D,IAAI,IACNhC,kBAAkB,CAACoT,MAAM,CAACgB,MAAM,EAAGR,QAAQ,IAAK;MAC5C,OAAOA,QAAQ,IACX,IAAI,CAAC9R,SAAS,IACd,IAAI,CAACU,SAAS,IACd,IAAI,CAACkQ,oBAAoB,IACzB,IAAI,CAACjQ,OAAO,KAAKxB,SAAS,GAAIpD,CAAC,CAAC,KAAK,EAAE;QAAEwV,KAAK,EAAG,GAAEb,eAAgB;MAAgB,CAAC,EAAE,CACtFxS,kBAAkB,CAACoT,MAAM,CAAC,wBAAwB,CAAC,EAAGQ,QAAQ,IAAK;QAC/D,OAAQ,CAAC,IAAI,CAAC9R,SAAS,IAAI8R,QAAQ,KAAM/V,CAAC,CAACsB,UAAU,EAAE;UAAEkV,SAAS,EAAE7B,eAAe;UAAE8B,IAAI,EAAE,IAAI,CAAC1N,eAAe;UAAEvD,OAAO,EAAE,IAAI,CAACkI;QAAY,CAAC,EAAE;UAC1IpK,WAAW,EAAE,MAAMyS,QAAQ;UAC3BW,IAAI,EAAE,MAAM;YAAE,IAAIlN,EAAE,EAAEC,EAAE;YAAE,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAAC+L,MAAM,EAAE,YAAY,CAAC,MAAM,IAAI,IAAI9L,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzH,IAAI,CAACwH,EAAE,CAAC;UAAE;QAC/H,CAAC,CAAE;MACP,CAAC,CAAC,EACF,CAAC,IAAI,CAACnD,2BAA2B,GAAG0P,QAAQ,GAAG,IAAI,EACnD,IAAI,CAACnR,OAAO,KAAKxB,SAAS,GAAIpD,CAAC,CAACwB,WAAW,EAAE;QAAEgV,SAAS,EAAE7B,eAAe;QAAE/P,OAAO,EAAE,IAAI,CAACA,OAAO;QAAE+R,SAAS,EAAE,KAAK;QAAEC,SAAS,EAAE,KAAK;QAAElU,KAAK,EAAE,IAAI,CAACyS;MAAQ,CAAC,CAAC,GAAI,IAAI,EACpK,IAAI,CAAC9O,2BAA2B,GAAG0P,QAAQ,GAAG,IAAI,EAClD,IAAI,CAACpR,SAAS,IAAI,IAAI,CAAC1B,IAAI,KAAK,UAAU,GAAIjD,CAAC,CAACyC,SAAS,EAAE,IAAI,EAAE;QAC7DU,OAAO,EAAGJ,KAAK,IAAK;UAAE,IAAIyG,EAAE;UAAE,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAACsB,KAAK,MAAM,IAAI,IAAIrN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACxH,IAAI,CAACuT,MAAM,EAAExS,KAAK,CAAC;QAAE;MAC1H,CAAC,CAAC,GAAI,IAAI,EACV,IAAI,CAAC8R,oBAAoB,IAAI,IAAI,CAAC5R,IAAI,KAAK,UAAU,GAAIjD,CAAC,CAAC,KAAK,EAAE;QAAEwV,KAAK,EAAG,GAAEb,eAAgB,aAAY;QAAE3P,WAAW,EAAE,IAAI,CAAC6J,6BAA6B;QAAEvJ,OAAO,EAAE,IAAI,CAACsJ;MAA0B,CAAC,EAAE,IAAI,CAACwF,eAAe,GACtNlS,WAAW,CAACqT,MAAM,CAAC,uBAAuB,CAAC,EAAE,MAAM,CACjDvV,CAAC,CAACuB,SAAS,EAAE;QAAEiV,SAAS,EAAE7B;MAAgB,CAAC,EAAE;QAAExR,OAAO,EAAE,MAAMnD,CAAC,CAACmB,OAAO,EAAE,IAAI;MAAE,CAAC,CAAC,CACpF,CAAC,GACAe,WAAW,CAACqT,MAAM,CAAC,yBAAyB,CAAC,EAAE,MAAM,CACnDvV,CAAC,CAACuB,SAAS,EAAE;QAAEiV,SAAS,EAAE7B;MAAgB,CAAC,EAAE;QAAExR,OAAO,EAAE,MAAMnD,CAAC,CAACoB,UAAU,EAAE,IAAI;MAAE,CAAC,CAAC,CACvF,CAAC,CAAC,GAAI,IAAI,CAClB,CAAC,GAAI,IAAI;IACd,CAAC,CAAC,CAAC,EACX,IAAI,CAAC+C,IAAI,GAAInE,CAAC,CAAC,MAAM,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAmB,CAAC,EAAEzS,WAAW,CAACqT,MAAM,CAACnR,SAAS,EAAE,MAAM,CAAC,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC,GAAI,IAAI,EACvI,IAAI,CAACD,IAAI,GAAInE,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAgB,CAAC,EAC/D3U,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAe,CAAC,EACjD3U,CAAC,CAAC,OAAO,EAAE;MAAEI,GAAG,EAAE,aAAa;MAAE6C,IAAI,EAAE,IAAI,CAACA,IAAI;MAAEuS,KAAK,EAAG,GAAEb,eAAgB,kBAAiB;MAAEc,QAAQ,EAAE,IAAI,CAACnR,kBAAkB,IAAI,CAAC,IAAI,CAACiQ,SAAS,GAAG,CAAC,CAAC,GAAGnR,SAAS;MAAEE,WAAW,EAAE,IAAI,CAACsF,iBAAiB,CAAC,CAAC,CAAC;MAAElF,QAAQ,EAAE,IAAI,CAAC+Q,cAAc;MAAEzQ,SAAS,EAAE,IAAI,CAACA,SAAS;MAAED,SAAS,EAAE,IAAI,CAACA,SAAS;MAAEN,KAAK,EAAEF,KAAK,CAACiF,OAAO,CAAC,IAAI,CAACG,WAAW,CAAC,GAC/T,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,GACnBvF,SAAS;MAAEiB,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAE3B,KAAK,EAAE,IAAI,CAACgS,mBAAmB,CAAC,CAAC,CAAC;MAAErP,MAAM,EAAE,IAAI,CAAC6H,eAAe;MAAE9H,OAAO,EAAGoG,CAAC,IAAK,IAAI,CAAC6B,gBAAgB,CAAC7B,CAAC,EAAE,CAAC,CAAC;MAAErG,OAAO,EAAGqG,CAAC,IAAK,IAAI,CAACe,WAAW,CAACf,CAAC,EAAE,CAAC,CAAC;MAAEjG,QAAQ,EAAGiG,CAAC,IAAK,IAAI,CAACgC,YAAY,CAAChC,CAAC,EAAE,CAAC;IAAE,CAAC,CAAC,EAChP,IAAI,CAAC8I,gBAAgB,GAAItU,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAqB,CAAC,EAChF3U,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC4I,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,EAC5DzG,kBAAkB,CAACoT,MAAM,CAACgB,MAAM,EAAGR,QAAQ,IAAK;MAC5C,OAAQ,CAAC,IAAI,CAAC9R,SAAS,IAAI8R,QAAQ,KAAM/V,CAAC,CAAC,KAAK,EAAE;QAAEwV,KAAK,EAAG,GAAEb,eAAgB;MAAgB,CAAC,EAAE,CAC7F,IAAI,CAAC1Q,SAAS,IAAKjE,CAAC,CAACsB,UAAU,EAAE;QAAEkV,SAAS,EAAE7B,eAAe;QAAE8B,IAAI,EAAE,IAAI,CAAC1N,eAAe;QAAEvD,OAAO,EAAE,IAAI,CAACkI;MAAY,CAAC,EAAE;QACpHgJ,IAAI,EAAE,MAAM;UAAE,IAAIlN,EAAE;UAAE,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI/L,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACxH,IAAI,CAACuT,MAAM,CAAC;QAAE,CAAC;QAChHjS,WAAW,EAAE,MAAM;UAAE,IAAIkG,EAAE;UAAE,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAAC,wBAAwB,CAAC,MAAM,IAAI,IAAI/L,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACxH,IAAI,CAACuT,MAAM,CAAC;QAAE;MACtI,CAAC,CAAE,EACHQ,QAAQ,CACX,CAAE;IACP,CAAC,CAAC,CAAC,GAAI,IAAI,EACf,IAAI,CAACnB,cAAc,GAAI5U,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAgB,CAAC,CAAC,GAAI,IAAI,EACtF,IAAI,CAACC,cAAc,GAAI5U,CAAC,CAAC,KAAK,EAAE;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAAsB,CAAC,CAAC,GAAI,IAAI,EAC5F,IAAI,CAAChQ,SAAS,IAAI1B,IAAI,KAAK,UAAU,GAAIjD,CAAC,CAACyC,SAAS,EAAE,IAAI,EAAE;MACxDU,OAAO,EAAGJ,KAAK,IAAK;QAChB,IAAIyG,EAAE;QACN,MAAM;UAAEzE;QAAY,CAAC,GAAG,IAAI;QAC5B,IAAIA,WAAW,EAAE;UACb,OAAOA,WAAW,CAAChC,KAAK,CAAC;QAC7B;QACA,OAAO,CAACyG,EAAE,GAAG+L,MAAM,CAACsB,KAAK,MAAM,IAAI,IAAIrN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACxH,IAAI,CAACuT,MAAM,EAAExS,KAAK,CAAC;MAC1F;IACJ,CAAC,CAAC,GAAI,IAAI,CAAC;EACnB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}