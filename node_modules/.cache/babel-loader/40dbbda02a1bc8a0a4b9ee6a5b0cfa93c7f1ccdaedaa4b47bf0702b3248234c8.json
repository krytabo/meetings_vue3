{"ast":null,"code":"import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from '../../tree-select/src/interface';\nexport function useKeyboard({\n  props,\n  fNodesRef,\n  mergedExpandedKeysRef,\n  mergedSelectedKeysRef,\n  handleSelect,\n  handleSwitcherClick\n}) {\n  const {\n    value: mergedSelectedKeys\n  } = mergedSelectedKeysRef;\n  // If it's used in tree-select, make it take over pending state\n  const treeSelectInjection = inject(treeSelectInjectionKey, null);\n  const pendingNodeKeyRef = treeSelectInjection ? treeSelectInjection.pendingNodeKeyRef : ref(mergedSelectedKeys.length ? mergedSelectedKeys[mergedSelectedKeys.length - 1] : null);\n  function handleKeydown(e) {\n    if (!props.keyboard) return;\n    const {\n      value: pendingNodeKey\n    } = pendingNodeKeyRef;\n    if (pendingNodeKey === null) {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n      }\n      if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        if (pendingNodeKey === null) {\n          const {\n            value: fNodes\n          } = fNodesRef;\n          let fIndex = 0;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    } else {\n      const {\n        value: fNodes\n      } = fNodesRef;\n      let fIndex = fNodes.findIndex(tmNode => tmNode.key === pendingNodeKey);\n      if (!~fIndex) return;\n      if (e.key === 'Enter') {\n        handleSelect(fNodes[fIndex]);\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        fIndex += 1;\n        while (fIndex < fNodes.length) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex += 1;\n        }\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        fIndex -= 1;\n        while (fIndex >= 0) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex -= 1;\n        }\n      } else if (e.key === 'ArrowLeft') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf || !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          const parentTmNode = pendingNode.getParent();\n          if (parentTmNode) {\n            pendingNodeKeyRef.value = parentTmNode.key;\n          }\n        } else {\n          handleSwitcherClick(pendingNode);\n        }\n      } else if (e.key === 'ArrowRight') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf) return;\n        if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          handleSwitcherClick(pendingNode);\n        } else {\n          // Tha same as ArrowDown\n          fIndex += 1;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    }\n  }\n  return {\n    pendingNodeKeyRef,\n    handleKeydown\n  };\n}","map":{"version":3,"names":["inject","ref","treeSelectInjectionKey","useKeyboard","props","fNodesRef","mergedExpandedKeysRef","mergedSelectedKeysRef","handleSelect","handleSwitcherClick","value","mergedSelectedKeys","treeSelectInjection","pendingNodeKeyRef","length","handleKeydown","e","keyboard","pendingNodeKey","key","preventDefault","includes","fNodes","fIndex","disabled","findIndex","tmNode","pendingNode","isLeaf","parentTmNode","getParent"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/tree/src/keyboard.js"],"sourcesContent":["import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from '../../tree-select/src/interface';\nexport function useKeyboard({ props, fNodesRef, mergedExpandedKeysRef, mergedSelectedKeysRef, handleSelect, handleSwitcherClick }) {\n    const { value: mergedSelectedKeys } = mergedSelectedKeysRef;\n    // If it's used in tree-select, make it take over pending state\n    const treeSelectInjection = inject(treeSelectInjectionKey, null);\n    const pendingNodeKeyRef = treeSelectInjection\n        ? treeSelectInjection.pendingNodeKeyRef\n        : ref(mergedSelectedKeys.length\n            ? mergedSelectedKeys[mergedSelectedKeys.length - 1]\n            : null);\n    function handleKeydown(e) {\n        if (!props.keyboard)\n            return;\n        const { value: pendingNodeKey } = pendingNodeKeyRef;\n        if (pendingNodeKey === null) {\n            if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n                e.preventDefault();\n            }\n            if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n                if (pendingNodeKey === null) {\n                    const { value: fNodes } = fNodesRef;\n                    let fIndex = 0;\n                    while (fIndex < fNodes.length) {\n                        if (!fNodes[fIndex].disabled) {\n                            pendingNodeKeyRef.value = fNodes[fIndex].key;\n                            break;\n                        }\n                        fIndex += 1;\n                    }\n                }\n            }\n        }\n        else {\n            const { value: fNodes } = fNodesRef;\n            let fIndex = fNodes.findIndex((tmNode) => tmNode.key === pendingNodeKey);\n            if (!~fIndex)\n                return;\n            if (e.key === 'Enter') {\n                handleSelect(fNodes[fIndex]);\n            }\n            else if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                fIndex += 1;\n                while (fIndex < fNodes.length) {\n                    if (!fNodes[fIndex].disabled) {\n                        pendingNodeKeyRef.value = fNodes[fIndex].key;\n                        break;\n                    }\n                    fIndex += 1;\n                }\n            }\n            else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                fIndex -= 1;\n                while (fIndex >= 0) {\n                    if (!fNodes[fIndex].disabled) {\n                        pendingNodeKeyRef.value = fNodes[fIndex].key;\n                        break;\n                    }\n                    fIndex -= 1;\n                }\n            }\n            else if (e.key === 'ArrowLeft') {\n                const pendingNode = fNodes[fIndex];\n                if (pendingNode.isLeaf ||\n                    !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n                    const parentTmNode = pendingNode.getParent();\n                    if (parentTmNode) {\n                        pendingNodeKeyRef.value = parentTmNode.key;\n                    }\n                }\n                else {\n                    handleSwitcherClick(pendingNode);\n                }\n            }\n            else if (e.key === 'ArrowRight') {\n                const pendingNode = fNodes[fIndex];\n                if (pendingNode.isLeaf)\n                    return;\n                if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n                    handleSwitcherClick(pendingNode);\n                }\n                else {\n                    // Tha same as ArrowDown\n                    fIndex += 1;\n                    while (fIndex < fNodes.length) {\n                        if (!fNodes[fIndex].disabled) {\n                            pendingNodeKeyRef.value = fNodes[fIndex].key;\n                            break;\n                        }\n                        fIndex += 1;\n                    }\n                }\n            }\n        }\n    }\n    return {\n        pendingNodeKeyRef,\n        handleKeydown\n    };\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,GAAG,QAAQ,KAAK;AACjC,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,OAAO,SAASC,WAAW,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC,qBAAqB;EAAEC,qBAAqB;EAAEC,YAAY;EAAEC;AAAoB,CAAC,EAAE;EAC/H,MAAM;IAAEC,KAAK,EAAEC;EAAmB,CAAC,GAAGJ,qBAAqB;EAC3D;EACA,MAAMK,mBAAmB,GAAGZ,MAAM,CAACE,sBAAsB,EAAE,IAAI,CAAC;EAChE,MAAMW,iBAAiB,GAAGD,mBAAmB,GACvCA,mBAAmB,CAACC,iBAAiB,GACrCZ,GAAG,CAACU,kBAAkB,CAACG,MAAM,GACzBH,kBAAkB,CAACA,kBAAkB,CAACG,MAAM,GAAG,CAAC,CAAC,GACjD,IAAI,CAAC;EACf,SAASC,aAAa,CAACC,CAAC,EAAE;IACtB,IAAI,CAACZ,KAAK,CAACa,QAAQ,EACf;IACJ,MAAM;MAAEP,KAAK,EAAEQ;IAAe,CAAC,GAAGL,iBAAiB;IACnD,IAAIK,cAAc,KAAK,IAAI,EAAE;MACzB,IAAIF,CAAC,CAACG,GAAG,KAAK,WAAW,IAAIH,CAAC,CAACG,GAAG,KAAK,SAAS,EAAE;QAC9CH,CAAC,CAACI,cAAc,EAAE;MACtB;MACA,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,CAACC,QAAQ,CAACL,CAAC,CAACG,GAAG,CAAC,EAAE;QACrE,IAAID,cAAc,KAAK,IAAI,EAAE;UACzB,MAAM;YAAER,KAAK,EAAEY;UAAO,CAAC,GAAGjB,SAAS;UACnC,IAAIkB,MAAM,GAAG,CAAC;UACd,OAAOA,MAAM,GAAGD,MAAM,CAACR,MAAM,EAAE;YAC3B,IAAI,CAACQ,MAAM,CAACC,MAAM,CAAC,CAACC,QAAQ,EAAE;cAC1BX,iBAAiB,CAACH,KAAK,GAAGY,MAAM,CAACC,MAAM,CAAC,CAACJ,GAAG;cAC5C;YACJ;YACAI,MAAM,IAAI,CAAC;UACf;QACJ;MACJ;IACJ,CAAC,MACI;MACD,MAAM;QAAEb,KAAK,EAAEY;MAAO,CAAC,GAAGjB,SAAS;MACnC,IAAIkB,MAAM,GAAGD,MAAM,CAACG,SAAS,CAAEC,MAAM,IAAKA,MAAM,CAACP,GAAG,KAAKD,cAAc,CAAC;MACxE,IAAI,CAAC,CAACK,MAAM,EACR;MACJ,IAAIP,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;QACnBX,YAAY,CAACc,MAAM,CAACC,MAAM,CAAC,CAAC;MAChC,CAAC,MACI,IAAIP,CAAC,CAACG,GAAG,KAAK,WAAW,EAAE;QAC5BH,CAAC,CAACI,cAAc,EAAE;QAClBG,MAAM,IAAI,CAAC;QACX,OAAOA,MAAM,GAAGD,MAAM,CAACR,MAAM,EAAE;UAC3B,IAAI,CAACQ,MAAM,CAACC,MAAM,CAAC,CAACC,QAAQ,EAAE;YAC1BX,iBAAiB,CAACH,KAAK,GAAGY,MAAM,CAACC,MAAM,CAAC,CAACJ,GAAG;YAC5C;UACJ;UACAI,MAAM,IAAI,CAAC;QACf;MACJ,CAAC,MACI,IAAIP,CAAC,CAACG,GAAG,KAAK,SAAS,EAAE;QAC1BH,CAAC,CAACI,cAAc,EAAE;QAClBG,MAAM,IAAI,CAAC;QACX,OAAOA,MAAM,IAAI,CAAC,EAAE;UAChB,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,CAACC,QAAQ,EAAE;YAC1BX,iBAAiB,CAACH,KAAK,GAAGY,MAAM,CAACC,MAAM,CAAC,CAACJ,GAAG;YAC5C;UACJ;UACAI,MAAM,IAAI,CAAC;QACf;MACJ,CAAC,MACI,IAAIP,CAAC,CAACG,GAAG,KAAK,WAAW,EAAE;QAC5B,MAAMQ,WAAW,GAAGL,MAAM,CAACC,MAAM,CAAC;QAClC,IAAII,WAAW,CAACC,MAAM,IAClB,CAACtB,qBAAqB,CAACI,KAAK,CAACW,QAAQ,CAACH,cAAc,CAAC,EAAE;UACvD,MAAMW,YAAY,GAAGF,WAAW,CAACG,SAAS,EAAE;UAC5C,IAAID,YAAY,EAAE;YACdhB,iBAAiB,CAACH,KAAK,GAAGmB,YAAY,CAACV,GAAG;UAC9C;QACJ,CAAC,MACI;UACDV,mBAAmB,CAACkB,WAAW,CAAC;QACpC;MACJ,CAAC,MACI,IAAIX,CAAC,CAACG,GAAG,KAAK,YAAY,EAAE;QAC7B,MAAMQ,WAAW,GAAGL,MAAM,CAACC,MAAM,CAAC;QAClC,IAAII,WAAW,CAACC,MAAM,EAClB;QACJ,IAAI,CAACtB,qBAAqB,CAACI,KAAK,CAACW,QAAQ,CAACH,cAAc,CAAC,EAAE;UACvDT,mBAAmB,CAACkB,WAAW,CAAC;QACpC,CAAC,MACI;UACD;UACAJ,MAAM,IAAI,CAAC;UACX,OAAOA,MAAM,GAAGD,MAAM,CAACR,MAAM,EAAE;YAC3B,IAAI,CAACQ,MAAM,CAACC,MAAM,CAAC,CAACC,QAAQ,EAAE;cAC1BX,iBAAiB,CAACH,KAAK,GAAGY,MAAM,CAACC,MAAM,CAAC,CAACJ,GAAG;cAC5C;YACJ;YACAI,MAAM,IAAI,CAAC;UACf;QACJ;MACJ;IACJ;EACJ;EACA,OAAO;IACHV,iBAAiB;IACjBE;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}