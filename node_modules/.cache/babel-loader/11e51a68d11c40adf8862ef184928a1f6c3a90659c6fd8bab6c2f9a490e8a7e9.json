{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createBlock as _createBlock, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5752faac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"relative flex w-full items-center\"\n};\nconst _hoisted_2 = {\n  class: \"absolute text-red-500\",\n  style: {\n    \"bottom\": \"-20px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"flax mb-5 space-x-4\"\n};\nconst _hoisted_4 = {\n  class: \"flex w-full items-center justify-center space-x-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_Field = _resolveComponent(\"Field\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Form, {\n    \"validation-schema\": $data.rules\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_input, {\n      modelValue: $data.form.username,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_Field, {\n      modelValue: $data.form.username,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.username = $event),\n      name: \"usernameFn\",\n      type: \"text\",\n      placeholder: \"请输入手机号\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"validation-schema\"]), _createTextVNode(\" \" + _toDisplayString($data.tags) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex h-8 flex-1 items-center space-x-2 rounded bg-white px-4\", {\n      inputError: $data.tags.length === 0\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createBlock(_component_a_tag, {\n      key: tag.name,\n      color: \"#165dff\",\n      class: \"rounded\",\n      closable: \"\",\n      onClose: $event => $options.handleClose(tag)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(tag.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.inputValue = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args), [\"enter\"])),\n    class: \"flex-1\",\n    onBlur: _cache[4] || (_cache[4] = (...args) => $options.handleInputConfirm && $options.handleInputConfirm(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.inputValue]])], 2 /* CLASS */), _withDirectives(_createElementVNode(\"p\", _hoisted_2, \"請選擇對象\", 512 /* NEED_PATCH */), [[_vShow, $data.tags.length === 0]]), _createVNode(_component_el_button, {\n    plain: \"\",\n    onClick: $options.edit_countersign\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"選擇\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_dialog, {\n    title: \"選擇人員\",\n    draggable: \"\",\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.dialogVisible = $event),\n    \"show-close\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_table, {\n      ref: \"multipleTables\",\n      data: $data.memberList,\n      onSelectionChange: $options.select\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"編號\",\n        prop: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"姓名\",\n        prop: \"name\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"部門\",\n        prop: \"department\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onSelectionChange\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_a_button, {\n      status: \"primary\",\n      onClick: $options.memberListDialog_Cancel\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $options.memberListDialog_Confirm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"確定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\"<memberDialog v-model=\\\"dialogVisible\\\" @resetPopupData=\\\"memberListDialog_Cancel\\\" @submitPopupData=\\\"memberListDialog_Confirm\\\" @selected-user=\\\"selectedUser\\\"></memberDialog>\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAMOA,KAAK,EAAC;AAAmC;;EAKdA,KAAK,EAAC,uBAAuB;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EAIvDD,KAAK,EAAC;AAAqB;;EAS3BA,KAAK,EAAC;AAAmD;;;;;;;;;;;6DAvBhEE,aAGOC;IAHA,mBAAiB,EAAEC;EAAK;sBAC7B,MAA2C,CAA3CF,aAA2CG;kBAAzBD,UAAI,CAACE,QAAQ;iEAAbF,UAAI,CAACE,QAAQ;6CAC/BJ,aAAoFK;kBAApEH,UAAI,CAACE,QAAQ;iEAAbF,UAAI,CAACE,QAAQ;MAAEE,IAAI,EAAC,YAAY;MAACC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;;;6DACpE,GACP,oBAAGN,UAAI,IAAG,GACV,qCAOM,OAPNO,UAOM,GANJC,oBAGM;IAHDZ,KAAK,mBAAC,8DAA8D;MAAAa,YAAuBT,UAAI,CAACU,MAAM;IAAA;yBACzGC,oBAAoIC,6BAA/GZ,UAAI,EAAXa,GAAG;yBAAjBC,aAAoIC;MAAxGC,GAAG,EAAEH,GAAG,CAACT,IAAI;MAAEa,KAAK,EAAC,SAAS;MAACrB,KAAK,EAAC,SAAS;MAACsB,QAAQ,EAAR,EAAQ;MAAEC,OAAK,YAAEC,oBAAW,CAACP,GAAG;;wBAAG,MAAc,mCAAXA,GAAG,CAACT,IAAI;;;;kDACzHI,oBAA0G;+DAA1FR,gBAAU;IAAGqB,OAAK,mDAAQD,mEAAkB;IAAExB,KAAK,EAAC,QAAQ;IAAE0B,MAAI,yCAAEF,mEAAkB;iEAAtFpB,gBAAU,sCAE5BQ,oBAA2F,KAA3Fe,UAA2F,EAAT,OAAK,mCAA5EvB,UAAI,CAACU,MAAM,WACtBZ,aAAyD0B;IAA9CC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAEN;;sBAAkB,MAAE,kBAAF,IAAE;;oCAE/CtB,aAcY6B;IAdDC,KAAK,EAAC,MAAM;IAACC,SAAS,EAAT,EAAS;gBAAU7B,mBAAa;+DAAbA,mBAAa;IAAG,YAAU,EAAE;;sBACrE,MAOM,CAPNQ,oBAOM,OAPNsB,UAOM,GANJhC,aAKWiC;MALDC,GAAG,EAAC,gBAAgB;MAAEC,IAAI,EAAEjC,gBAAU;MAAGkC,iBAAgB,EAAEd;;wBACnE,MAA+D,CAA/DtB,aAA+DqC;QAA9C9B,IAAI,EAAC,WAAW;QAAC+B,KAAK,EAAC;UACxCtC,aAAwDqC;QAAvCE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCxC,aAA0DqC;QAAzCE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;UACjCxC,aAAgEqC;QAA/CE,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;;wDAIrC9B,oBAGM,OAHN+B,UAGM,GAFJzC,aAAyE0C;MAA/DC,MAAM,EAAC,SAAS;MAAEf,OAAK,EAAEN;;wBAAyB,MAAE,kBAAF,IAAE;;oCAC9DtB,aAAwE0C;MAA9DnC,IAAI,EAAC,SAAS;MAAEqB,OAAK,EAAEN;;wBAA0B,MAAE,kBAAF,IAAE;;;;qCAGjEsB,wMAAgL","names":["class","style","_createVNode","_component_Form","$data","_component_a_input","username","_component_Field","name","type","placeholder","_hoisted_1","_createElementVNode","inputError","length","_createElementBlock","_Fragment","tag","_createBlock","_component_a_tag","key","color","closable","onClose","$options","onKeyup","onBlur","_hoisted_2","_component_el_button","plain","onClick","_component_el_dialog","title","draggable","_hoisted_3","_component_el_table","ref","data","onSelectionChange","_component_el_table_column","width","label","prop","_hoisted_4","_component_a_button","status","_createCommentVNode"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/views/test.vue"],"sourcesContent":["<template>\n  <Form :validation-schema=\"rules\">\n    <a-input v-model=\"form.username\"></a-input>\n    <Field v-model=\"form.username\" name=\"usernameFn\" type=\"text\" placeholder=\"请输入手机号\" />\n  </Form>\n  {{ tags }}\n  <div class=\"relative flex w-full items-center\">\n    <div class=\"flex h-8 flex-1 items-center space-x-2 rounded bg-white px-4\" :class=\"{ inputError: tags.length === 0 }\">\n      <a-tag v-for=\"tag in tags\" :key=\"tag.name\" color=\"#165dff\" class=\"rounded\" closable @close=\"handleClose(tag)\">{{ tag.name }}</a-tag>\n      <input v-model=\"inputValue\" @keyup.enter=\"handleInputConfirm\" class=\"flex-1\" @blur=\"handleInputConfirm\" />\n    </div>\n    <p v-show=\"tags.length === 0\" class=\"absolute text-red-500\" style=\"bottom: -20px\">請選擇對象</p>\n    <el-button plain @click=\"edit_countersign\">選擇</el-button>\n  </div>\n  <el-dialog title=\"選擇人員\" draggable v-model=\"dialogVisible\" :show-close=\"false\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"memberListDialog_Cancel\">取消</a-button>\n      <a-button type=\"primary\" @click=\"memberListDialog_Confirm\">確定</a-button>\n    </div>\n  </el-dialog>\n  <!--<memberDialog v-model=\"dialogVisible\" @resetPopupData=\"memberListDialog_Cancel\" @submitPopupData=\"memberListDialog_Confirm\" @selected-user=\"selectedUser\"></memberDialog>-->\n</template>\n\n<script>\nimport { GenNonDuplicateID } from \"@/common/until\";\nimport { Form, Field } from \"vee-validate\";\n// import memberDialog from \"@/components/memberDialog\";\nimport { userList } from \"@/views/config/api\";\nexport default {\n  name: \"testPage\",\n  components: {\n    // memberDialog,\n    Form,\n    Field,\n  },\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      dialogVisible: false,\n      rules: {\n        username: [\n          { required: true, message: \"请输入活动名称\", trigger: \"blur\" },\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\n        ],\n        password: [{ required: true, message: \"请选择活动区域\", trigger: \"change\" }],\n      },\n      tags: [],\n      inputValue: \"\",\n      memberList: [],\n      selectTags: [],\n    };\n  },\n  methods: {\n    // 獲取API\n    getApi() {\n      userList().then((res) => {\n        this.memberList = res.data;\n      });\n    },\n    // 會辦畫面選擇對象\n    select(val) {\n      this.selectTags = JSON.parse(JSON.stringify(val));\n    },\n    //開啟會辦選擇視窗\n    edit_countersign() {\n      this.dialogVisible = true;\n      // this.tags = JSON.parse(JSON.stringify(row));\n      // this.editForm = row;\n\n      // el-table的checkbox預設勾選\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n    },\n    // 送出確定會辦人員\n    memberListDialog_Confirm() {\n      this.tags = this.selectTags;\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n    //取消\n    memberListDialog_Cancel() {\n      this.dialogVisible = false;\n      this.$nextTick(() => {\n        this.tags.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push({\n          name: inputValue,\n          id: GenNonDuplicateID(8),\n          department: \"\",\n        });\n      }\n      this.inputValue = \"\";\n    },\n  },\n  mounted() {\n    this.getApi();\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.inputError {\n  border: #f56c6c 1px solid;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}