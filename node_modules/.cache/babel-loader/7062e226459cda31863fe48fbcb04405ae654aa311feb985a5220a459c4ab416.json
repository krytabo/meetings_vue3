{"ast":null,"code":"import { userList } from \"@/views/config/api\";\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    popupWidth: {\n      type: String,\n      default: \"550px\"\n    }\n  },\n  emits: [\"dialogClose\", \"dialogSuccess\"],\n  data() {\n    return {\n      memberList: [],\n      search: this.value,\n      checkedDetail: []\n    };\n  },\n  mounted() {\n    userList().then(res => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    // table選擇框\n    select(rows) {\n      this.checkedDetai = rows;\n    },\n    // 確認按鈕\n    confirmButton() {\n      // this.$emit(\"childByValue\", this.searchText);\n      let val = this.checkedDetail;\n      this.$emit(\"update:modelValue\", val);\n      this.search = val;\n      this.$emit(\"submitPopupData\");\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    }\n  },\n  watch: {\n    multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    }\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkCA,SAASA,QAAO,QAAS,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;IACJC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACDG,UAAU,EAAE;MACVL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE;IACX;EACF,CAAC;EACDK,KAAK,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC;EACvCC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,IAAI,CAACX,KAAK;MAClBY,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACRhB,QAAQ,EAAE,CAACiB,IAAI,CAAEC,GAAG,IAAK;MACvB,IAAI,CAACL,UAAS,GAAIK,GAAG,CAACN,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC;EACDO,OAAO,EAAE;IACP;IACAC,MAAM,CAACC,IAAI,EAAE;MACX,IAAI,CAACC,YAAW,GAAID,IAAI;IAC1B,CAAC;IACD;IACAE,aAAa,GAAG;MACd;MACA,IAAIC,GAAE,GAAI,IAAI,CAACT,aAAa;MAC5B,IAAI,CAACU,KAAK,CAAC,mBAAmB,EAAED,GAAG,CAAC;MACpC,IAAI,CAACV,MAAK,GAAIU,GAAG;MACjB,IAAI,CAACC,KAAK,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IACD;IACAC,YAAY,GAAG;MACb,IAAI,CAACD,KAAK,CAAC,gBAAgB,CAAC;MAC5B,IAAI,CAACE,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,QAAQ,CAACC,WAAW,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC1C,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACH,IAAI,EAAE,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDI,KAAK,EAAE;IACLC,aAAa,GAAG;MACd,IAAI,CAACT,SAAS,CAAC,MAAM;QACnB,IAAI,CAACK,KAAK,CAACI,aAAa,CAACF,kBAAkB,CAAC,IAAI,CAACrB,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;MACvE,CAAC,CAAC;IACJ;EACF,CAAC;EACDwB,QAAQ,EAAE;IACRC,aAAa,EAAE;MACbC,GAAG,GAAG;QACJ,OAAO,IAAI,CAAChC,OAAO;MACrB,CAAC;MACDiC,GAAG,CAAChB,GAAG,EAAE;QACP,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;MAClC;IACF;EACF;AACF,CAAC","names":["userList","name","prop","value","type","Array","default","visible","Boolean","popupWidth","String","emits","data","memberList","search","checkedDetail","mounted","then","res","methods","select","rows","checkedDetai","confirmButton","val","$emit","cancelButton","$nextTick","editForm","countersign","forEach","item","$refs","multipleTables","toggleRowSelection","watch","multipleTable","computed","dialogVisible","get","set"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <!--<el-dialog title=\"選擇人員\" draggable>\n    <div class=\"flax space-x-4\">\n      <div class=\"\"></div>\n      <el-table :data=\"memberList\" ref=\"multipleTable\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    &lt;!&ndash;    <el-input v-model=\"searchText\"></el-input>&ndash;&gt;\n    <el-button @click=\"confirmButton\">確定</el-button>\n  </el-dialog>-->\n\n  <el-dialog title=\"選擇人員\" draggable :show-close=\"false\" v-model=\"dialogVisible\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"cancelButton\">取消</a-button>\n      <a-button type=\"primary\" @click=\"confirmButton\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    popupWidth: {\n      type: String,\n      default: \"550px\",\n    },\n  },\n  emits: [\"dialogClose\", \"dialogSuccess\"],\n  data() {\n    return {\n      memberList: [],\n      search: this.value,\n      checkedDetail: [],\n    };\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    // table選擇框\n    select(rows) {\n      this.checkedDetai = rows;\n    },\n    // 確認按鈕\n    confirmButton() {\n      // this.$emit(\"childByValue\", this.searchText);\n      let val = this.checkedDetail;\n      this.$emit(\"update:modelValue\", val);\n      this.search = val;\n      this.$emit(\"submitPopupData\");\n    },\n    // 取消按鈕\n    cancelButton() {\n      this.$emit(\"resetPopupData\");\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n  },\n  watch: {\n    multipleTable() {\n      this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });\n    },\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        this.$emit(\"updateVisible\", val);\n      },\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}