{"ast":null,"code":"import { ref, onBeforeMount, onBeforeUnmount } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nconst isComposingRef = ref(false);\nconst compositionStartHandler = () => {\n  isComposingRef.value = true;\n};\nconst compositionEndHandler = () => {\n  isComposingRef.value = false;\n};\nlet mountedCount = 0;\nexport const useIsComposing = () => {\n  if (isBrowser) {\n    onBeforeMount(() => {\n      if (!mountedCount) {\n        window.addEventListener('compositionstart', compositionStartHandler);\n        window.addEventListener('compositionend', compositionEndHandler);\n      }\n      mountedCount++;\n    });\n    onBeforeUnmount(() => {\n      if (mountedCount <= 1) {\n        window.removeEventListener('compositionstart', compositionStartHandler);\n        window.removeEventListener('compositionend', compositionEndHandler);\n        mountedCount = 0;\n      } else {\n        mountedCount--;\n      }\n    });\n  }\n  return isComposingRef;\n};","map":{"version":3,"names":["ref","onBeforeMount","onBeforeUnmount","isBrowser","isComposingRef","compositionStartHandler","value","compositionEndHandler","mountedCount","useIsComposing","window","addEventListener","removeEventListener"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/_utils/composable/use-is-composing.js"],"sourcesContent":["import { ref, onBeforeMount, onBeforeUnmount } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nconst isComposingRef = ref(false);\nconst compositionStartHandler = () => {\n    isComposingRef.value = true;\n};\nconst compositionEndHandler = () => {\n    isComposingRef.value = false;\n};\nlet mountedCount = 0;\nexport const useIsComposing = () => {\n    if (isBrowser) {\n        onBeforeMount(() => {\n            if (!mountedCount) {\n                window.addEventListener('compositionstart', compositionStartHandler);\n                window.addEventListener('compositionend', compositionEndHandler);\n            }\n            mountedCount++;\n        });\n        onBeforeUnmount(() => {\n            if (mountedCount <= 1) {\n                window.removeEventListener('compositionstart', compositionStartHandler);\n                window.removeEventListener('compositionend', compositionEndHandler);\n                mountedCount = 0;\n            }\n            else {\n                mountedCount--;\n            }\n        });\n    }\n    return isComposingRef;\n};\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,aAAa,EAAEC,eAAe,QAAQ,KAAK;AACzD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,MAAMC,cAAc,GAAGJ,GAAG,CAAC,KAAK,CAAC;AACjC,MAAMK,uBAAuB,GAAG,MAAM;EAClCD,cAAc,CAACE,KAAK,GAAG,IAAI;AAC/B,CAAC;AACD,MAAMC,qBAAqB,GAAG,MAAM;EAChCH,cAAc,CAACE,KAAK,GAAG,KAAK;AAChC,CAAC;AACD,IAAIE,YAAY,GAAG,CAAC;AACpB,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,IAAIN,SAAS,EAAE;IACXF,aAAa,CAAC,MAAM;MAChB,IAAI,CAACO,YAAY,EAAE;QACfE,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEN,uBAAuB,CAAC;QACpEK,MAAM,CAACC,gBAAgB,CAAC,gBAAgB,EAAEJ,qBAAqB,CAAC;MACpE;MACAC,YAAY,EAAE;IAClB,CAAC,CAAC;IACFN,eAAe,CAAC,MAAM;MAClB,IAAIM,YAAY,IAAI,CAAC,EAAE;QACnBE,MAAM,CAACE,mBAAmB,CAAC,kBAAkB,EAAEP,uBAAuB,CAAC;QACvEK,MAAM,CAACE,mBAAmB,CAAC,gBAAgB,EAAEL,qBAAqB,CAAC;QACnEC,YAAY,GAAG,CAAC;MACpB,CAAC,MACI;QACDA,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;EACN;EACA,OAAOJ,cAAc;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}