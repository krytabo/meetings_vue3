{"ast":null,"code":"import { h, defineComponent, inject, ref, onMounted, watch, toRef, computed } from 'vue';\nimport { logInjectionKey } from './context';\nexport default defineComponent({\n  props: {\n    line: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props) {\n    const {\n      trimRef,\n      highlightRef,\n      languageRef,\n      mergedHljsRef\n    } =\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    inject(logInjectionKey);\n    const selfRef = ref(null);\n    const maybeTrimmedLinesRef = computed(() => {\n      return trimRef.value ? props.line.trim() : props.line;\n    });\n    function setInnerHTML() {\n      if (selfRef.value) {\n        selfRef.value.innerHTML = generateCodeHTML(languageRef.value, maybeTrimmedLinesRef.value);\n      }\n    }\n    function generateCodeHTML(language, code) {\n      const {\n        value: hljs\n      } = mergedHljsRef;\n      if (hljs) {\n        if (language && hljs.getLanguage(language)) {\n          return hljs.highlight(code, {\n            language\n          }).value;\n        }\n      }\n      return code;\n    }\n    onMounted(() => {\n      if (highlightRef.value) {\n        setInnerHTML();\n      }\n    });\n    watch(toRef(props, 'line'), () => {\n      if (highlightRef.value) {\n        setInnerHTML();\n      }\n    });\n    return {\n      highlight: highlightRef,\n      selfRef,\n      maybeTrimmedLines: maybeTrimmedLinesRef\n    };\n  },\n  render() {\n    const {\n      highlight,\n      maybeTrimmedLines\n    } = this;\n    return h(\"pre\", {\n      ref: \"selfRef\"\n    }, highlight ? null : maybeTrimmedLines);\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","ref","onMounted","watch","toRef","computed","logInjectionKey","props","line","type","String","default","setup","trimRef","highlightRef","languageRef","mergedHljsRef","selfRef","maybeTrimmedLinesRef","value","trim","setInnerHTML","innerHTML","generateCodeHTML","language","code","hljs","getLanguage","highlight","maybeTrimmedLines","render"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/log/src/LogLine.js"],"sourcesContent":["import { h, defineComponent, inject, ref, onMounted, watch, toRef, computed } from 'vue';\nimport { logInjectionKey } from './context';\nexport default defineComponent({\n    props: {\n        line: {\n            type: String,\n            default: ''\n        }\n    },\n    setup(props) {\n        const { trimRef, highlightRef, languageRef, mergedHljsRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(logInjectionKey);\n        const selfRef = ref(null);\n        const maybeTrimmedLinesRef = computed(() => {\n            return trimRef.value ? props.line.trim() : props.line;\n        });\n        function setInnerHTML() {\n            if (selfRef.value) {\n                selfRef.value.innerHTML = generateCodeHTML(languageRef.value, maybeTrimmedLinesRef.value);\n            }\n        }\n        function generateCodeHTML(language, code) {\n            const { value: hljs } = mergedHljsRef;\n            if (hljs) {\n                if (language && hljs.getLanguage(language)) {\n                    return hljs.highlight(code, { language }).value;\n                }\n            }\n            return code;\n        }\n        onMounted(() => {\n            if (highlightRef.value) {\n                setInnerHTML();\n            }\n        });\n        watch(toRef(props, 'line'), () => {\n            if (highlightRef.value) {\n                setInnerHTML();\n            }\n        });\n        return {\n            highlight: highlightRef,\n            selfRef,\n            maybeTrimmedLines: maybeTrimmedLinesRef\n        };\n    },\n    render() {\n        const { highlight, maybeTrimmedLines } = this;\n        return h(\"pre\", { ref: \"selfRef\" }, highlight ? null : maybeTrimmedLines);\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,KAAK;AACxF,SAASC,eAAe,QAAQ,WAAW;AAC3C,eAAeP,eAAe,CAAC;EAC3BQ,KAAK,EAAE;IACHC,IAAI,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,KAAK,CAACL,KAAK,EAAE;IACT,MAAM;MAAEM,OAAO;MAAEC,YAAY;MAAEC,WAAW;MAAEC;IAAc,CAAC;IAC3D;IACAhB,MAAM,CAACM,eAAe,CAAC;IACvB,MAAMW,OAAO,GAAGhB,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMiB,oBAAoB,GAAGb,QAAQ,CAAC,MAAM;MACxC,OAAOQ,OAAO,CAACM,KAAK,GAAGZ,KAAK,CAACC,IAAI,CAACY,IAAI,EAAE,GAAGb,KAAK,CAACC,IAAI;IACzD,CAAC,CAAC;IACF,SAASa,YAAY,GAAG;MACpB,IAAIJ,OAAO,CAACE,KAAK,EAAE;QACfF,OAAO,CAACE,KAAK,CAACG,SAAS,GAAGC,gBAAgB,CAACR,WAAW,CAACI,KAAK,EAAED,oBAAoB,CAACC,KAAK,CAAC;MAC7F;IACJ;IACA,SAASI,gBAAgB,CAACC,QAAQ,EAAEC,IAAI,EAAE;MACtC,MAAM;QAAEN,KAAK,EAAEO;MAAK,CAAC,GAAGV,aAAa;MACrC,IAAIU,IAAI,EAAE;QACN,IAAIF,QAAQ,IAAIE,IAAI,CAACC,WAAW,CAACH,QAAQ,CAAC,EAAE;UACxC,OAAOE,IAAI,CAACE,SAAS,CAACH,IAAI,EAAE;YAAED;UAAS,CAAC,CAAC,CAACL,KAAK;QACnD;MACJ;MACA,OAAOM,IAAI;IACf;IACAvB,SAAS,CAAC,MAAM;MACZ,IAAIY,YAAY,CAACK,KAAK,EAAE;QACpBE,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;IACFlB,KAAK,CAACC,KAAK,CAACG,KAAK,EAAE,MAAM,CAAC,EAAE,MAAM;MAC9B,IAAIO,YAAY,CAACK,KAAK,EAAE;QACpBE,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;IACF,OAAO;MACHO,SAAS,EAAEd,YAAY;MACvBG,OAAO;MACPY,iBAAiB,EAAEX;IACvB,CAAC;EACL,CAAC;EACDY,MAAM,GAAG;IACL,MAAM;MAAEF,SAAS;MAAEC;IAAkB,CAAC,GAAG,IAAI;IAC7C,OAAO/B,CAAC,CAAC,KAAK,EAAE;MAAEG,GAAG,EAAE;IAAU,CAAC,EAAE2B,SAAS,GAAG,IAAI,GAAGC,iBAAiB,CAAC;EAC7E;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}