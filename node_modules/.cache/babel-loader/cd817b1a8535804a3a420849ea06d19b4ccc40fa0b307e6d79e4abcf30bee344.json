{"ast":null,"code":"import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: String,\n  checked: {\n    type: [Boolean, String, Number],\n    default: undefined\n  },\n  defaultChecked: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  value: [String, Number],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  indeterminate: Boolean,\n  label: String,\n  focusable: {\n    type: Boolean,\n    default: true\n  },\n  checkedValue: {\n    type: [Boolean, String, Number],\n    default: true\n  },\n  uncheckedValue: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  'onUpdate:checked': [Function, Array],\n  onUpdateChecked: [Function, Array],\n  // private\n  privateInsideTable: Boolean,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Checkbox',\n  props: checkboxProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange) {\n          warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n        }\n      });\n    }\n    const selfRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const formItem = useFormItem(props, {\n      mergedSize(NFormItem) {\n        const {\n          size\n        } = props;\n        if (size !== undefined) return size;\n        if (NCheckboxGroup) {\n          const {\n            value: mergedSize\n          } = NCheckboxGroup.mergedSizeRef;\n          if (mergedSize !== undefined) {\n            return mergedSize;\n          }\n        }\n        if (NFormItem) {\n          const {\n            mergedSize\n          } = NFormItem;\n          if (mergedSize !== undefined) return mergedSize.value;\n        }\n        return 'medium';\n      },\n      mergedDisabled(NFormItem) {\n        const {\n          disabled\n        } = props;\n        if (disabled !== undefined) return disabled;\n        if (NCheckboxGroup) {\n          if (NCheckboxGroup.disabledRef.value) return true;\n          const {\n            maxRef: {\n              value: max\n            },\n            checkedCountRef\n          } = NCheckboxGroup;\n          if (max !== undefined && checkedCountRef.value >= max && !renderedCheckedRef.value) {\n            return true;\n          }\n          const {\n            minRef: {\n              value: min\n            }\n          } = NCheckboxGroup;\n          if (min !== undefined && checkedCountRef.value <= min && renderedCheckedRef.value) {\n            return true;\n          }\n        }\n        if (NFormItem) {\n          return NFormItem.disabled.value;\n        }\n        return false;\n      }\n    });\n    const {\n      mergedDisabledRef,\n      mergedSizeRef\n    } = formItem;\n    const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n    const uncontrolledCheckedRef = ref(props.defaultChecked);\n    const controlledCheckedRef = toRef(props, 'checked');\n    const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n    const renderedCheckedRef = useMemo(() => {\n      if (NCheckboxGroup) {\n        const groupValueSet = NCheckboxGroup.valueSetRef.value;\n        if (groupValueSet && props.value !== undefined) {\n          return groupValueSet.has(props.value);\n        }\n        return false;\n      } else {\n        return mergedCheckedRef.value === props.checkedValue;\n      }\n    });\n    const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n    function toggle(e) {\n      if (NCheckboxGroup && props.value !== undefined) {\n        NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n      } else {\n        const {\n          onChange,\n          'onUpdate:checked': _onUpdateCheck,\n          onUpdateChecked\n        } = props;\n        const {\n          nTriggerFormInput,\n          nTriggerFormChange\n        } = formItem;\n        const nextChecked = renderedCheckedRef.value ? props.uncheckedValue : props.checkedValue;\n        if (_onUpdateCheck) {\n          call(_onUpdateCheck, nextChecked, e);\n        }\n        if (onUpdateChecked) {\n          call(onUpdateChecked, nextChecked, e);\n        }\n        if (onChange) call(onChange, nextChecked, e); // deprecated\n        nTriggerFormInput();\n        nTriggerFormChange();\n        uncontrolledCheckedRef.value = nextChecked;\n      }\n    }\n    function handleClick(e) {\n      if (!mergedDisabledRef.value) {\n        toggle(e);\n      }\n    }\n    function handleKeyUp(e) {\n      if (mergedDisabledRef.value) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          toggle(e);\n      }\n    }\n    function handleKeyDown(e) {\n      switch (e.key) {\n        case ' ':\n          e.preventDefault();\n      }\n    }\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          borderRadius,\n          color,\n          colorChecked,\n          colorDisabled,\n          colorTableHeader,\n          colorTableHeaderModal,\n          colorTableHeaderPopover,\n          checkMarkColor,\n          checkMarkColorDisabled,\n          border,\n          borderFocus,\n          borderDisabled,\n          borderChecked,\n          boxShadowFocus,\n          textColor,\n          textColorDisabled,\n          checkMarkColorDisabledChecked,\n          colorDisabledChecked,\n          borderDisabledChecked,\n          labelPadding,\n          labelLineHeight,\n          [createKey('fontSize', mergedSize)]: fontSize,\n          [createKey('size', mergedSize)]: size\n        }\n      } = themeRef.value;\n      return {\n        '--n-label-line-height': labelLineHeight,\n        '--n-size': size,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-border-checked': borderChecked,\n        '--n-border-focus': borderFocus,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-disabled-checked': borderDisabledChecked,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-color': color,\n        '--n-color-checked': colorChecked,\n        '--n-color-table': colorTableHeader,\n        '--n-color-table-modal': colorTableHeaderModal,\n        '--n-color-table-popover': colorTableHeaderPopover,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-disabled-checked': colorDisabledChecked,\n        '--n-text-color': textColor,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-check-mark-color': checkMarkColor,\n        '--n-check-mark-color-disabled': checkMarkColorDisabled,\n        '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n        '--n-font-size': fontSize,\n        '--n-label-padding': labelPadding\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props) : undefined;\n    return Object.assign(formItem, exposedMethods, {\n      rtlEnabled: rtlEnabledRef,\n      selfRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedDisabled: mergedDisabledRef,\n      renderedChecked: renderedCheckedRef,\n      mergedTheme: themeRef,\n      labelId: createId(),\n      handleClick,\n      handleKeyUp,\n      handleKeyDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      renderedChecked,\n      mergedDisabled,\n      indeterminate,\n      privateInsideTable,\n      cssVars,\n      labelId,\n      label,\n      mergedClsPrefix,\n      focusable,\n      handleKeyUp,\n      handleKeyDown,\n      handleClick\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-checkbox`, this.themeClass, this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`, renderedChecked && `${mergedClsPrefix}-checkbox--checked`, mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`, indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`, privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`],\n      tabindex: mergedDisabled || !focusable ? undefined : 0,\n      role: \"checkbox\",\n      \"aria-checked\": indeterminate ? 'mixed' : renderedChecked,\n      \"aria-labelledby\": labelId,\n      style: cssVars,\n      onKeyup: handleKeyUp,\n      onKeydown: handleKeyDown,\n      onClick: handleClick,\n      onMousedown: () => {\n        on('selectstart', window, e => {\n          e.preventDefault();\n        }, {\n          once: true\n        });\n      }\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box-wrapper`\n    }, \"\\u00A0\", h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box`\n    }, h(NIconSwitchTransition, null, {\n      default: () => this.indeterminate ? h(\"div\", {\n        key: \"indeterminate\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, LineMark) : h(\"div\", {\n        key: \"check\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, CheckMark)\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box__border`\n    }))), label !== null || $slots.default ? h(\"span\", {\n      class: `${mergedClsPrefix}-checkbox__label`,\n      id: labelId\n    }, $slots.default ? $slots.default() : label) : null);\n  }\n});","map":{"version":3,"names":["h","defineComponent","computed","inject","ref","toRef","watchEffect","useMergedState","useMemo","createId","on","useConfig","useFormItem","useTheme","useThemeClass","NIconSwitchTransition","call","createKey","warnOnce","checkboxLight","CheckMark","LineMark","checkboxGroupInjectionKey","style","useRtl","checkboxProps","Object","assign","props","size","String","checked","type","Boolean","Number","default","undefined","defaultChecked","value","disabled","indeterminate","label","focusable","checkedValue","uncheckedValue","Function","Array","onUpdateChecked","privateInsideTable","onChange","name","setup","process","env","NODE_ENV","selfRef","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","formItem","mergedSize","NFormItem","NCheckboxGroup","mergedSizeRef","mergedDisabled","disabledRef","maxRef","max","checkedCountRef","renderedCheckedRef","minRef","min","mergedDisabledRef","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","groupValueSet","valueSetRef","has","themeRef","toggle","e","toggleCheckbox","_onUpdateCheck","nTriggerFormInput","nTriggerFormChange","nextChecked","handleClick","handleKeyUp","key","handleKeyDown","preventDefault","exposedMethods","focus","_a","blur","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","color","colorChecked","colorDisabled","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","border","borderFocus","borderDisabled","borderChecked","boxShadowFocus","textColor","textColorDisabled","checkMarkColorDisabledChecked","colorDisabledChecked","borderDisabledChecked","labelPadding","labelLineHeight","fontSize","themeClassHandle","rtlEnabled","mergedClsPrefix","renderedChecked","mergedTheme","labelId","cssVars","themeClass","onRender","render","$slots","class","tabindex","role","onKeyup","onKeydown","onClick","onMousedown","window","once","id"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/checkbox/src/Checkbox.js"],"sourcesContent":["import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), { size: String, checked: {\n        type: [Boolean, String, Number],\n        default: undefined\n    }, defaultChecked: {\n        type: [Boolean, String, Number],\n        default: false\n    }, value: [String, Number], disabled: {\n        type: Boolean,\n        default: undefined\n    }, indeterminate: Boolean, label: String, focusable: {\n        type: Boolean,\n        default: true\n    }, checkedValue: {\n        type: [Boolean, String, Number],\n        default: true\n    }, uncheckedValue: {\n        type: [Boolean, String, Number],\n        default: false\n    }, 'onUpdate:checked': [Function, Array], onUpdateChecked: [Function, Array], \n    // private\n    privateInsideTable: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Checkbox',\n    props: checkboxProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n                }\n            });\n        }\n        const selfRef = ref(null);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const formItem = useFormItem(props, {\n            mergedSize(NFormItem) {\n                const { size } = props;\n                if (size !== undefined)\n                    return size;\n                if (NCheckboxGroup) {\n                    const { value: mergedSize } = NCheckboxGroup.mergedSizeRef;\n                    if (mergedSize !== undefined) {\n                        return mergedSize;\n                    }\n                }\n                if (NFormItem) {\n                    const { mergedSize } = NFormItem;\n                    if (mergedSize !== undefined)\n                        return mergedSize.value;\n                }\n                return 'medium';\n            },\n            mergedDisabled(NFormItem) {\n                const { disabled } = props;\n                if (disabled !== undefined)\n                    return disabled;\n                if (NCheckboxGroup) {\n                    if (NCheckboxGroup.disabledRef.value)\n                        return true;\n                    const { maxRef: { value: max }, checkedCountRef } = NCheckboxGroup;\n                    if (max !== undefined &&\n                        checkedCountRef.value >= max &&\n                        !renderedCheckedRef.value) {\n                        return true;\n                    }\n                    const { minRef: { value: min } } = NCheckboxGroup;\n                    if (min !== undefined &&\n                        checkedCountRef.value <= min &&\n                        renderedCheckedRef.value) {\n                        return true;\n                    }\n                }\n                if (NFormItem) {\n                    return NFormItem.disabled.value;\n                }\n                return false;\n            }\n        });\n        const { mergedDisabledRef, mergedSizeRef } = formItem;\n        const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n        const uncontrolledCheckedRef = ref(props.defaultChecked);\n        const controlledCheckedRef = toRef(props, 'checked');\n        const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n        const renderedCheckedRef = useMemo(() => {\n            if (NCheckboxGroup) {\n                const groupValueSet = NCheckboxGroup.valueSetRef.value;\n                if (groupValueSet && props.value !== undefined) {\n                    return groupValueSet.has(props.value);\n                }\n                return false;\n            }\n            else {\n                return mergedCheckedRef.value === props.checkedValue;\n            }\n        });\n        const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n        function toggle(e) {\n            if (NCheckboxGroup && props.value !== undefined) {\n                NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n            }\n            else {\n                const { onChange, 'onUpdate:checked': _onUpdateCheck, onUpdateChecked } = props;\n                const { nTriggerFormInput, nTriggerFormChange } = formItem;\n                const nextChecked = renderedCheckedRef.value\n                    ? props.uncheckedValue\n                    : props.checkedValue;\n                if (_onUpdateCheck) {\n                    call(_onUpdateCheck, nextChecked, e);\n                }\n                if (onUpdateChecked) {\n                    call(onUpdateChecked, nextChecked, e);\n                }\n                if (onChange)\n                    call(onChange, nextChecked, e); // deprecated\n                nTriggerFormInput();\n                nTriggerFormChange();\n                uncontrolledCheckedRef.value = nextChecked;\n            }\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                toggle(e);\n            }\n        }\n        function handleKeyUp(e) {\n            if (mergedDisabledRef.value)\n                return;\n            switch (e.key) {\n                case ' ':\n                case 'Enter':\n                    toggle(e);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.key) {\n                case ' ':\n                    e.preventDefault();\n            }\n        }\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { borderRadius, color, colorChecked, colorDisabled, colorTableHeader, colorTableHeaderModal, colorTableHeaderPopover, checkMarkColor, checkMarkColorDisabled, border, borderFocus, borderDisabled, borderChecked, boxShadowFocus, textColor, textColorDisabled, checkMarkColorDisabledChecked, colorDisabledChecked, borderDisabledChecked, labelPadding, labelLineHeight, [createKey('fontSize', mergedSize)]: fontSize, [createKey('size', mergedSize)]: size } } = themeRef.value;\n            return {\n                '--n-label-line-height': labelLineHeight,\n                '--n-size': size,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-border-checked': borderChecked,\n                '--n-border-focus': borderFocus,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-disabled-checked': borderDisabledChecked,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-color': color,\n                '--n-color-checked': colorChecked,\n                '--n-color-table': colorTableHeader,\n                '--n-color-table-modal': colorTableHeaderModal,\n                '--n-color-table-popover': colorTableHeaderPopover,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-disabled-checked': colorDisabledChecked,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-check-mark-color': checkMarkColor,\n                '--n-check-mark-color-disabled': checkMarkColorDisabled,\n                '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n                '--n-font-size': fontSize,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(formItem, exposedMethods, {\n            rtlEnabled: rtlEnabledRef,\n            selfRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedDisabled: mergedDisabledRef,\n            renderedChecked: renderedCheckedRef,\n            mergedTheme: themeRef,\n            labelId: createId(),\n            handleClick,\n            handleKeyUp,\n            handleKeyDown,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        var _a;\n        const { $slots, renderedChecked, mergedDisabled, indeterminate, privateInsideTable, cssVars, labelId, label, mergedClsPrefix, focusable, handleKeyUp, handleKeyDown, handleClick } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-checkbox`,\n                this.themeClass,\n                this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`,\n                renderedChecked && `${mergedClsPrefix}-checkbox--checked`,\n                mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`,\n                indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`,\n                privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`\n            ], tabindex: mergedDisabled || !focusable ? undefined : 0, role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : renderedChecked, \"aria-labelledby\": labelId, style: cssVars, onKeyup: handleKeyUp, onKeydown: handleKeyDown, onClick: handleClick, onMousedown: () => {\n                on('selectstart', window, (e) => {\n                    e.preventDefault();\n                }, {\n                    once: true\n                });\n            } },\n            h(\"div\", { class: `${mergedClsPrefix}-checkbox-box-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: `${mergedClsPrefix}-checkbox-box` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.indeterminate ? (h(\"div\", { key: \"indeterminate\", class: `${mergedClsPrefix}-checkbox-icon` }, LineMark)) : (h(\"div\", { key: \"check\", class: `${mergedClsPrefix}-checkbox-icon` }, CheckMark))\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-checkbox-box__border` }))),\n            label !== null || $slots.default ? (h(\"span\", { class: `${mergedClsPrefix}-checkbox__label`, id: labelId }, $slots.default ? $slots.default() : label)) : null));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAEC,WAAW,QAAQ,KAAK;AACnF,SAASC,cAAc,EAAEC,OAAO,QAAQ,OAAO;AAC/C,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,eAAe;AAC/E,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AACxD,SAASC,aAAa,QAAQ,WAAW;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,yBAAyB,QAAQ,iBAAiB;AAC3D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,OAAO,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,QAAQ,CAACe,KAAK,CAAC,EAAE;EAAEC,IAAI,EAAEC,MAAM;EAAEC,OAAO,EAAE;IAC/FC,IAAI,EAAE,CAACC,OAAO,EAAEH,MAAM,EAAEI,MAAM,CAAC;IAC/BC,OAAO,EAAEC;EACb,CAAC;EAAEC,cAAc,EAAE;IACfL,IAAI,EAAE,CAACC,OAAO,EAAEH,MAAM,EAAEI,MAAM,CAAC;IAC/BC,OAAO,EAAE;EACb,CAAC;EAAEG,KAAK,EAAE,CAACR,MAAM,EAAEI,MAAM,CAAC;EAAEK,QAAQ,EAAE;IAClCP,IAAI,EAAEC,OAAO;IACbE,OAAO,EAAEC;EACb,CAAC;EAAEI,aAAa,EAAEP,OAAO;EAAEQ,KAAK,EAAEX,MAAM;EAAEY,SAAS,EAAE;IACjDV,IAAI,EAAEC,OAAO;IACbE,OAAO,EAAE;EACb,CAAC;EAAEQ,YAAY,EAAE;IACbX,IAAI,EAAE,CAACC,OAAO,EAAEH,MAAM,EAAEI,MAAM,CAAC;IAC/BC,OAAO,EAAE;EACb,CAAC;EAAES,cAAc,EAAE;IACfZ,IAAI,EAAE,CAACC,OAAO,EAAEH,MAAM,EAAEI,MAAM,CAAC;IAC/BC,OAAO,EAAE;EACb,CAAC;EAAE,kBAAkB,EAAE,CAACU,QAAQ,EAAEC,KAAK,CAAC;EAAEC,eAAe,EAAE,CAACF,QAAQ,EAAEC,KAAK,CAAC;EAC5E;EACAE,kBAAkB,EAAEf,OAAO;EAC3B;EACAgB,QAAQ,EAAE,CAACJ,QAAQ,EAAEC,KAAK;AAAE,CAAC,CAAC;AAClC,eAAe7C,eAAe,CAAC;EAC3BiD,IAAI,EAAE,UAAU;EAChBtB,KAAK,EAAEH,aAAa;EACpB0B,KAAK,CAACvB,KAAK,EAAE;IACT,IAAIwB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvChD,WAAW,CAAC,MAAM;QACd,IAAIsB,KAAK,CAACqB,QAAQ,EAAE;UAChB/B,QAAQ,CAAC,UAAU,EAAE,oEAAoE,CAAC;QAC9F;MACJ,CAAC,CAAC;IACN;IACA,MAAMqC,OAAO,GAAGnD,GAAG,CAAC,IAAI,CAAC;IACzB,MAAM;MAAEoD,kBAAkB;MAAEC,mBAAmB;MAAEC;IAAa,CAAC,GAAG/C,SAAS,CAACiB,KAAK,CAAC;IAClF,MAAM+B,QAAQ,GAAG/C,WAAW,CAACgB,KAAK,EAAE;MAChCgC,UAAU,CAACC,SAAS,EAAE;QAClB,MAAM;UAAEhC;QAAK,CAAC,GAAGD,KAAK;QACtB,IAAIC,IAAI,KAAKO,SAAS,EAClB,OAAOP,IAAI;QACf,IAAIiC,cAAc,EAAE;UAChB,MAAM;YAAExB,KAAK,EAAEsB;UAAW,CAAC,GAAGE,cAAc,CAACC,aAAa;UAC1D,IAAIH,UAAU,KAAKxB,SAAS,EAAE;YAC1B,OAAOwB,UAAU;UACrB;QACJ;QACA,IAAIC,SAAS,EAAE;UACX,MAAM;YAAED;UAAW,CAAC,GAAGC,SAAS;UAChC,IAAID,UAAU,KAAKxB,SAAS,EACxB,OAAOwB,UAAU,CAACtB,KAAK;QAC/B;QACA,OAAO,QAAQ;MACnB,CAAC;MACD0B,cAAc,CAACH,SAAS,EAAE;QACtB,MAAM;UAAEtB;QAAS,CAAC,GAAGX,KAAK;QAC1B,IAAIW,QAAQ,KAAKH,SAAS,EACtB,OAAOG,QAAQ;QACnB,IAAIuB,cAAc,EAAE;UAChB,IAAIA,cAAc,CAACG,WAAW,CAAC3B,KAAK,EAChC,OAAO,IAAI;UACf,MAAM;YAAE4B,MAAM,EAAE;cAAE5B,KAAK,EAAE6B;YAAI,CAAC;YAAEC;UAAgB,CAAC,GAAGN,cAAc;UAClE,IAAIK,GAAG,KAAK/B,SAAS,IACjBgC,eAAe,CAAC9B,KAAK,IAAI6B,GAAG,IAC5B,CAACE,kBAAkB,CAAC/B,KAAK,EAAE;YAC3B,OAAO,IAAI;UACf;UACA,MAAM;YAAEgC,MAAM,EAAE;cAAEhC,KAAK,EAAEiC;YAAI;UAAE,CAAC,GAAGT,cAAc;UACjD,IAAIS,GAAG,KAAKnC,SAAS,IACjBgC,eAAe,CAAC9B,KAAK,IAAIiC,GAAG,IAC5BF,kBAAkB,CAAC/B,KAAK,EAAE;YAC1B,OAAO,IAAI;UACf;QACJ;QACA,IAAIuB,SAAS,EAAE;UACX,OAAOA,SAAS,CAACtB,QAAQ,CAACD,KAAK;QACnC;QACA,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC;IACF,MAAM;MAAEkC,iBAAiB;MAAET;IAAc,CAAC,GAAGJ,QAAQ;IACrD,MAAMG,cAAc,GAAG3D,MAAM,CAACmB,yBAAyB,EAAE,IAAI,CAAC;IAC9D,MAAMmD,sBAAsB,GAAGrE,GAAG,CAACwB,KAAK,CAACS,cAAc,CAAC;IACxD,MAAMqC,oBAAoB,GAAGrE,KAAK,CAACuB,KAAK,EAAE,SAAS,CAAC;IACpD,MAAM+C,gBAAgB,GAAGpE,cAAc,CAACmE,oBAAoB,EAAED,sBAAsB,CAAC;IACrF,MAAMJ,kBAAkB,GAAG7D,OAAO,CAAC,MAAM;MACrC,IAAIsD,cAAc,EAAE;QAChB,MAAMc,aAAa,GAAGd,cAAc,CAACe,WAAW,CAACvC,KAAK;QACtD,IAAIsC,aAAa,IAAIhD,KAAK,CAACU,KAAK,KAAKF,SAAS,EAAE;UAC5C,OAAOwC,aAAa,CAACE,GAAG,CAAClD,KAAK,CAACU,KAAK,CAAC;QACzC;QACA,OAAO,KAAK;MAChB,CAAC,MACI;QACD,OAAOqC,gBAAgB,CAACrC,KAAK,KAAKV,KAAK,CAACe,YAAY;MACxD;IACJ,CAAC,CAAC;IACF,MAAMoC,QAAQ,GAAGlE,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAEU,KAAK,EAAEJ,aAAa,EAAES,KAAK,EAAE4B,kBAAkB,CAAC;IACnG,SAASwB,MAAM,CAACC,CAAC,EAAE;MACf,IAAInB,cAAc,IAAIlC,KAAK,CAACU,KAAK,KAAKF,SAAS,EAAE;QAC7C0B,cAAc,CAACoB,cAAc,CAAC,CAACb,kBAAkB,CAAC/B,KAAK,EAAEV,KAAK,CAACU,KAAK,CAAC;MACzE,CAAC,MACI;QACD,MAAM;UAAEW,QAAQ;UAAE,kBAAkB,EAAEkC,cAAc;UAAEpC;QAAgB,CAAC,GAAGnB,KAAK;QAC/E,MAAM;UAAEwD,iBAAiB;UAAEC;QAAmB,CAAC,GAAG1B,QAAQ;QAC1D,MAAM2B,WAAW,GAAGjB,kBAAkB,CAAC/B,KAAK,GACtCV,KAAK,CAACgB,cAAc,GACpBhB,KAAK,CAACe,YAAY;QACxB,IAAIwC,cAAc,EAAE;UAChBnE,IAAI,CAACmE,cAAc,EAAEG,WAAW,EAAEL,CAAC,CAAC;QACxC;QACA,IAAIlC,eAAe,EAAE;UACjB/B,IAAI,CAAC+B,eAAe,EAAEuC,WAAW,EAAEL,CAAC,CAAC;QACzC;QACA,IAAIhC,QAAQ,EACRjC,IAAI,CAACiC,QAAQ,EAAEqC,WAAW,EAAEL,CAAC,CAAC,CAAC,CAAC;QACpCG,iBAAiB,EAAE;QACnBC,kBAAkB,EAAE;QACpBZ,sBAAsB,CAACnC,KAAK,GAAGgD,WAAW;MAC9C;IACJ;IACA,SAASC,WAAW,CAACN,CAAC,EAAE;MACpB,IAAI,CAACT,iBAAiB,CAAClC,KAAK,EAAE;QAC1B0C,MAAM,CAACC,CAAC,CAAC;MACb;IACJ;IACA,SAASO,WAAW,CAACP,CAAC,EAAE;MACpB,IAAIT,iBAAiB,CAAClC,KAAK,EACvB;MACJ,QAAQ2C,CAAC,CAACQ,GAAG;QACT,KAAK,GAAG;QACR,KAAK,OAAO;UACRT,MAAM,CAACC,CAAC,CAAC;MAAC;IAEtB;IACA,SAASS,aAAa,CAACT,CAAC,EAAE;MACtB,QAAQA,CAAC,CAACQ,GAAG;QACT,KAAK,GAAG;UACJR,CAAC,CAACU,cAAc,EAAE;MAAC;IAE/B;IACA,MAAMC,cAAc,GAAG;MACnBC,KAAK,EAAE,MAAM;QACT,IAAIC,EAAE;QACN,CAACA,EAAE,GAAGvC,OAAO,CAACjB,KAAK,MAAM,IAAI,IAAIwD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACD,KAAK,EAAE;MACxE,CAAC;MACDE,IAAI,EAAE,MAAM;QACR,IAAID,EAAE;QACN,CAACA,EAAE,GAAGvC,OAAO,CAACjB,KAAK,MAAM,IAAI,IAAIwD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,EAAE;MACvE;IACJ,CAAC;IACD,MAAMC,aAAa,GAAGxE,MAAM,CAAC,UAAU,EAAEkC,YAAY,EAAEF,kBAAkB,CAAC;IAC1E,MAAMyC,UAAU,GAAG/F,QAAQ,CAAC,MAAM;MAC9B,MAAM;QAAEoC,KAAK,EAAEsB;MAAW,CAAC,GAAGG,aAAa;MAC3C,MAAM;QAAEmC,MAAM,EAAE;UAAEC;QAAqB,CAAC;QAAEC,IAAI,EAAE;UAAEC,YAAY;UAAEC,KAAK;UAAEC,YAAY;UAAEC,aAAa;UAAEC,gBAAgB;UAAEC,qBAAqB;UAAEC,uBAAuB;UAAEC,cAAc;UAAEC,sBAAsB;UAAEC,MAAM;UAAEC,WAAW;UAAEC,cAAc;UAAEC,aAAa;UAAEC,cAAc;UAAEC,SAAS;UAAEC,iBAAiB;UAAEC,6BAA6B;UAAEC,oBAAoB;UAAEC,qBAAqB;UAAEC,YAAY;UAAEC,eAAe;UAAE,CAACxG,SAAS,CAAC,UAAU,EAAE2C,UAAU,CAAC,GAAG8D,QAAQ;UAAE,CAACzG,SAAS,CAAC,MAAM,EAAE2C,UAAU,CAAC,GAAG/B;QAAK;MAAE,CAAC,GAAGkD,QAAQ,CAACzC,KAAK;MACpgB,OAAO;QACH,uBAAuB,EAAEmF,eAAe;QACxC,UAAU,EAAE5F,IAAI;QAChB,YAAY,EAAEsE,oBAAoB;QAClC,mBAAmB,EAAEE,YAAY;QACjC,YAAY,EAAES,MAAM;QACpB,oBAAoB,EAAEG,aAAa;QACnC,kBAAkB,EAAEF,WAAW;QAC/B,qBAAqB,EAAEC,cAAc;QACrC,6BAA6B,EAAEO,qBAAqB;QACpD,sBAAsB,EAAEL,cAAc;QACtC,WAAW,EAAEZ,KAAK;QAClB,mBAAmB,EAAEC,YAAY;QACjC,iBAAiB,EAAEE,gBAAgB;QACnC,uBAAuB,EAAEC,qBAAqB;QAC9C,yBAAyB,EAAEC,uBAAuB;QAClD,oBAAoB,EAAEH,aAAa;QACnC,4BAA4B,EAAEc,oBAAoB;QAClD,gBAAgB,EAAEH,SAAS;QAC3B,yBAAyB,EAAEC,iBAAiB;QAC5C,sBAAsB,EAAER,cAAc;QACtC,+BAA+B,EAAEC,sBAAsB;QACvD,uCAAuC,EAAEQ,6BAA6B;QACtE,eAAe,EAAEK,QAAQ;QACzB,mBAAmB,EAAEF;MACzB,CAAC;IACL,CAAC,CAAC;IACF,MAAMG,gBAAgB,GAAGlE,mBAAmB,GACtC3C,aAAa,CAAC,UAAU,EAAEZ,QAAQ,CAAC,MAAM6D,aAAa,CAACzB,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE2D,UAAU,EAAErE,KAAK,CAAC,GACpFQ,SAAS;IACf,OAAOV,MAAM,CAACC,MAAM,CAACgC,QAAQ,EAAEiC,cAAc,EAAE;MAC3CgC,UAAU,EAAE5B,aAAa;MACzBzC,OAAO;MACPsE,eAAe,EAAErE,kBAAkB;MACnCQ,cAAc,EAAEQ,iBAAiB;MACjCsD,eAAe,EAAEzD,kBAAkB;MACnC0D,WAAW,EAAEhD,QAAQ;MACrBiD,OAAO,EAAEvH,QAAQ,EAAE;MACnB8E,WAAW;MACXC,WAAW;MACXE,aAAa;MACbuC,OAAO,EAAExE,mBAAmB,GAAGrB,SAAS,GAAG6D,UAAU;MACrDiC,UAAU,EAAEP,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACO,UAAU;MAC3GC,QAAQ,EAAER,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACQ;IACnG,CAAC,CAAC;EACN,CAAC;EACDC,MAAM,GAAG;IACL,IAAItC,EAAE;IACN,MAAM;MAAEuC,MAAM;MAAEP,eAAe;MAAE9D,cAAc;MAAExB,aAAa;MAAEQ,kBAAkB;MAAEiF,OAAO;MAAED,OAAO;MAAEvF,KAAK;MAAEoF,eAAe;MAAEnF,SAAS;MAAE8C,WAAW;MAAEE,aAAa;MAAEH;IAAY,CAAC,GAAG,IAAI;IACzL,CAACO,EAAE,GAAG,IAAI,CAACqC,QAAQ,MAAM,IAAI,IAAIrC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC9E,IAAI,CAAC,IAAI,CAAC;IACvE,OAAQhB,CAAC,CAAC,KAAK,EAAE;MAAEI,GAAG,EAAE,SAAS;MAAEkI,KAAK,EAAE,CACjC,GAAET,eAAgB,WAAU,EAC7B,IAAI,CAACK,UAAU,EACf,IAAI,CAACN,UAAU,IAAK,GAAEC,eAAgB,gBAAe,EACrDC,eAAe,IAAK,GAAED,eAAgB,oBAAmB,EACzD7D,cAAc,IAAK,GAAE6D,eAAgB,qBAAoB,EACzDrF,aAAa,IAAK,GAAEqF,eAAgB,0BAAyB,EAC7D7E,kBAAkB,IAAK,GAAE6E,eAAgB,yBAAwB,CACpE;MAAEU,QAAQ,EAAEvE,cAAc,IAAI,CAACtB,SAAS,GAAGN,SAAS,GAAG,CAAC;MAAEoG,IAAI,EAAE,UAAU;MAAE,cAAc,EAAEhG,aAAa,GAAG,OAAO,GAAGsF,eAAe;MAAE,iBAAiB,EAAEE,OAAO;MAAEzG,KAAK,EAAE0G,OAAO;MAAEQ,OAAO,EAAEjD,WAAW;MAAEkD,SAAS,EAAEhD,aAAa;MAAEiD,OAAO,EAAEpD,WAAW;MAAEqD,WAAW,EAAE,MAAM;QACzQlI,EAAE,CAAC,aAAa,EAAEmI,MAAM,EAAG5D,CAAC,IAAK;UAC7BA,CAAC,CAACU,cAAc,EAAE;QACtB,CAAC,EAAE;UACCmD,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IAAE,CAAC,EACH9I,CAAC,CAAC,KAAK,EAAE;MAAEsI,KAAK,EAAG,GAAET,eAAgB;IAAuB,CAAC,EACzD,QAAQ,EACR7H,CAAC,CAAC,KAAK,EAAE;MAAEsI,KAAK,EAAG,GAAET,eAAgB;IAAe,CAAC,EACjD7H,CAAC,CAACe,qBAAqB,EAAE,IAAI,EAAE;MAC3BoB,OAAO,EAAE,MAAM,IAAI,CAACK,aAAa,GAAIxC,CAAC,CAAC,KAAK,EAAE;QAAEyF,GAAG,EAAE,eAAe;QAAE6C,KAAK,EAAG,GAAET,eAAgB;MAAgB,CAAC,EAAExG,QAAQ,CAAC,GAAKrB,CAAC,CAAC,KAAK,EAAE;QAAEyF,GAAG,EAAE,OAAO;QAAE6C,KAAK,EAAG,GAAET,eAAgB;MAAgB,CAAC,EAAEzG,SAAS;IACpN,CAAC,CAAC,EACFpB,CAAC,CAAC,KAAK,EAAE;MAAEsI,KAAK,EAAG,GAAET,eAAgB;IAAuB,CAAC,CAAC,CAAC,CAAC,EACxEpF,KAAK,KAAK,IAAI,IAAI4F,MAAM,CAAClG,OAAO,GAAInC,CAAC,CAAC,MAAM,EAAE;MAAEsI,KAAK,EAAG,GAAET,eAAgB,kBAAiB;MAAEkB,EAAE,EAAEf;IAAQ,CAAC,EAAEK,MAAM,CAAClG,OAAO,GAAGkG,MAAM,CAAClG,OAAO,EAAE,GAAGM,KAAK,CAAC,GAAI,IAAI,CAAC;EACvK;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}