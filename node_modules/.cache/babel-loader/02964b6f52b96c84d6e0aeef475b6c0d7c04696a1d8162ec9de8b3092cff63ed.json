{"ast":null,"code":"import { userList } from \"@/views/config/api\";\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    inputName: String,\n    modelValue: {\n      type: String,\n      default: \"\"\n    },\n    dialogFlag: {\n      default: false\n    }\n  },\n  data() {\n    return {\n      dialog: this.dialogFlag,\n      searchText: this.inputName,\n      memberList: [],\n      selected: null,\n      editForm: {\n        id: \"\",\n        countersign: \"\"\n      } //選擇員工待存區\n    };\n  },\n\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      }\n    }\n  },\n  mounted() {\n    userList().then(res => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    childClick() {\n      this.$emit(\"childByValue\", this.searchText);\n    },\n    select(rows) {\n      this.searchText = rows;\n    },\n    selectAll(rows) {\n      this.searchText = rows;\n    },\n    sendSearch(e) {\n      this.$emit(\"update:modelValue\", e);\n      this.searchText = e;\n    },\n    memberListDialog_Cance() {\n      this.dialog = false;\n      this.$emit(\"update:dialogFlag\", false);\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach(item => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    }\n  },\n  watch: {\n    multipleTable() {\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach(item => {\n          this.memberList.forEach(subItem => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n\n      /* this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });*/\n    }\n  }\n};","map":{"version":3,"mappings":"AAmBA,SAASA,QAAO,QAAS,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;IACJC,SAAS,EAAEC,MAAM;IACjBC,UAAU,EAAE;MACVC,IAAI,EAAEF,MAAM;MACZG,OAAO,EAAE;IACX,CAAC;IACDC,UAAU,EAAE;MACVD,OAAO,EAAE;IACX;EACF,CAAC;EACDE,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI,CAACF,UAAU;MACvBG,UAAU,EAAE,IAAI,CAACR,SAAS;MAC1BS,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;QACRC,EAAE,EAAE,EAAE;QACNC,WAAW,EAAE;MACf,CAAC,CAAE;IACL,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAE;MACbC,GAAG,GAAG;QACJ,OAAO,IAAI,CAACC,OAAO;MACrB;IACF;EACF,CAAC;EACDC,OAAO,GAAG;IACRrB,QAAQ,EAAE,CAACsB,IAAI,CAAEC,GAAG,IAAK;MACvB,IAAI,CAACX,UAAS,GAAIW,GAAG,CAACd,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC;EACDe,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,CAACC,KAAK,CAAC,cAAc,EAAE,IAAI,CAACf,UAAU,CAAC;IAC7C,CAAC;IACDgB,MAAM,CAACC,IAAI,EAAE;MACX,IAAI,CAACjB,UAAS,GAAIiB,IAAI;IACxB,CAAC;IACDC,SAAS,CAACD,IAAI,EAAE;MACd,IAAI,CAACjB,UAAS,GAAIiB,IAAI;IACxB,CAAC;IACDE,UAAU,CAACC,CAAC,EAAE;MACZ,IAAI,CAACL,KAAK,CAAC,mBAAmB,EAAEK,CAAC,CAAC;MAClC,IAAI,CAACpB,UAAS,GAAIoB,CAAC;IACrB,CAAC;IACDC,sBAAsB,GAAG;MACvB,IAAI,CAACtB,MAAK,GAAI,KAAK;MACnB,IAAI,CAACgB,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC;MACtC,IAAI,CAACO,SAAS,CAAC,MAAM;QACnB,IAAI,CAACnB,QAAQ,CAACE,WAAW,CAACkB,OAAO,CAAEC,IAAI,IAAK;UAC1C,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACH,IAAI,EAAE,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDI,KAAK,EAAE;IACLC,aAAa,GAAG;MACd,IAAI,CAACP,SAAS,CAAC,MAAM;QACnB,IAAI,CAACnB,QAAQ,CAACE,WAAW,CAACkB,OAAO,CAAEC,IAAI,IAAK;UAC1C,IAAI,CAACvB,UAAU,CAACsB,OAAO,CAAEO,OAAO,IAAK;YACnC,IAAIN,IAAI,CAACpB,EAAC,KAAM0B,OAAO,CAAC1B,EAAE,EAAE;cAC1B,IAAI,CAACqB,KAAK,CAACC,cAAc,CAACC,kBAAkB,CAACG,OAAO,EAAE,IAAI,CAAC;YAC7D;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;;;IAGF;EACF;AACF,CAAC","names":["userList","name","prop","inputName","String","modelValue","type","default","dialogFlag","data","dialog","searchText","memberList","selected","editForm","id","countersign","computed","dialogVisible","get","visible","mounted","then","res","methods","childClick","$emit","select","rows","selectAll","sendSearch","e","memberListDialog_Cance","$nextTick","forEach","item","$refs","multipleTables","toggleRowSelection","watch","multipleTable","subItem"],"sourceRoot":"","sources":["/Users/elmo/Documents/GitHub/meetings_vue3/src/components/memberDialog.vue"],"sourcesContent":["<template>\n  <el-dialog title=\"選擇人員\" draggable :show-close=\"false\" v-model=\"dialogVisible\">\n    <div class=\"flax mb-5 space-x-4\">\n      <el-table ref=\"multipleTables\" :data=\"memberList\" @selection-change=\"select\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column label=\"編號\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"部門\" prop=\"department\"></el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"flex w-full items-center justify-center space-x-2\">\n      <a-button status=\"primary\" @click=\"memberListDialog_Cance\">取消</a-button>\n      <a-button type=\"primary\" @click=\"childClick\">確定</a-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { userList } from \"@/views/config/api\";\n\nexport default {\n  name: \"memberDialog\",\n  prop: {\n    inputName: String,\n    modelValue: {\n      type: String,\n      default: \"\",\n    },\n    dialogFlag: {\n      default: false,\n    },\n  },\n  data() {\n    return {\n      dialog: this.dialogFlag,\n      searchText: this.inputName,\n      memberList: [],\n      selected: null,\n      editForm: {\n        id: \"\",\n        countersign: \"\",\n      }, //選擇員工待存區\n    };\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n    },\n  },\n  mounted() {\n    userList().then((res) => {\n      this.memberList = res.data;\n    });\n  },\n  methods: {\n    childClick() {\n      this.$emit(\"childByValue\", this.searchText);\n    },\n    select(rows) {\n      this.searchText = rows;\n    },\n    selectAll(rows) {\n      this.searchText = rows;\n    },\n    sendSearch(e) {\n      this.$emit(\"update:modelValue\", e);\n      this.searchText = e;\n    },\n    memberListDialog_Cance() {\n      this.dialog = false;\n      this.$emit(\"update:dialogFlag\", false);\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.$refs.multipleTables.toggleRowSelection(item, false);\n        });\n      });\n    },\n  },\n  watch: {\n    multipleTable() {\n      this.$nextTick(() => {\n        this.editForm.countersign.forEach((item) => {\n          this.memberList.forEach((subItem) => {\n            if (item.id === subItem.id) {\n              this.$refs.multipleTables.toggleRowSelection(subItem, true);\n            }\n          });\n        });\n      });\n\n      /* this.$nextTick(() => {\n        this.$refs.multipleTable.toggleRowSelection(this.memberList[0], true);\n      });*/\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}