{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseSelectorPath } from './parse';\nimport { isMediaOrSupports } from './utils';\nconst kebabRegex = /[A-Z]/g;\nfunction kebabCase(pattern) {\n  return pattern.replace(kebabRegex, match => '-' + match.toLowerCase());\n}\n/** TODO: refine it to solve nested object */\nfunction unwrapProperty(prop, indent = '  ') {\n  if (typeof prop === 'object' && prop !== null) {\n    return ' {\\n' + Object.entries(prop).map(v => {\n      return indent + `  ${kebabCase(v[0])}: ${v[1]};`;\n    }).join('\\n') + '\\n' + indent + '}';\n  }\n  return `: ${prop};`;\n}\n/** unwrap properties */\nfunction unwrapProperties(props, instance, params) {\n  if (typeof props === 'function') {\n    return props({\n      context: instance.context,\n      props: params\n    });\n  }\n  return props;\n}\nfunction createStyle(selector, props, instance, params) {\n  if (!props) return '';\n  // eslint-disable-next-line\n  const unwrappedProps = unwrapProperties(props, instance, params);\n  if (!unwrappedProps) return '';\n  if (typeof unwrappedProps === 'string') {\n    return `${selector} {\\n${unwrappedProps}\\n}`;\n  }\n  const propertyNames = Object.keys(unwrappedProps);\n  if (propertyNames.length === 0) {\n    if (instance.config.keepEmptyBlock) return selector + ' {\\n}';\n    return '';\n  }\n  const statements = selector ? [selector + ' {'] : [];\n  propertyNames.forEach(propertyName => {\n    const property = unwrappedProps[propertyName];\n    if (propertyName === 'raw') {\n      statements.push('\\n' + property + '\\n');\n      return;\n    }\n    propertyName = kebabCase(propertyName);\n    if (property !== null && property !== undefined) {\n      statements.push(`  ${propertyName}${unwrapProperty(property)}`);\n    }\n  });\n  if (selector) {\n    statements.push('}');\n  }\n  return statements.join('\\n');\n}\nfunction loopCNodeListWithCallback(children, options, callback) {\n  /* istanbul ignore if */\n  if (!children) return;\n  children.forEach(child => {\n    if (Array.isArray(child)) {\n      loopCNodeListWithCallback(child, options, callback);\n    } else if (typeof child === 'function') {\n      const grandChildren = child(options);\n      if (Array.isArray(grandChildren)) {\n        loopCNodeListWithCallback(grandChildren, options, callback);\n      } else if (grandChildren) {\n        callback(grandChildren);\n      }\n    } else if (child) {\n      callback(child);\n    }\n  });\n}\nfunction traverseCNode(node, selectorPaths, styles, instance, params, styleSheet) {\n  const $ = node.$;\n  let blockSelector = '';\n  if (!$ || typeof $ === 'string') {\n    if (isMediaOrSupports($)) {\n      blockSelector = $;\n    } else {\n      // as a string selector\n      selectorPaths.push($);\n    }\n  } else if (typeof $ === 'function') {\n    const selector = $({\n      context: instance.context,\n      props: params\n    });\n    if (isMediaOrSupports(selector)) {\n      blockSelector = selector;\n    } else {\n      // as a lazy selector\n      selectorPaths.push(selector);\n    }\n  } else {\n    // as a option selector\n    if ($.before) $.before(instance.context);\n    if (!$.$ || typeof $.$ === 'string') {\n      if (isMediaOrSupports($.$)) {\n        blockSelector = $.$;\n      } else {\n        // as a string selector\n        selectorPaths.push($.$);\n      }\n    } else /* istanbul ignore else */if ($.$) {\n        const selector = $.$({\n          context: instance.context,\n          props: params\n        });\n        if (isMediaOrSupports(selector)) {\n          blockSelector = selector;\n        } else {\n          // as a lazy selector\n          selectorPaths.push(selector);\n        }\n      }\n  }\n  const selector = parseSelectorPath(selectorPaths);\n  const style = createStyle(selector, node.props, instance, params);\n  if (blockSelector) {\n    styles.push(`${blockSelector} {`);\n    if (styleSheet && style) {\n      styleSheet.insertRule(`${blockSelector} {\\n${style}\\n}\\n`);\n    }\n  } else {\n    if (styleSheet && style) {\n      styleSheet.insertRule(style);\n    }\n    if (!styleSheet && style.length) styles.push(style);\n  }\n  if (node.children) {\n    loopCNodeListWithCallback(node.children, {\n      context: instance.context,\n      props: params\n    }, childNode => {\n      if (typeof childNode === 'string') {\n        const style = createStyle(selector, {\n          raw: childNode\n        }, instance, params);\n        if (styleSheet) {\n          styleSheet.insertRule(style);\n        } else {\n          styles.push(style);\n        }\n      } else {\n        traverseCNode(childNode, selectorPaths, styles, instance, params, styleSheet);\n      }\n    });\n  }\n  selectorPaths.pop();\n  if (blockSelector) {\n    styles.push('}');\n  }\n  if ($ && $.after) $.after(instance.context);\n}\nexport function render(node, instance, props, insertRule = false) {\n  const styles = [];\n  traverseCNode(node, [], styles, instance, props, insertRule ? node.instance.__styleSheet : undefined);\n  if (insertRule) return '';\n  return styles.join('\\n\\n');\n}","map":{"version":3,"names":["parseSelectorPath","isMediaOrSupports","kebabRegex","kebabCase","pattern","replace","match","toLowerCase","unwrapProperty","prop","indent","Object","entries","map","v","join","unwrapProperties","props","instance","params","context","createStyle","selector","unwrappedProps","propertyNames","keys","length","config","keepEmptyBlock","statements","forEach","propertyName","property","push","undefined","loopCNodeListWithCallback","children","options","callback","child","Array","isArray","grandChildren","traverseCNode","node","selectorPaths","styles","styleSheet","$","blockSelector","before","style","insertRule","childNode","raw","pop","after","render","__styleSheet"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/css-render/esm/render.js"],"sourcesContent":["import { parseSelectorPath } from './parse';\nimport { isMediaOrSupports } from './utils';\nconst kebabRegex = /[A-Z]/g;\nfunction kebabCase(pattern) {\n    return pattern.replace(kebabRegex, match => '-' + match.toLowerCase());\n}\n/** TODO: refine it to solve nested object */\nfunction unwrapProperty(prop, indent = '  ') {\n    if (typeof prop === 'object' && prop !== null) {\n        return (' {\\n' +\n            Object.entries(prop).map(v => {\n                return indent + `  ${kebabCase(v[0])}: ${v[1]};`;\n            }).join('\\n') +\n            '\\n' + indent + '}');\n    }\n    return `: ${prop};`;\n}\n/** unwrap properties */\nfunction unwrapProperties(props, instance, params) {\n    if (typeof props === 'function') {\n        return props({\n            context: instance.context,\n            props: params\n        });\n    }\n    return props;\n}\nfunction createStyle(selector, props, instance, params) {\n    if (!props)\n        return '';\n    // eslint-disable-next-line\n    const unwrappedProps = unwrapProperties(props, instance, params);\n    if (!unwrappedProps)\n        return '';\n    if (typeof unwrappedProps === 'string') {\n        return `${selector} {\\n${unwrappedProps}\\n}`;\n    }\n    const propertyNames = Object.keys(unwrappedProps);\n    if (propertyNames.length === 0) {\n        if (instance.config.keepEmptyBlock)\n            return selector + ' {\\n}';\n        return '';\n    }\n    const statements = selector\n        ? [\n            selector + ' {'\n        ]\n        : [];\n    propertyNames.forEach(propertyName => {\n        const property = unwrappedProps[propertyName];\n        if (propertyName === 'raw') {\n            statements.push('\\n' + property + '\\n');\n            return;\n        }\n        propertyName = kebabCase(propertyName);\n        if (property !== null && property !== undefined) {\n            statements.push(`  ${propertyName}${unwrapProperty(property)}`);\n        }\n    });\n    if (selector) {\n        statements.push('}');\n    }\n    return statements.join('\\n');\n}\nfunction loopCNodeListWithCallback(children, options, callback) {\n    /* istanbul ignore if */\n    if (!children)\n        return;\n    children.forEach(child => {\n        if (Array.isArray(child)) {\n            loopCNodeListWithCallback(child, options, callback);\n        }\n        else if (typeof child === 'function') {\n            const grandChildren = child(options);\n            if (Array.isArray(grandChildren)) {\n                loopCNodeListWithCallback(grandChildren, options, callback);\n            }\n            else if (grandChildren) {\n                callback(grandChildren);\n            }\n        }\n        else if (child) {\n            callback(child);\n        }\n    });\n}\nfunction traverseCNode(node, selectorPaths, styles, instance, params, styleSheet) {\n    const $ = node.$;\n    let blockSelector = '';\n    if (!$ || typeof $ === 'string') {\n        if (isMediaOrSupports($)) {\n            blockSelector = $;\n        }\n        else {\n            // as a string selector\n            selectorPaths.push($);\n        }\n    }\n    else if (typeof $ === 'function') {\n        const selector = $({\n            context: instance.context,\n            props: params\n        });\n        if (isMediaOrSupports(selector)) {\n            blockSelector = selector;\n        }\n        else {\n            // as a lazy selector\n            selectorPaths.push(selector);\n        }\n    }\n    else { // as a option selector\n        if ($.before)\n            $.before(instance.context);\n        if (!$.$ || typeof $.$ === 'string') {\n            if (isMediaOrSupports($.$)) {\n                blockSelector = $.$;\n            }\n            else {\n                // as a string selector\n                selectorPaths.push($.$);\n            }\n        }\n        else /* istanbul ignore else */ if ($.$) {\n            const selector = $.$({\n                context: instance.context,\n                props: params\n            });\n            if (isMediaOrSupports(selector)) {\n                blockSelector = selector;\n            }\n            else {\n                // as a lazy selector\n                selectorPaths.push(selector);\n            }\n        }\n    }\n    const selector = parseSelectorPath(selectorPaths);\n    const style = createStyle(selector, node.props, instance, params);\n    if (blockSelector) {\n        styles.push(`${blockSelector} {`);\n        if (styleSheet && style) {\n            styleSheet.insertRule(`${blockSelector} {\\n${style}\\n}\\n`);\n        }\n    }\n    else {\n        if (styleSheet && style) {\n            styleSheet.insertRule(style);\n        }\n        if (!styleSheet && style.length)\n            styles.push(style);\n    }\n    if (node.children) {\n        loopCNodeListWithCallback(node.children, {\n            context: instance.context,\n            props: params\n        }, childNode => {\n            if (typeof childNode === 'string') {\n                const style = createStyle(selector, { raw: childNode }, instance, params);\n                if (styleSheet) {\n                    styleSheet.insertRule(style);\n                }\n                else {\n                    styles.push(style);\n                }\n            }\n            else {\n                traverseCNode(childNode, selectorPaths, styles, instance, params, styleSheet);\n            }\n        });\n    }\n    selectorPaths.pop();\n    if (blockSelector) {\n        styles.push('}');\n    }\n    if ($ && $.after)\n        $.after(instance.context);\n}\nexport function render(node, instance, props, insertRule = false) {\n    const styles = [];\n    traverseCNode(node, [], styles, instance, props, insertRule\n        ? node.instance.__styleSheet\n        : undefined);\n    if (insertRule)\n        return '';\n    return styles.join('\\n\\n');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}