{"ast":null,"code":"const warnedMessages = new Set();\nexport function warnOnce(location, message) {\n  const mergedMessage = `[naive/${location}]: ${message}`;\n  if (warnedMessages.has(mergedMessage)) return;\n  warnedMessages.add(mergedMessage);\n  console.error(mergedMessage);\n}\nexport function warn(location, message) {\n  console.error(`[naive/${location}]: ${message}`);\n}\nexport function throwError(location, message) {\n  throw new Error(`[naive/${location}]: ${message}`);\n}","map":{"version":3,"names":["warnedMessages","Set","warnOnce","location","message","mergedMessage","has","add","console","error","warn","throwError","Error"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/_utils/naive/warn.js"],"sourcesContent":["const warnedMessages = new Set();\nexport function warnOnce(location, message) {\n    const mergedMessage = `[naive/${location}]: ${message}`;\n    if (warnedMessages.has(mergedMessage))\n        return;\n    warnedMessages.add(mergedMessage);\n    console.error(mergedMessage);\n}\nexport function warn(location, message) {\n    console.error(`[naive/${location}]: ${message}`);\n}\nexport function throwError(location, message) {\n    throw new Error(`[naive/${location}]: ${message}`);\n}\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,IAAIC,GAAG,EAAE;AAChC,OAAO,SAASC,QAAQ,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACxC,MAAMC,aAAa,GAAI,UAASF,QAAS,MAAKC,OAAQ,EAAC;EACvD,IAAIJ,cAAc,CAACM,GAAG,CAACD,aAAa,CAAC,EACjC;EACJL,cAAc,CAACO,GAAG,CAACF,aAAa,CAAC;EACjCG,OAAO,CAACC,KAAK,CAACJ,aAAa,CAAC;AAChC;AACA,OAAO,SAASK,IAAI,CAACP,QAAQ,EAAEC,OAAO,EAAE;EACpCI,OAAO,CAACC,KAAK,CAAE,UAASN,QAAS,MAAKC,OAAQ,EAAC,CAAC;AACpD;AACA,OAAO,SAASO,UAAU,CAACR,QAAQ,EAAEC,OAAO,EAAE;EAC1C,MAAM,IAAIQ,KAAK,CAAE,UAAST,QAAS,MAAKC,OAAQ,EAAC,CAAC;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}