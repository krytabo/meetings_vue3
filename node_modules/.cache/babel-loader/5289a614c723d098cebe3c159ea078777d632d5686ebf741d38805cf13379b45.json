{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { NButton } from '../../button';\nimport { useLocale } from '../../_mixins';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'TransferHeader',\n  props: {\n    size: {\n      type: String,\n      required: true\n    },\n    source: Boolean,\n    onCheckedAll: Function,\n    onClearAll: Function,\n    title: String\n  },\n  setup(props) {\n    const {\n      targetOptionsRef,\n      canNotSelectAnythingRef,\n      canBeClearedRef,\n      allCheckedRef,\n      mergedThemeRef,\n      disabledRef,\n      mergedClsPrefixRef,\n      srcOptionsLengthRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(transferInjectionKey);\n    const {\n      localeRef\n    } = useLocale('Transfer');\n    return () => {\n      const {\n        source,\n        onClearAll,\n        onCheckedAll\n      } = props;\n      const {\n        value: mergedTheme\n      } = mergedThemeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: locale\n      } = localeRef;\n      const buttonSize = props.size === 'large' ? 'small' : 'tiny';\n      const {\n        title\n      } = props;\n      return h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header`\n      }, title && h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__title`\n      }, title), source && h(NButton, {\n        class: `${mergedClsPrefix}-transfer-list-header__button`,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        size: buttonSize,\n        tertiary: true,\n        onClick: allCheckedRef.value ? onClearAll : onCheckedAll,\n        disabled: canNotSelectAnythingRef.value || disabledRef.value\n      }, {\n        default: () => allCheckedRef.value ? locale.unselectAll : locale.selectAll\n      }), !source && canBeClearedRef.value && h(NButton, {\n        class: `${mergedClsPrefix}-transfer-list-header__button`,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        size: buttonSize,\n        tertiary: true,\n        onClick: onClearAll,\n        disabled: disabledRef.value\n      }, {\n        default: () => locale.clearAll\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__extra`\n      }, source ? locale.total(srcOptionsLengthRef.value) : locale.selected(targetOptionsRef.value.length)));\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","NButton","useLocale","transferInjectionKey","name","props","size","type","String","required","source","Boolean","onCheckedAll","Function","onClearAll","title","setup","targetOptionsRef","canNotSelectAnythingRef","canBeClearedRef","allCheckedRef","mergedThemeRef","disabledRef","mergedClsPrefixRef","srcOptionsLengthRef","localeRef","value","mergedTheme","mergedClsPrefix","locale","buttonSize","class","theme","peers","Button","themeOverrides","peerOverrides","tertiary","onClick","disabled","default","unselectAll","selectAll","clearAll","total","selected","length"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/transfer/src/TransferHeader.js"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { NButton } from '../../button';\nimport { useLocale } from '../../_mixins';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'TransferHeader',\n    props: {\n        size: {\n            type: String,\n            required: true\n        },\n        source: Boolean,\n        onCheckedAll: Function,\n        onClearAll: Function,\n        title: String\n    },\n    setup(props) {\n        const { targetOptionsRef, canNotSelectAnythingRef, canBeClearedRef, allCheckedRef, mergedThemeRef, disabledRef, mergedClsPrefixRef, srcOptionsLengthRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(transferInjectionKey);\n        const { localeRef } = useLocale('Transfer');\n        return () => {\n            const { source, onClearAll, onCheckedAll } = props;\n            const { value: mergedTheme } = mergedThemeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            const { value: locale } = localeRef;\n            const buttonSize = props.size === 'large' ? 'small' : 'tiny';\n            const { title } = props;\n            return (h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header` },\n                title && (h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__title` }, title)),\n                source && (h(NButton, { class: `${mergedClsPrefix}-transfer-list-header__button`, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: buttonSize, tertiary: true, onClick: allCheckedRef.value ? onClearAll : onCheckedAll, disabled: canNotSelectAnythingRef.value || disabledRef.value }, {\n                    default: () => allCheckedRef.value ? locale.unselectAll : locale.selectAll\n                })),\n                !source && canBeClearedRef.value && (h(NButton, { class: `${mergedClsPrefix}-transfer-list-header__button`, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: buttonSize, tertiary: true, onClick: onClearAll, disabled: disabledRef.value }, {\n                    default: () => locale.clearAll\n                })),\n                h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__extra` }, source\n                    ? locale.total(srcOptionsLengthRef.value)\n                    : locale.selected(targetOptionsRef.value.length))));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}