{"ast":null,"code":"// string => string (expected, not implemented)\n// string => number (legacy)\nexport function parse(value) {\n  if (value === undefined || value === null || typeof value === 'string' && value.trim() === '') {\n    return null;\n  }\n  return Number(value);\n}\n// can be parsed to number but shouldn't be applied when inputing\n// when value includes `.`, ending with 0 and`.`, doesn't update, if 0 parse func will remove 0\nexport function isWipValue(value) {\n  return value.includes('.') && (/^(-)?\\d+.*(\\.|0)$/.test(value) || /^\\.\\d+$/.test(value));\n}\n// string => boolean (expected, not implemented)\n// number => boolean (legacy)\nexport function validator(value) {\n  if (value === undefined || value === null) return true;\n  if (Number.isNaN(value)) return false;\n  return true;\n}\n// string => string (expected, not implemented)\n// number => string (legacy)\nexport function format(value, precision) {\n  if (value === undefined || value === null) return '';\n  return precision === undefined ? String(value) : value.toFixed(precision);\n}\nexport function parseNumber(number) {\n  if (number === null) return null;\n  if (typeof number === 'number') {\n    return number;\n  } else {\n    const parsedNumber = Number(number);\n    if (Number.isNaN(parsedNumber)) return null;else {\n      return parsedNumber;\n    }\n  }\n}","map":{"version":3,"names":["parse","value","undefined","trim","Number","isWipValue","includes","test","validator","isNaN","format","precision","String","toFixed","parseNumber","number","parsedNumber"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/input-number/src/utils.js"],"sourcesContent":["// string => string (expected, not implemented)\n// string => number (legacy)\nexport function parse(value) {\n    if (value === undefined ||\n        value === null ||\n        (typeof value === 'string' && value.trim() === '')) {\n        return null;\n    }\n    return Number(value);\n}\n// can be parsed to number but shouldn't be applied when inputing\n// when value includes `.`, ending with 0 and`.`, doesn't update, if 0 parse func will remove 0\nexport function isWipValue(value) {\n    return (value.includes('.') &&\n        (/^(-)?\\d+.*(\\.|0)$/.test(value) || /^\\.\\d+$/.test(value)));\n}\n// string => boolean (expected, not implemented)\n// number => boolean (legacy)\nexport function validator(value) {\n    if (value === undefined || value === null)\n        return true;\n    if (Number.isNaN(value))\n        return false;\n    return true;\n}\n// string => string (expected, not implemented)\n// number => string (legacy)\nexport function format(value, precision) {\n    if (value === undefined || value === null)\n        return '';\n    return precision === undefined ? String(value) : value.toFixed(precision);\n}\nexport function parseNumber(number) {\n    if (number === null)\n        return null;\n    if (typeof number === 'number') {\n        return number;\n    }\n    else {\n        const parsedNumber = Number(number);\n        if (Number.isNaN(parsedNumber))\n            return null;\n        else {\n            return parsedNumber;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,KAAK,CAACC,KAAK,EAAE;EACzB,IAAIA,KAAK,KAAKC,SAAS,IACnBD,KAAK,KAAK,IAAI,IACb,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACE,IAAI,EAAE,KAAK,EAAG,EAAE;IACpD,OAAO,IAAI;EACf;EACA,OAAOC,MAAM,CAACH,KAAK,CAAC;AACxB;AACA;AACA;AACA,OAAO,SAASI,UAAU,CAACJ,KAAK,EAAE;EAC9B,OAAQA,KAAK,CAACK,QAAQ,CAAC,GAAG,CAAC,KACtB,mBAAmB,CAACC,IAAI,CAACN,KAAK,CAAC,IAAI,SAAS,CAACM,IAAI,CAACN,KAAK,CAAC,CAAC;AAClE;AACA;AACA;AACA,OAAO,SAASO,SAAS,CAACP,KAAK,EAAE;EAC7B,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EACrC,OAAO,IAAI;EACf,IAAIG,MAAM,CAACK,KAAK,CAACR,KAAK,CAAC,EACnB,OAAO,KAAK;EAChB,OAAO,IAAI;AACf;AACA;AACA;AACA,OAAO,SAASS,MAAM,CAACT,KAAK,EAAEU,SAAS,EAAE;EACrC,IAAIV,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EACrC,OAAO,EAAE;EACb,OAAOU,SAAS,KAAKT,SAAS,GAAGU,MAAM,CAACX,KAAK,CAAC,GAAGA,KAAK,CAACY,OAAO,CAACF,SAAS,CAAC;AAC7E;AACA,OAAO,SAASG,WAAW,CAACC,MAAM,EAAE;EAChC,IAAIA,MAAM,KAAK,IAAI,EACf,OAAO,IAAI;EACf,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC5B,OAAOA,MAAM;EACjB,CAAC,MACI;IACD,MAAMC,YAAY,GAAGZ,MAAM,CAACW,MAAM,CAAC;IACnC,IAAIX,MAAM,CAACK,KAAK,CAACO,YAAY,CAAC,EAC1B,OAAO,IAAI,CAAC,KACX;MACD,OAAOA,YAAY;IACvB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}