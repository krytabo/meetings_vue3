{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function toArray(arg) {\n  if (Array.isArray(arg)) return arg;\n  return [arg];\n}\n// Do not use enum for lint plugin has error\nexport const TRAVERSE_COMMAND = {\n  STOP: 'STOP'\n};\nexport function traverseWithCb(treeNode, callback) {\n  const command = callback(treeNode);\n  if (treeNode.children !== undefined && command !== TRAVERSE_COMMAND.STOP) {\n    treeNode.children.forEach(childNode => traverseWithCb(childNode, callback));\n  }\n}\nexport function getNonLeafKeys(treeNodes, options = {}) {\n  const {\n    preserveGroup = false\n  } = options;\n  const keys = [];\n  const cb = preserveGroup ? node => {\n    if (!node.isLeaf) {\n      keys.push(node.key);\n      traverse(node.children);\n    }\n  } : node => {\n    if (!node.isLeaf) {\n      if (!node.isGroup) keys.push(node.key);\n      traverse(node.children);\n    }\n  };\n  function traverse(nodes) {\n    nodes.forEach(cb);\n  }\n  traverse(treeNodes);\n  return keys;\n}\nexport function isLeaf(rawNode, getChildren) {\n  const {\n    isLeaf\n  } = rawNode;\n  if (isLeaf !== undefined) return isLeaf;else if (!getChildren(rawNode)) return true;\n  return false;\n}\nexport function defaultGetChildren(node) {\n  return node.children;\n}\nexport function defaultGetKey(node) {\n  return node.key;\n}\nexport function isIgnored() {\n  return false;\n}\nexport function isShallowLoaded(rawNode, getChildren) {\n  const {\n    isLeaf\n  } = rawNode;\n  if (isLeaf === false && !Array.isArray(getChildren(rawNode))) return false;\n  return true;\n}\nexport function isDisabled(rawNode) {\n  return rawNode.disabled === true;\n}\nexport function isExpilicitlyNotLoaded(rawNode, getChildren) {\n  return rawNode.isLeaf === false && !Array.isArray(getChildren(rawNode));\n}\nexport function isNodeInvalid(rawNode, getChildren) {\n  if (rawNode.isLeaf === true) {\n    const children = getChildren(rawNode);\n    if (Array.isArray(children) && children.length > 0) return true;\n  }\n  return false;\n}\nexport function unwrapCheckedKeys(result) {\n  var _a;\n  if (result === undefined || result === null) return [];\n  if (Array.isArray(result)) return result;\n  return (_a = result.checkedKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function unwrapIndeterminateKeys(result) {\n  var _a;\n  if (result === undefined || result === null || Array.isArray(result)) {\n    return [];\n  }\n  return (_a = result.indeterminateKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function merge(originalKeys, keysToAdd) {\n  const set = new Set(originalKeys);\n  keysToAdd.forEach(key => {\n    if (!set.has(key)) {\n      set.add(key);\n    }\n  });\n  return Array.from(set);\n}\nexport function minus(originalKeys, keysToRemove) {\n  const set = new Set(originalKeys);\n  keysToRemove.forEach(key => {\n    if (set.has(key)) {\n      set.delete(key);\n    }\n  });\n  return Array.from(set);\n}\nexport function isGroup(rawNode) {\n  return (rawNode === null || rawNode === void 0 ? void 0 : rawNode.type) === 'group';\n}\nexport function createIndexGetter(treeNodes) {\n  const map = new Map();\n  treeNodes.forEach((treeNode, i) => {\n    map.set(treeNode.key, i);\n  });\n  return key => {\n    var _a;\n    return (_a = map.get(key)) !== null && _a !== void 0 ? _a : null;\n  };\n}","map":{"version":3,"names":["toArray","arg","Array","isArray","TRAVERSE_COMMAND","STOP","traverseWithCb","treeNode","callback","command","children","undefined","forEach","childNode","getNonLeafKeys","treeNodes","options","preserveGroup","keys","cb","node","isLeaf","push","key","traverse","isGroup","nodes","rawNode","getChildren","defaultGetChildren","defaultGetKey","isIgnored","isShallowLoaded","isDisabled","disabled","isExpilicitlyNotLoaded","isNodeInvalid","length","unwrapCheckedKeys","result","_a","checkedKeys","unwrapIndeterminateKeys","indeterminateKeys","merge","originalKeys","keysToAdd","set","Set","has","add","from","minus","keysToRemove","delete","type","createIndexGetter","map","Map","i","get"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/treemate/es/utils.js"],"sourcesContent":["export function toArray(arg) {\n    if (Array.isArray(arg))\n        return arg;\n    return [arg];\n}\n// Do not use enum for lint plugin has error\nexport const TRAVERSE_COMMAND = {\n    STOP: 'STOP'\n};\nexport function traverseWithCb(treeNode, callback) {\n    const command = callback(treeNode);\n    if (treeNode.children !== undefined && command !== TRAVERSE_COMMAND.STOP) {\n        treeNode.children.forEach((childNode) => traverseWithCb(childNode, callback));\n    }\n}\nexport function getNonLeafKeys(treeNodes, options = {}) {\n    const { preserveGroup = false } = options;\n    const keys = [];\n    const cb = preserveGroup\n        ? (node) => {\n            if (!node.isLeaf) {\n                keys.push(node.key);\n                traverse(node.children);\n            }\n        }\n        : (node) => {\n            if (!node.isLeaf) {\n                if (!node.isGroup)\n                    keys.push(node.key);\n                traverse(node.children);\n            }\n        };\n    function traverse(nodes) {\n        nodes.forEach(cb);\n    }\n    traverse(treeNodes);\n    return keys;\n}\nexport function isLeaf(rawNode, getChildren) {\n    const { isLeaf } = rawNode;\n    if (isLeaf !== undefined)\n        return isLeaf;\n    else if (!getChildren(rawNode))\n        return true;\n    return false;\n}\nexport function defaultGetChildren(node) {\n    return node.children;\n}\nexport function defaultGetKey(node) {\n    return node.key;\n}\nexport function isIgnored() {\n    return false;\n}\nexport function isShallowLoaded(rawNode, getChildren) {\n    const { isLeaf } = rawNode;\n    if (isLeaf === false && !Array.isArray(getChildren(rawNode)))\n        return false;\n    return true;\n}\nexport function isDisabled(rawNode) {\n    return rawNode.disabled === true;\n}\nexport function isExpilicitlyNotLoaded(rawNode, getChildren) {\n    return (rawNode.isLeaf === false && !Array.isArray(getChildren(rawNode)));\n}\nexport function isNodeInvalid(rawNode, getChildren) {\n    if (rawNode.isLeaf === true) {\n        const children = getChildren(rawNode);\n        if (Array.isArray(children) && children.length > 0)\n            return true;\n    }\n    return false;\n}\nexport function unwrapCheckedKeys(result) {\n    var _a;\n    if (result === undefined || result === null)\n        return [];\n    if (Array.isArray(result))\n        return result;\n    return (_a = result.checkedKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function unwrapIndeterminateKeys(result) {\n    var _a;\n    if (result === undefined || result === null || Array.isArray(result)) {\n        return [];\n    }\n    return (_a = result.indeterminateKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function merge(originalKeys, keysToAdd) {\n    const set = new Set(originalKeys);\n    keysToAdd.forEach((key) => {\n        if (!set.has(key)) {\n            set.add(key);\n        }\n    });\n    return Array.from(set);\n}\nexport function minus(originalKeys, keysToRemove) {\n    const set = new Set(originalKeys);\n    keysToRemove.forEach((key) => {\n        if (set.has(key)) {\n            set.delete(key);\n        }\n    });\n    return Array.from(set);\n}\nexport function isGroup(rawNode) {\n    return (rawNode === null || rawNode === void 0 ? void 0 : rawNode.type) === 'group';\n}\nexport function createIndexGetter(treeNodes) {\n    const map = new Map();\n    treeNodes.forEach((treeNode, i) => {\n        map.set(treeNode.key, i);\n    });\n    return (key) => { var _a; return (_a = map.get(key)) !== null && _a !== void 0 ? _a : null; };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}