{"ast":null,"code":"import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { isBrowser, warnOnce } from '../../_utils';\nimport { watermarkLight } from '../styles';\nimport style from './styles/index.cssr';\nfunction getRatio(context) {\n  if (!context) {\n    return 1;\n  }\n  const backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n}\nexport const watermarkProps = Object.assign(Object.assign({}, useTheme.props), {\n  debug: Boolean,\n  cross: Boolean,\n  fullscreen: Boolean,\n  width: {\n    type: Number,\n    default: 32\n  },\n  height: {\n    type: Number,\n    default: 32\n  },\n  zIndex: {\n    type: Number,\n    default: 10\n  },\n  xGap: {\n    type: Number,\n    default: 0\n  },\n  yGap: {\n    type: Number,\n    default: 0\n  },\n  yOffset: {\n    type: Number,\n    default: 0\n  },\n  xOffset: {\n    type: Number,\n    default: 0\n  },\n  rotate: {\n    type: Number,\n    default: 0\n  },\n  image: String,\n  imageOpacity: {\n    type: Number,\n    default: 1\n  },\n  imageHeight: Number,\n  imageWidth: Number,\n  content: String,\n  selectable: {\n    type: Boolean,\n    default: true\n  },\n  fontSize: {\n    type: Number,\n    default: 14\n  },\n  fontFamily: String,\n  fontStyle: {\n    type: String,\n    default: 'normal'\n  },\n  fontVariant: {\n    type: String,\n    default: ''\n  },\n  fontWeight: {\n    type: Number,\n    default: 400\n  },\n  fontColor: {\n    type: String,\n    default: 'rgba(128, 128, 128, .3)'\n  },\n  fontStretch: {\n    type: String,\n    default: ''\n  },\n  lineHeight: {\n    type: Number,\n    default: 14\n  },\n  globalRotate: {\n    type: Number,\n    default: 0\n  }\n});\nexport default defineComponent({\n  name: 'Watermark',\n  props: watermarkProps,\n  setup(props, {\n    slots\n  }) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props, mergedClsPrefixRef);\n    const base64UrlRef = ref('');\n    const canvas = isBrowser ? document.createElement('canvas') : null;\n    const ctx = canvas ? canvas.getContext('2d') : null;\n    const fontsReadyRef = ref(false);\n    onFontsReady(() => fontsReadyRef.value = true);\n    watchEffect(() => {\n      if (!canvas) return;\n      void fontsReadyRef.value;\n      const ratio = getRatio(ctx);\n      const {\n        xGap,\n        yGap,\n        width,\n        height,\n        yOffset,\n        xOffset,\n        rotate,\n        image,\n        content,\n        fontColor,\n        fontStyle,\n        fontVariant,\n        fontStretch,\n        fontWeight,\n        fontFamily,\n        fontSize,\n        lineHeight,\n        debug\n      } = props;\n      const canvasWidth = (xGap + width) * ratio;\n      const canvasHeight = (yGap + height) * ratio;\n      const canvasOffsetLeft = xOffset * ratio;\n      const canvasOffsetTop = yOffset * ratio;\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      if (ctx) {\n        ctx.translate(0, 0);\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n        if (debug) {\n          ctx.strokeStyle = 'grey';\n          ctx.strokeRect(0, 0, markWidth, markHeight);\n        }\n        ctx.rotate(rotate * (Math.PI / 180));\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n          img.onload = () => {\n            ctx.globalAlpha = props.imageOpacity;\n            const {\n              imageWidth,\n              imageHeight\n            } = props;\n            ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth || (imageHeight ? img.width * imageHeight / img.height : img.width)) * ratio, (props.imageHeight || (imageWidth ? img.height * imageWidth / img.width : img.height)) * ratio);\n            base64UrlRef.value = canvas.toDataURL();\n          };\n        } else if (content) {\n          if (debug) {\n            ctx.strokeStyle = 'green';\n            ctx.strokeRect(0, 0, markWidth, markHeight);\n          }\n          ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n          ctx.fillStyle = fontColor;\n          ctx.fillText(content, canvasOffsetLeft, canvasOffsetTop + lineHeight * ratio);\n          base64UrlRef.value = canvas.toDataURL();\n        }\n      } else {\n        warnOnce('watermark', 'Canvas is not supported in the browser.');\n      }\n    });\n    return () => {\n      var _a;\n      const {\n        globalRotate,\n        fullscreen,\n        zIndex\n      } = props;\n      const mergedClsPrefix = mergedClsPrefixRef.value;\n      const isFullScreenGlobalRotate = globalRotate !== 0 && fullscreen;\n      const rotatedImageOffset = 'max(142vh, 142vw)';\n      const watermarkNode = h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark`, globalRotate !== 0 && `${mergedClsPrefix}-watermark--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark--fullscreen`],\n        style: {\n          transform: globalRotate ? `translateX(-50%) translateY(-50%) rotate(${globalRotate}deg)` : undefined,\n          zIndex: isFullScreenGlobalRotate ? undefined : zIndex,\n          backgroundSize: `${props.xGap + props.width}px`,\n          backgroundPosition: globalRotate === 0 ? props.cross ? `${props.width / 2}px ${props.height / 2}px, 0 0` : '' : props.cross ? `calc(${rotatedImageOffset} + ${props.width / 2}px) calc(${rotatedImageOffset} + ${props.height / 2}px), ${rotatedImageOffset} ${rotatedImageOffset}` : rotatedImageOffset,\n          backgroundImage: props.cross ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})` : `url(${base64UrlRef.value})`\n        }\n      });\n      if (props.fullscreen && !globalRotate) return watermarkNode;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark-container`, globalRotate !== 0 && `${mergedClsPrefix}-watermark-container--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark-container--fullscreen`, props.selectable && `${mergedClsPrefix}-watermark-container--selectable`],\n        style: {\n          zIndex: isFullScreenGlobalRotate ? zIndex : undefined\n        }\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots), watermarkNode);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","watchEffect","onFontsReady","useConfig","useTheme","isBrowser","warnOnce","watermarkLight","style","getRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","watermarkProps","Object","assign","props","debug","Boolean","cross","fullscreen","width","type","Number","default","height","zIndex","xGap","yGap","yOffset","xOffset","rotate","image","String","imageOpacity","imageHeight","imageWidth","content","selectable","fontSize","fontFamily","fontStyle","fontVariant","fontWeight","fontColor","fontStretch","lineHeight","globalRotate","name","setup","slots","mergedClsPrefixRef","themeRef","base64UrlRef","canvas","document","createElement","ctx","getContext","fontsReadyRef","value","ratio","canvasWidth","canvasHeight","canvasOffsetLeft","canvasOffsetTop","translate","markWidth","markHeight","strokeStyle","strokeRect","Math","PI","img","Image","crossOrigin","referrerPolicy","src","onload","globalAlpha","drawImage","toDataURL","font","self","fillStyle","fillText","_a","mergedClsPrefix","isFullScreenGlobalRotate","rotatedImageOffset","watermarkNode","class","transform","undefined","backgroundSize","backgroundPosition","backgroundImage","call"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/watermark/src/Watermark.js"],"sourcesContent":["import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { isBrowser, warnOnce } from '../../_utils';\nimport { watermarkLight } from '../styles';\nimport style from './styles/index.cssr';\nfunction getRatio(context) {\n    if (!context) {\n        return 1;\n    }\n    const backingStore = context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n}\nexport const watermarkProps = Object.assign(Object.assign({}, useTheme.props), { debug: Boolean, cross: Boolean, fullscreen: Boolean, width: {\n        type: Number,\n        default: 32\n    }, height: {\n        type: Number,\n        default: 32\n    }, zIndex: {\n        type: Number,\n        default: 10\n    }, xGap: {\n        type: Number,\n        default: 0\n    }, yGap: {\n        type: Number,\n        default: 0\n    }, yOffset: {\n        type: Number,\n        default: 0\n    }, xOffset: {\n        type: Number,\n        default: 0\n    }, rotate: {\n        type: Number,\n        default: 0\n    }, image: String, imageOpacity: { type: Number, default: 1 }, imageHeight: Number, imageWidth: Number, content: String, selectable: {\n        type: Boolean,\n        default: true\n    }, fontSize: {\n        type: Number,\n        default: 14\n    }, fontFamily: String, fontStyle: {\n        type: String,\n        default: 'normal'\n    }, fontVariant: {\n        type: String,\n        default: ''\n    }, fontWeight: {\n        type: Number,\n        default: 400\n    }, fontColor: {\n        type: String,\n        default: 'rgba(128, 128, 128, .3)'\n    }, fontStretch: {\n        type: String,\n        default: ''\n    }, lineHeight: {\n        type: Number,\n        default: 14\n    }, globalRotate: {\n        type: Number,\n        default: 0\n    } });\nexport default defineComponent({\n    name: 'Watermark',\n    props: watermarkProps,\n    setup(props, { slots }) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props, mergedClsPrefixRef);\n        const base64UrlRef = ref('');\n        const canvas = isBrowser ? document.createElement('canvas') : null;\n        const ctx = canvas ? canvas.getContext('2d') : null;\n        const fontsReadyRef = ref(false);\n        onFontsReady(() => (fontsReadyRef.value = true));\n        watchEffect(() => {\n            if (!canvas)\n                return;\n            void fontsReadyRef.value;\n            const ratio = getRatio(ctx);\n            const { xGap, yGap, width, height, yOffset, xOffset, rotate, image, content, fontColor, fontStyle, fontVariant, fontStretch, fontWeight, fontFamily, fontSize, lineHeight, debug } = props;\n            const canvasWidth = (xGap + width) * ratio;\n            const canvasHeight = (yGap + height) * ratio;\n            const canvasOffsetLeft = xOffset * ratio;\n            const canvasOffsetTop = yOffset * ratio;\n            canvas.width = canvasWidth;\n            canvas.height = canvasHeight;\n            if (ctx) {\n                ctx.translate(0, 0);\n                const markWidth = width * ratio;\n                const markHeight = height * ratio;\n                if (debug) {\n                    ctx.strokeStyle = 'grey';\n                    ctx.strokeRect(0, 0, markWidth, markHeight);\n                }\n                ctx.rotate(rotate * (Math.PI / 180));\n                if (image) {\n                    const img = new Image();\n                    img.crossOrigin = 'anonymous';\n                    img.referrerPolicy = 'no-referrer';\n                    img.src = image;\n                    img.onload = () => {\n                        ctx.globalAlpha = props.imageOpacity;\n                        const { imageWidth, imageHeight } = props;\n                        ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth ||\n                            (imageHeight\n                                ? (img.width * imageHeight) / img.height\n                                : img.width)) * ratio, (props.imageHeight ||\n                            (imageWidth\n                                ? (img.height * imageWidth) / img.width\n                                : img.height)) * ratio);\n                        base64UrlRef.value = canvas.toDataURL();\n                    };\n                }\n                else if (content) {\n                    if (debug) {\n                        ctx.strokeStyle = 'green';\n                        ctx.strokeRect(0, 0, markWidth, markHeight);\n                    }\n                    ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n                    ctx.fillStyle = fontColor;\n                    ctx.fillText(content, canvasOffsetLeft, canvasOffsetTop + lineHeight * ratio);\n                    base64UrlRef.value = canvas.toDataURL();\n                }\n            }\n            else {\n                warnOnce('watermark', 'Canvas is not supported in the browser.');\n            }\n        });\n        return () => {\n            var _a;\n            const { globalRotate, fullscreen, zIndex } = props;\n            const mergedClsPrefix = mergedClsPrefixRef.value;\n            const isFullScreenGlobalRotate = globalRotate !== 0 && fullscreen;\n            const rotatedImageOffset = 'max(142vh, 142vw)';\n            const watermarkNode = (h(\"div\", { class: [\n                    `${mergedClsPrefix}-watermark`,\n                    globalRotate !== 0 && `${mergedClsPrefix}-watermark--global-rotate`,\n                    fullscreen && `${mergedClsPrefix}-watermark--fullscreen`\n                ], style: {\n                    transform: globalRotate\n                        ? `translateX(-50%) translateY(-50%) rotate(${globalRotate}deg)`\n                        : undefined,\n                    zIndex: isFullScreenGlobalRotate ? undefined : zIndex,\n                    backgroundSize: `${props.xGap + props.width}px`,\n                    backgroundPosition: globalRotate === 0\n                        ? props.cross\n                            ? `${props.width / 2}px ${props.height / 2}px, 0 0`\n                            : ''\n                        : props.cross\n                            ? `calc(${rotatedImageOffset} + ${props.width / 2}px) calc(${rotatedImageOffset} + ${props.height / 2}px), ${rotatedImageOffset} ${rotatedImageOffset}`\n                            : rotatedImageOffset,\n                    backgroundImage: props.cross\n                        ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})`\n                        : `url(${base64UrlRef.value})`\n                } }));\n            if (props.fullscreen && !globalRotate)\n                return watermarkNode;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefix}-watermark-container`,\n                    globalRotate !== 0 &&\n                        `${mergedClsPrefix}-watermark-container--global-rotate`,\n                    fullscreen && `${mergedClsPrefix}-watermark-container--fullscreen`,\n                    props.selectable &&\n                        `${mergedClsPrefix}-watermark-container--selectable`\n                ], style: {\n                    zIndex: isFullScreenGlobalRotate ? zIndex : undefined\n                } }, (_a = slots.default) === null || _a === void 0 ? void 0 :\n                _a.call(slots),\n                watermarkNode));\n        };\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,GAAG,EAAEC,WAAW,QAAQ,KAAK;AAC1D,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACnD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,SAASC,cAAc,QAAQ,WAAW;AAC1C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,CAACC,OAAO,EAAE;EACvB,IAAI,CAACA,OAAO,EAAE;IACV,OAAO,CAAC;EACZ;EACA,MAAMC,YAAY,GAAGD,OAAO,CAACE,sBAAsB,IAC/CF,OAAO,CAACG,4BAA4B,IACpCH,OAAO,CAACI,yBAAyB,IACjCJ,OAAO,CAACK,wBAAwB,IAChCL,OAAO,CAACM,uBAAuB,IAC/BN,OAAO,CAACE,sBAAsB,IAC9B,CAAC;EACL,OAAO,CAACK,MAAM,CAACC,gBAAgB,IAAI,CAAC,IAAIP,YAAY;AACxD;AACA,OAAO,MAAMQ,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjB,QAAQ,CAACkB,KAAK,CAAC,EAAE;EAAEC,KAAK,EAAEC,OAAO;EAAEC,KAAK,EAAED,OAAO;EAAEE,UAAU,EAAEF,OAAO;EAAEG,KAAK,EAAE;IACrIC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEC,MAAM,EAAE;IACPH,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEE,MAAM,EAAE;IACPJ,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEG,IAAI,EAAE;IACLL,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEI,IAAI,EAAE;IACLN,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEK,OAAO,EAAE;IACRP,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEM,OAAO,EAAE;IACRR,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEO,MAAM,EAAE;IACPT,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEQ,KAAK,EAAEC,MAAM;EAAEC,YAAY,EAAE;IAAEZ,IAAI,EAAEC,MAAM;IAAEC,OAAO,EAAE;EAAE,CAAC;EAAEW,WAAW,EAAEZ,MAAM;EAAEa,UAAU,EAAEb,MAAM;EAAEc,OAAO,EAAEJ,MAAM;EAAEK,UAAU,EAAE;IAChIhB,IAAI,EAAEJ,OAAO;IACbM,OAAO,EAAE;EACb,CAAC;EAAEe,QAAQ,EAAE;IACTjB,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEgB,UAAU,EAAEP,MAAM;EAAEQ,SAAS,EAAE;IAC9BnB,IAAI,EAAEW,MAAM;IACZT,OAAO,EAAE;EACb,CAAC;EAAEkB,WAAW,EAAE;IACZpB,IAAI,EAAEW,MAAM;IACZT,OAAO,EAAE;EACb,CAAC;EAAEmB,UAAU,EAAE;IACXrB,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEoB,SAAS,EAAE;IACVtB,IAAI,EAAEW,MAAM;IACZT,OAAO,EAAE;EACb,CAAC;EAAEqB,WAAW,EAAE;IACZvB,IAAI,EAAEW,MAAM;IACZT,OAAO,EAAE;EACb,CAAC;EAAEsB,UAAU,EAAE;IACXxB,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EAAEuB,YAAY,EAAE;IACbzB,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb;AAAE,CAAC,CAAC;AACR,eAAe/B,eAAe,CAAC;EAC3BuD,IAAI,EAAE,WAAW;EACjBhC,KAAK,EAAEH,cAAc;EACrBoC,KAAK,CAACjC,KAAK,EAAE;IAAEkC;EAAM,CAAC,EAAE;IACpB,MAAM;MAAEC;IAAmB,CAAC,GAAGtD,SAAS,CAACmB,KAAK,CAAC;IAC/C,MAAMoC,QAAQ,GAAGtD,QAAQ,CAAC,WAAW,EAAE,YAAY,EAAEI,KAAK,EAAED,cAAc,EAAEe,KAAK,EAAEmC,kBAAkB,CAAC;IACtG,MAAME,YAAY,GAAG3D,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAM4D,MAAM,GAAGvD,SAAS,GAAGwD,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI;IAClE,MAAMC,GAAG,GAAGH,MAAM,GAAGA,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI;IACnD,MAAMC,aAAa,GAAGjE,GAAG,CAAC,KAAK,CAAC;IAChCE,YAAY,CAAC,MAAO+D,aAAa,CAACC,KAAK,GAAG,IAAK,CAAC;IAChDjE,WAAW,CAAC,MAAM;MACd,IAAI,CAAC2D,MAAM,EACP;MACJ,KAAKK,aAAa,CAACC,KAAK;MACxB,MAAMC,KAAK,GAAG1D,QAAQ,CAACsD,GAAG,CAAC;MAC3B,MAAM;QAAE9B,IAAI;QAAEC,IAAI;QAAEP,KAAK;QAAEI,MAAM;QAAEI,OAAO;QAAEC,OAAO;QAAEC,MAAM;QAAEC,KAAK;QAAEK,OAAO;QAAEO,SAAS;QAAEH,SAAS;QAAEC,WAAW;QAAEG,WAAW;QAAEF,UAAU;QAAEH,UAAU;QAAED,QAAQ;QAAEO,UAAU;QAAE7B;MAAM,CAAC,GAAGD,KAAK;MAC1L,MAAM8C,WAAW,GAAG,CAACnC,IAAI,GAAGN,KAAK,IAAIwC,KAAK;MAC1C,MAAME,YAAY,GAAG,CAACnC,IAAI,GAAGH,MAAM,IAAIoC,KAAK;MAC5C,MAAMG,gBAAgB,GAAGlC,OAAO,GAAG+B,KAAK;MACxC,MAAMI,eAAe,GAAGpC,OAAO,GAAGgC,KAAK;MACvCP,MAAM,CAACjC,KAAK,GAAGyC,WAAW;MAC1BR,MAAM,CAAC7B,MAAM,GAAGsC,YAAY;MAC5B,IAAIN,GAAG,EAAE;QACLA,GAAG,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,MAAMC,SAAS,GAAG9C,KAAK,GAAGwC,KAAK;QAC/B,MAAMO,UAAU,GAAG3C,MAAM,GAAGoC,KAAK;QACjC,IAAI5C,KAAK,EAAE;UACPwC,GAAG,CAACY,WAAW,GAAG,MAAM;UACxBZ,GAAG,CAACa,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEH,SAAS,EAAEC,UAAU,CAAC;QAC/C;QACAX,GAAG,CAAC1B,MAAM,CAACA,MAAM,IAAIwC,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,CAAC;QACpC,IAAIxC,KAAK,EAAE;UACP,MAAMyC,GAAG,GAAG,IAAIC,KAAK,EAAE;UACvBD,GAAG,CAACE,WAAW,GAAG,WAAW;UAC7BF,GAAG,CAACG,cAAc,GAAG,aAAa;UAClCH,GAAG,CAACI,GAAG,GAAG7C,KAAK;UACfyC,GAAG,CAACK,MAAM,GAAG,MAAM;YACfrB,GAAG,CAACsB,WAAW,GAAG/D,KAAK,CAACkB,YAAY;YACpC,MAAM;cAAEE,UAAU;cAAED;YAAY,CAAC,GAAGnB,KAAK;YACzCyC,GAAG,CAACuB,SAAS,CAACP,GAAG,EAAET,gBAAgB,EAAEC,eAAe,EAAE,CAACjD,KAAK,CAACoB,UAAU,KAClED,WAAW,GACLsC,GAAG,CAACpD,KAAK,GAAGc,WAAW,GAAIsC,GAAG,CAAChD,MAAM,GACtCgD,GAAG,CAACpD,KAAK,CAAC,IAAIwC,KAAK,EAAE,CAAC7C,KAAK,CAACmB,WAAW,KAC5CC,UAAU,GACJqC,GAAG,CAAChD,MAAM,GAAGW,UAAU,GAAIqC,GAAG,CAACpD,KAAK,GACrCoD,GAAG,CAAChD,MAAM,CAAC,IAAIoC,KAAK,CAAC;YAC/BR,YAAY,CAACO,KAAK,GAAGN,MAAM,CAAC2B,SAAS,EAAE;UAC3C,CAAC;QACL,CAAC,MACI,IAAI5C,OAAO,EAAE;UACd,IAAIpB,KAAK,EAAE;YACPwC,GAAG,CAACY,WAAW,GAAG,OAAO;YACzBZ,GAAG,CAACa,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEH,SAAS,EAAEC,UAAU,CAAC;UAC/C;UACAX,GAAG,CAACyB,IAAI,GAAI,GAAEzC,SAAU,IAAGC,WAAY,IAAGC,UAAW,IAAGE,WAAY,IAAGN,QAAQ,GAAGsB,KAAM,MAAKf,UAAU,GAAGe,KAAM,MAAKrB,UAAU,IAAIY,QAAQ,CAACQ,KAAK,CAACuB,IAAI,CAAC3C,UAAW,EAAC;UACnKiB,GAAG,CAAC2B,SAAS,GAAGxC,SAAS;UACzBa,GAAG,CAAC4B,QAAQ,CAAChD,OAAO,EAAE2B,gBAAgB,EAAEC,eAAe,GAAGnB,UAAU,GAAGe,KAAK,CAAC;UAC7ER,YAAY,CAACO,KAAK,GAAGN,MAAM,CAAC2B,SAAS,EAAE;QAC3C;MACJ,CAAC,MACI;QACDjF,QAAQ,CAAC,WAAW,EAAE,yCAAyC,CAAC;MACpE;IACJ,CAAC,CAAC;IACF,OAAO,MAAM;MACT,IAAIsF,EAAE;MACN,MAAM;QAAEvC,YAAY;QAAE3B,UAAU;QAAEM;MAAO,CAAC,GAAGV,KAAK;MAClD,MAAMuE,eAAe,GAAGpC,kBAAkB,CAACS,KAAK;MAChD,MAAM4B,wBAAwB,GAAGzC,YAAY,KAAK,CAAC,IAAI3B,UAAU;MACjE,MAAMqE,kBAAkB,GAAG,mBAAmB;MAC9C,MAAMC,aAAa,GAAIlG,CAAC,CAAC,KAAK,EAAE;QAAEmG,KAAK,EAAE,CAChC,GAAEJ,eAAgB,YAAW,EAC9BxC,YAAY,KAAK,CAAC,IAAK,GAAEwC,eAAgB,2BAA0B,EACnEnE,UAAU,IAAK,GAAEmE,eAAgB,wBAAuB,CAC3D;QAAErF,KAAK,EAAE;UACN0F,SAAS,EAAE7C,YAAY,GAChB,4CAA2CA,YAAa,MAAK,GAC9D8C,SAAS;UACfnE,MAAM,EAAE8D,wBAAwB,GAAGK,SAAS,GAAGnE,MAAM;UACrDoE,cAAc,EAAG,GAAE9E,KAAK,CAACW,IAAI,GAAGX,KAAK,CAACK,KAAM,IAAG;UAC/C0E,kBAAkB,EAAEhD,YAAY,KAAK,CAAC,GAChC/B,KAAK,CAACG,KAAK,GACN,GAAEH,KAAK,CAACK,KAAK,GAAG,CAAE,MAAKL,KAAK,CAACS,MAAM,GAAG,CAAE,SAAQ,GACjD,EAAE,GACNT,KAAK,CAACG,KAAK,GACN,QAAOsE,kBAAmB,MAAKzE,KAAK,CAACK,KAAK,GAAG,CAAE,YAAWoE,kBAAmB,MAAKzE,KAAK,CAACS,MAAM,GAAG,CAAE,QAAOgE,kBAAmB,IAAGA,kBAAmB,EAAC,GACrJA,kBAAkB;UAC5BO,eAAe,EAAEhF,KAAK,CAACG,KAAK,GACrB,OAAMkC,YAAY,CAACO,KAAM,UAASP,YAAY,CAACO,KAAM,GAAE,GACvD,OAAMP,YAAY,CAACO,KAAM;QACpC;MAAE,CAAC,CAAE;MACT,IAAI5C,KAAK,CAACI,UAAU,IAAI,CAAC2B,YAAY,EACjC,OAAO2C,aAAa;MACxB,OAAQlG,CAAC,CAAC,KAAK,EAAE;QAAEmG,KAAK,EAAE,CACjB,GAAEJ,eAAgB,sBAAqB,EACxCxC,YAAY,KAAK,CAAC,IACb,GAAEwC,eAAgB,qCAAoC,EAC3DnE,UAAU,IAAK,GAAEmE,eAAgB,kCAAiC,EAClEvE,KAAK,CAACsB,UAAU,IACX,GAAEiD,eAAgB,kCAAiC,CAC3D;QAAErF,KAAK,EAAE;UACNwB,MAAM,EAAE8D,wBAAwB,GAAG9D,MAAM,GAAGmE;QAChD;MAAE,CAAC,EAAE,CAACP,EAAE,GAAGpC,KAAK,CAAC1B,OAAO,MAAM,IAAI,IAAI8D,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAC5DA,EAAE,CAACW,IAAI,CAAC/C,KAAK,CAAC,EACdwC,aAAa,CAAC;IACtB,CAAC;EACL;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}