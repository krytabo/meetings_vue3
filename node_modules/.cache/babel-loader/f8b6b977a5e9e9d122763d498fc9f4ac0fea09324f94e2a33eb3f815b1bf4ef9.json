{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function getIsGroup(option) {\n  return option.type === 'group';\n}\nexport function getIgnored(option) {\n  return option.type === 'ignored';\n}\nexport function patternMatched(pattern, value) {\n  try {\n    return !!(1 + value.toString().toLowerCase().indexOf(pattern.trim().toLowerCase()));\n  } catch (err) {\n    return false;\n  }\n}\nexport function createTmOptions(valueField, childrenField) {\n  const options = {\n    getIsGroup,\n    getIgnored,\n    getKey(option) {\n      if (getIsGroup(option)) {\n        return option.name || option.key || 'key-required';\n      }\n      // Required for non-custom label & value field\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return option[valueField];\n    },\n    getChildren(option) {\n      return option[childrenField];\n    }\n  };\n  return options;\n}\nexport function filterOptions(originalOpts, filter, pattern, childrenField) {\n  if (!filter) return originalOpts;\n  function traverse(options) {\n    if (!Array.isArray(options)) return [];\n    const filteredOptions = [];\n    for (const option of options) {\n      if (getIsGroup(option)) {\n        const children = traverse(option[childrenField]);\n        if (children.length) {\n          filteredOptions.push(Object.assign({}, option, {\n            [childrenField]: children\n          }));\n        }\n      } else if (getIgnored(option)) {\n        continue;\n      } else if (filter(pattern, option)) {\n        filteredOptions.push(option);\n      }\n    }\n    return filteredOptions;\n  }\n  return traverse(originalOpts);\n}\nexport function createValOptMap(options, valueField, childrenField) {\n  const valOptMap = new Map();\n  options.forEach(option => {\n    if (getIsGroup(option)) {\n      ;\n      option[childrenField].forEach(selectGroupOption => {\n        valOptMap.set(selectGroupOption[valueField], selectGroupOption);\n      });\n    } else {\n      valOptMap.set(option[valueField], option);\n    }\n  });\n  return valOptMap;\n}","map":{"version":3,"names":["getIsGroup","option","type","getIgnored","patternMatched","pattern","value","toString","toLowerCase","indexOf","trim","err","createTmOptions","valueField","childrenField","options","getKey","name","key","getChildren","filterOptions","originalOpts","filter","traverse","Array","isArray","filteredOptions","children","length","push","Object","assign","createValOptMap","valOptMap","Map","forEach","selectGroupOption","set"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/select/src/utils.js"],"sourcesContent":["export function getIsGroup(option) {\n    return option.type === 'group';\n}\nexport function getIgnored(option) {\n    return option.type === 'ignored';\n}\nexport function patternMatched(pattern, value) {\n    try {\n        return !!(1 + value.toString().toLowerCase().indexOf(pattern.trim().toLowerCase()));\n    }\n    catch (err) {\n        return false;\n    }\n}\nexport function createTmOptions(valueField, childrenField) {\n    const options = {\n        getIsGroup,\n        getIgnored,\n        getKey(option) {\n            if (getIsGroup(option)) {\n                return (option.name ||\n                    option.key ||\n                    'key-required');\n            }\n            // Required for non-custom label & value field\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return option[valueField];\n        },\n        getChildren(option) {\n            return option[childrenField];\n        }\n    };\n    return options;\n}\nexport function filterOptions(originalOpts, filter, pattern, childrenField) {\n    if (!filter)\n        return originalOpts;\n    function traverse(options) {\n        if (!Array.isArray(options))\n            return [];\n        const filteredOptions = [];\n        for (const option of options) {\n            if (getIsGroup(option)) {\n                const children = traverse(option[childrenField]);\n                if (children.length) {\n                    filteredOptions.push(Object.assign({}, option, {\n                        [childrenField]: children\n                    }));\n                }\n            }\n            else if (getIgnored(option)) {\n                continue;\n            }\n            else if (filter(pattern, option)) {\n                filteredOptions.push(option);\n            }\n        }\n        return filteredOptions;\n    }\n    return traverse(originalOpts);\n}\nexport function createValOptMap(options, valueField, childrenField) {\n    const valOptMap = new Map();\n    options.forEach((option) => {\n        if (getIsGroup(option)) {\n            ;\n            option[childrenField].forEach((selectGroupOption) => {\n                valOptMap.set(selectGroupOption[valueField], selectGroupOption);\n            });\n        }\n        else {\n            valOptMap.set(option[valueField], option);\n        }\n    });\n    return valOptMap;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}