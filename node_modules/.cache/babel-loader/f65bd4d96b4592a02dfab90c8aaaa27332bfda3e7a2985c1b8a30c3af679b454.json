{"ast":null,"code":"import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n  if (!rtlStateRef) return undefined;\n  const ssrAdapter = useSsrAdapter();\n  const componentRtlStateRef = computed(() => {\n    const {\n      value: rtlState\n    } = rtlStateRef;\n    if (!rtlState) {\n      return undefined;\n    }\n    const componentRtlState = rtlState[mountId];\n    if (!componentRtlState) {\n      return undefined;\n    }\n    return componentRtlState;\n  });\n  const mountStyle = () => {\n    watchEffect(() => {\n      const {\n        value: clsPrefix\n      } = clsPrefixRef;\n      const id = `${clsPrefix}${mountId}Rtl`;\n      // if it already exists, we only need to watch clsPrefix, although in most\n      // of time it's unnecessary... However we can at least listen less\n      // handlers, which is great.\n      if (exists(id, ssrAdapter)) return;\n      const {\n        value: componentRtlState\n      } = componentRtlStateRef;\n      if (!componentRtlState) return;\n      componentRtlState.style.mount({\n        id,\n        head: true,\n        anchorMetaName: cssrAnchorMetaName,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        ssr: ssrAdapter\n      });\n    });\n  };\n  if (ssrAdapter) {\n    mountStyle();\n  } else {\n    onBeforeMount(mountStyle);\n  }\n  return componentRtlStateRef;\n}","map":{"version":3,"names":["onBeforeMount","watchEffect","computed","exists","useSsrAdapter","cssrAnchorMetaName","useRtl","mountId","rtlStateRef","clsPrefixRef","undefined","ssrAdapter","componentRtlStateRef","value","rtlState","componentRtlState","mountStyle","clsPrefix","id","style","mount","head","anchorMetaName","props","bPrefix","ssr"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/_mixins/use-rtl.js"],"sourcesContent":["import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n    if (!rtlStateRef)\n        return undefined;\n    const ssrAdapter = useSsrAdapter();\n    const componentRtlStateRef = computed(() => {\n        const { value: rtlState } = rtlStateRef;\n        if (!rtlState) {\n            return undefined;\n        }\n        const componentRtlState = rtlState[mountId];\n        if (!componentRtlState) {\n            return undefined;\n        }\n        return componentRtlState;\n    });\n    const mountStyle = () => {\n        watchEffect(() => {\n            const { value: clsPrefix } = clsPrefixRef;\n            const id = `${clsPrefix}${mountId}Rtl`;\n            // if it already exists, we only need to watch clsPrefix, although in most\n            // of time it's unnecessary... However we can at least listen less\n            // handlers, which is great.\n            if (exists(id, ssrAdapter))\n                return;\n            const { value: componentRtlState } = componentRtlStateRef;\n            if (!componentRtlState)\n                return;\n            componentRtlState.style.mount({\n                id,\n                head: true,\n                anchorMetaName: cssrAnchorMetaName,\n                props: {\n                    bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n                },\n                ssr: ssrAdapter\n            });\n        });\n    };\n    if (ssrAdapter) {\n        mountStyle();\n    }\n    else {\n        onBeforeMount(mountStyle);\n    }\n    return componentRtlStateRef;\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAK;AAC1D,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,OAAO,SAASC,MAAM,CAACC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAE;EACvD,IAAI,CAACD,WAAW,EACZ,OAAOE,SAAS;EACpB,MAAMC,UAAU,GAAGP,aAAa,EAAE;EAClC,MAAMQ,oBAAoB,GAAGV,QAAQ,CAAC,MAAM;IACxC,MAAM;MAAEW,KAAK,EAAEC;IAAS,CAAC,GAAGN,WAAW;IACvC,IAAI,CAACM,QAAQ,EAAE;MACX,OAAOJ,SAAS;IACpB;IACA,MAAMK,iBAAiB,GAAGD,QAAQ,CAACP,OAAO,CAAC;IAC3C,IAAI,CAACQ,iBAAiB,EAAE;MACpB,OAAOL,SAAS;IACpB;IACA,OAAOK,iBAAiB;EAC5B,CAAC,CAAC;EACF,MAAMC,UAAU,GAAG,MAAM;IACrBf,WAAW,CAAC,MAAM;MACd,MAAM;QAAEY,KAAK,EAAEI;MAAU,CAAC,GAAGR,YAAY;MACzC,MAAMS,EAAE,GAAI,GAAED,SAAU,GAAEV,OAAQ,KAAI;MACtC;MACA;MACA;MACA,IAAIJ,MAAM,CAACe,EAAE,EAAEP,UAAU,CAAC,EACtB;MACJ,MAAM;QAAEE,KAAK,EAAEE;MAAkB,CAAC,GAAGH,oBAAoB;MACzD,IAAI,CAACG,iBAAiB,EAClB;MACJA,iBAAiB,CAACI,KAAK,CAACC,KAAK,CAAC;QAC1BF,EAAE;QACFG,IAAI,EAAE,IAAI;QACVC,cAAc,EAAEjB,kBAAkB;QAClCkB,KAAK,EAAE;UACHC,OAAO,EAAEP,SAAS,GAAI,IAAGA,SAAU,GAAE,GAAGP;QAC5C,CAAC;QACDe,GAAG,EAAEd;MACT,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,IAAIA,UAAU,EAAE;IACZK,UAAU,EAAE;EAChB,CAAC,MACI;IACDhB,aAAa,CAACgB,UAAU,CAAC;EAC7B;EACA,OAAOJ,oBAAoB;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}