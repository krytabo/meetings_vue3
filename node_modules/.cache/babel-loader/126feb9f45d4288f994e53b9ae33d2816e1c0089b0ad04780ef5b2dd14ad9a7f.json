{"ast":null,"code":"import { h, defineComponent, computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { camelCase } from 'lodash-es';\nimport { useConfig } from '../../_mixins';\nimport { useCarouselContext } from './CarouselContext';\nconst CarouselItemName = 'CarouselItem';\nexport const isCarouselItem = child => {\n  var _a;\n  return ((_a = child.type) === null || _a === void 0 ? void 0 : _a.name) === CarouselItemName;\n};\nexport default defineComponent({\n  name: CarouselItemName,\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const NCarousel = useCarouselContext(camelCase(CarouselItemName), `n-${camelCase(CarouselItemName)}`);\n    const selfElRef = ref();\n    const indexRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return selfEl ? NCarousel.getSlideIndex(selfEl) : -1;\n    });\n    const isPrevRef = computed(() => NCarousel.isPrev(indexRef.value));\n    const isNextRef = computed(() => NCarousel.isNext(indexRef.value));\n    const isActiveRef = computed(() => NCarousel.isActive(indexRef.value));\n    const styleRef = computed(() => NCarousel.getSlideStyle(indexRef.value));\n    onMounted(() => NCarousel.addSlide(selfElRef.value));\n    onBeforeUnmount(() => {\n      NCarousel.removeSlide(selfElRef.value);\n    });\n    function handleClick(event) {\n      const {\n        value: index\n      } = indexRef;\n      if (index !== undefined) {\n        NCarousel === null || NCarousel === void 0 ? void 0 : NCarousel.onCarouselItemClick(index, event);\n      }\n    }\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      selfElRef,\n      isPrev: isPrevRef,\n      isNext: isNextRef,\n      isActive: isActiveRef,\n      index: indexRef,\n      style: styleRef,\n      handleClick\n    };\n  },\n  render() {\n    var _a;\n    const {\n      $slots: slots,\n      mergedClsPrefix,\n      isPrev,\n      isNext,\n      isActive,\n      index,\n      style\n    } = this;\n    const className = [`${mergedClsPrefix}-carousel__slide`, {\n      [`${mergedClsPrefix}-carousel__slide--current`]: isActive,\n      [`${mergedClsPrefix}-carousel__slide--prev`]: isPrev,\n      [`${mergedClsPrefix}-carousel__slide--next`]: isNext\n    }];\n    return h(\"div\", {\n      ref: \"selfElRef\",\n      class: className,\n      role: \"option\",\n      tabindex: \"-1\",\n      \"data-index\": index,\n      \"aria-hidden\": !isActive,\n      style: style,\n      // We use ts-ignore for vue-tsc, since it seems to patch native event\n      // for vue components\n      // eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error\n      // @ts-ignore\n      onClickCapture: this.handleClick\n    }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n      isPrev,\n      isNext,\n      isActive,\n      index\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","computed","ref","onMounted","onBeforeUnmount","camelCase","useConfig","useCarouselContext","CarouselItemName","isCarouselItem","child","_a","type","name","setup","props","mergedClsPrefixRef","NCarousel","selfElRef","indexRef","value","selfEl","getSlideIndex","isPrevRef","isPrev","isNextRef","isNext","isActiveRef","isActive","styleRef","getSlideStyle","addSlide","removeSlide","handleClick","event","index","undefined","onCarouselItemClick","mergedClsPrefix","style","render","$slots","slots","className","class","role","tabindex","onClickCapture","default","call"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/carousel/src/CarouselItem.js"],"sourcesContent":["import { h, defineComponent, computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { camelCase } from 'lodash-es';\nimport { useConfig } from '../../_mixins';\nimport { useCarouselContext } from './CarouselContext';\nconst CarouselItemName = 'CarouselItem';\nexport const isCarouselItem = (child) => { var _a; return ((_a = child.type) === null || _a === void 0 ? void 0 : _a.name) === CarouselItemName; };\nexport default defineComponent({\n    name: CarouselItemName,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const NCarousel = useCarouselContext(camelCase(CarouselItemName), `n-${camelCase(CarouselItemName)}`);\n        const selfElRef = ref();\n        const indexRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return selfEl ? NCarousel.getSlideIndex(selfEl) : -1;\n        });\n        const isPrevRef = computed(() => NCarousel.isPrev(indexRef.value));\n        const isNextRef = computed(() => NCarousel.isNext(indexRef.value));\n        const isActiveRef = computed(() => NCarousel.isActive(indexRef.value));\n        const styleRef = computed(() => NCarousel.getSlideStyle(indexRef.value));\n        onMounted(() => NCarousel.addSlide(selfElRef.value));\n        onBeforeUnmount(() => {\n            NCarousel.removeSlide(selfElRef.value);\n        });\n        function handleClick(event) {\n            const { value: index } = indexRef;\n            if (index !== undefined) {\n                NCarousel === null || NCarousel === void 0 ? void 0 : NCarousel.onCarouselItemClick(index, event);\n            }\n        }\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            selfElRef,\n            isPrev: isPrevRef,\n            isNext: isNextRef,\n            isActive: isActiveRef,\n            index: indexRef,\n            style: styleRef,\n            handleClick\n        };\n    },\n    render() {\n        var _a;\n        const { $slots: slots, mergedClsPrefix, isPrev, isNext, isActive, index, style } = this;\n        const className = [\n            `${mergedClsPrefix}-carousel__slide`,\n            {\n                [`${mergedClsPrefix}-carousel__slide--current`]: isActive,\n                [`${mergedClsPrefix}-carousel__slide--prev`]: isPrev,\n                [`${mergedClsPrefix}-carousel__slide--next`]: isNext\n            }\n        ];\n        return (h(\"div\", { ref: \"selfElRef\", class: className, role: \"option\", tabindex: \"-1\", \"data-index\": index, \"aria-hidden\": !isActive, style: style, \n            // We use ts-ignore for vue-tsc, since it seems to patch native event\n            // for vue components\n            // eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error\n            // @ts-ignore\n            onClickCapture: this.handleClick }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n            isPrev,\n            isNext,\n            isActive,\n            index\n        })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}