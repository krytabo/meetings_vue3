{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { resolveSlot, throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport { getFilesFromEntries } from './utils';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n  name: 'UploadTrigger',\n  props: {\n    abstract: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n    if (!NUpload) {\n      throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedDisabledRef,\n      maxReachedRef,\n      listTypeRef,\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDirectoryDndRef,\n      triggerStyleRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value || maxReachedRef.value) return;\n      openOpenFileDialog();\n    }\n    function handleTriggerDragOver(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragEnter(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragLeave(e) {\n      e.preventDefault();\n      dragOverRef.value = false;\n    }\n    function handleTriggerDrop(e) {\n      var _a;\n      e.preventDefault();\n      if (!draggerInsideRef.value || mergedDisabledRef.value || maxReachedRef.value) {\n        dragOverRef.value = false;\n        return;\n      }\n      const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n      if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n        void getFilesFromEntries(Array.from(dataTransferItems).map(item => item.webkitGetAsEntry()), mergedDirectoryDndRef.value).then(files => {\n          handleFileAddition(files);\n        }).finally(() => {\n          dragOverRef.value = false;\n        });\n      } else {\n        dragOverRef.value = false;\n      }\n    }\n    return () => {\n      var _a;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return props.abstract ? (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        handleClick: handleTriggerClick,\n        handleDrop: handleTriggerDrop,\n        handleDragOver: handleTriggerDragOver,\n        handleDragEnter: handleTriggerDragEnter,\n        handleDragLeave: handleTriggerDragLeave\n      }) : h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-trigger`, (mergedDisabledRef.value || maxReachedRef.value) && `${mergedClsPrefix}-upload-trigger--disabled`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-trigger--image-card`],\n        style: triggerStyleRef.value,\n        onClick: handleTriggerClick,\n        onDrop: handleTriggerDrop,\n        onDragover: handleTriggerDragOver,\n        onDragenter: handleTriggerDragEnter,\n        onDragleave: handleTriggerDragLeave\n      }, isImageCardTypeRef.value ? h(NUploadDragger, null, {\n        default: () => resolveSlot(slots.default, () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      }) : slots);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","computed","AddIcon","NBaseIcon","resolveSlot","throwError","uploadInjectionKey","getFilesFromEntries","NUploadDragger","name","props","abstract","Boolean","setup","slots","NUpload","mergedClsPrefixRef","mergedDisabledRef","maxReachedRef","listTypeRef","dragOverRef","openOpenFileDialog","draggerInsideRef","handleFileAddition","mergedDirectoryDndRef","triggerStyleRef","isImageCardTypeRef","value","handleTriggerClick","handleTriggerDragOver","e","preventDefault","handleTriggerDragEnter","handleTriggerDragLeave","handleTriggerDrop","_a","dataTransferItems","dataTransfer","items","length","Array","from","map","item","webkitGetAsEntry","then","files","finally","mergedClsPrefix","default","call","handleClick","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","class","style","onClick","onDrop","onDragover","onDragenter","onDragleave","clsPrefix"],"sources":["/Users/elmo/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/upload/src/UploadTrigger.js"],"sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { resolveSlot, throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport { getFilesFromEntries } from './utils';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n    name: 'UploadTrigger',\n    props: {\n        abstract: Boolean\n    },\n    setup(props, { slots }) {\n        const NUpload = inject(uploadInjectionKey, null);\n        if (!NUpload) {\n            throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n        }\n        const { mergedClsPrefixRef, mergedDisabledRef, maxReachedRef, listTypeRef, dragOverRef, openOpenFileDialog, draggerInsideRef, handleFileAddition, mergedDirectoryDndRef, triggerStyleRef } = NUpload;\n        const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value || maxReachedRef.value)\n                return;\n            openOpenFileDialog();\n        }\n        function handleTriggerDragOver(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragEnter(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragLeave(e) {\n            e.preventDefault();\n            dragOverRef.value = false;\n        }\n        function handleTriggerDrop(e) {\n            var _a;\n            e.preventDefault();\n            if (!draggerInsideRef.value ||\n                mergedDisabledRef.value ||\n                maxReachedRef.value) {\n                dragOverRef.value = false;\n                return;\n            }\n            const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n            if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n                void getFilesFromEntries(Array.from(dataTransferItems).map((item) => item.webkitGetAsEntry()), mergedDirectoryDndRef.value)\n                    .then((files) => {\n                    handleFileAddition(files);\n                })\n                    .finally(() => {\n                    dragOverRef.value = false;\n                });\n            }\n            else {\n                dragOverRef.value = false;\n            }\n        }\n        return () => {\n            var _a;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return props.abstract ? ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n                handleClick: handleTriggerClick,\n                handleDrop: handleTriggerDrop,\n                handleDragOver: handleTriggerDragOver,\n                handleDragEnter: handleTriggerDragEnter,\n                handleDragLeave: handleTriggerDragLeave\n            })) : (h(\"div\", { class: [\n                    `${mergedClsPrefix}-upload-trigger`,\n                    (mergedDisabledRef.value || maxReachedRef.value) &&\n                        `${mergedClsPrefix}-upload-trigger--disabled`,\n                    isImageCardTypeRef.value &&\n                        `${mergedClsPrefix}-upload-trigger--image-card`\n                ], style: triggerStyleRef.value, onClick: handleTriggerClick, onDrop: handleTriggerDrop, onDragover: handleTriggerDragOver, onDragenter: handleTriggerDragEnter, onDragleave: handleTriggerDragLeave }, isImageCardTypeRef.value ? (h(NUploadDragger, null, {\n                default: () => resolveSlot(slots.default, () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) })\n                ])\n            })) : (slots)));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}