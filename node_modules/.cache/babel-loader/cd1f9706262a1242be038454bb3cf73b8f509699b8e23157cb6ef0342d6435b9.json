{"ast":null,"code":"import { h, defineComponent, ref, inject, TransitionGroup, Transition, Fragment } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NEmpty } from '../../empty';\nimport { NScrollbar } from '../../_internal';\nimport { transferInjectionKey } from './interface';\nimport NTransferListItem from './TransferListItem';\nexport default defineComponent({\n  name: 'TransferList',\n  props: {\n    virtualScroll: {\n      type: Boolean,\n      required: true\n    },\n    itemSize: {\n      type: Number,\n      required: true\n    },\n    options: {\n      type: Array,\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      required: true\n    },\n    isMounted: {\n      type: Boolean,\n      required: true\n    },\n    isInputing: {\n      type: Boolean,\n      required: true\n    },\n    source: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef\n    } = inject(transferInjectionKey);\n    const scrollerInstRef = ref(null);\n    const vlInstRef = ref(null);\n    function syncVLScroller() {\n      var _a;\n      (_a = scrollerInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function scrollContainer() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        listElRef\n      } = value;\n      return listElRef;\n    }\n    function scrollContent() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        itemsElRef\n      } = value;\n      return itemsElRef;\n    }\n    return {\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      scrollerInstRef,\n      vlInstRef,\n      syncVLScroller,\n      scrollContainer,\n      scrollContent\n    };\n  },\n  render() {\n    const {\n      mergedTheme,\n      mergedClsPrefix,\n      virtualScroll,\n      syncVLScroller\n    } = this;\n    return h(Fragment, null, h(NScrollbar, {\n      ref: \"scrollerInstRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      container: virtualScroll ? this.scrollContainer : undefined,\n      content: virtualScroll ? this.scrollContent : undefined\n    }, {\n      default: () => virtualScroll ? h(VirtualList, {\n        ref: \"vlInstRef\",\n        style: {\n          height: '100%'\n        },\n        class: `${mergedClsPrefix}-legacy-transfer-list-content`,\n        items: this.options,\n        itemSize: this.itemSize,\n        showScrollbar: false,\n        onResize: syncVLScroller,\n        onScroll: syncVLScroller,\n        keyField: \"value\"\n      }, {\n        default: ({\n          item\n        }) => {\n          const {\n            source,\n            disabled\n          } = this;\n          return h(NTransferListItem, {\n            source: source,\n            key: item.value,\n            value: item.value,\n            disabled: item.disabled || disabled,\n            label: item.label\n          });\n        }\n      }) : h(\"div\", {\n        class: `${mergedClsPrefix}-legacy-transfer-list-content`\n      }, h(TransitionGroup, {\n        name: \"item\",\n        appear: this.isMounted,\n        css: !this.isInputing\n      }, {\n        default: () => {\n          const {\n            source,\n            disabled\n          } = this;\n          return this.options.map(option => h(NTransferListItem, {\n            source: source,\n            key: option.value,\n            value: option.value,\n            disabled: option.disabled || disabled,\n            label: option.label\n          }));\n        }\n      }))\n    }), h(Transition, {\n      name: \"fade-in-transition\",\n      appear: this.isMounted,\n      css: !this.isInputing\n    }, {\n      default: () => this.options.length ? null : h(NEmpty, {\n        theme: mergedTheme.peers.Empty,\n        themeOverrides: mergedTheme.peerOverrides.Empty\n      })\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","inject","TransitionGroup","Transition","Fragment","VirtualList","NEmpty","NScrollbar","transferInjectionKey","NTransferListItem","name","props","virtualScroll","type","Boolean","required","itemSize","Number","options","Array","disabled","isMounted","isInputing","source","default","setup","mergedThemeRef","mergedClsPrefixRef","scrollerInstRef","vlInstRef","syncVLScroller","_a","value","sync","scrollContainer","listElRef","scrollContent","itemsElRef","mergedTheme","mergedClsPrefix","render","theme","peers","Scrollbar","themeOverrides","peerOverrides","container","undefined","content","style","height","class","items","showScrollbar","onResize","onScroll","keyField","item","key","label","appear","css","map","option","length","Empty"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/legacy-transfer/src/TransferList.js"],"sourcesContent":["import { h, defineComponent, ref, inject, TransitionGroup, Transition, Fragment } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NEmpty } from '../../empty';\nimport { NScrollbar } from '../../_internal';\nimport { transferInjectionKey } from './interface';\nimport NTransferListItem from './TransferListItem';\nexport default defineComponent({\n    name: 'TransferList',\n    props: {\n        virtualScroll: {\n            type: Boolean,\n            required: true\n        },\n        itemSize: {\n            type: Number,\n            required: true\n        },\n        options: {\n            type: Array,\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            required: true\n        },\n        isMounted: {\n            type: Boolean,\n            required: true\n        },\n        isInputing: {\n            type: Boolean,\n            required: true\n        },\n        source: {\n            type: Boolean,\n            default: false\n        }\n    },\n    setup() {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { mergedThemeRef, mergedClsPrefixRef } = inject(transferInjectionKey);\n        const scrollerInstRef = ref(null);\n        const vlInstRef = ref(null);\n        function syncVLScroller() {\n            var _a;\n            (_a = scrollerInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n        }\n        function scrollContainer() {\n            const { value } = vlInstRef;\n            if (!value)\n                return null;\n            const { listElRef } = value;\n            return listElRef;\n        }\n        function scrollContent() {\n            const { value } = vlInstRef;\n            if (!value)\n                return null;\n            const { itemsElRef } = value;\n            return itemsElRef;\n        }\n        return {\n            mergedTheme: mergedThemeRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            scrollerInstRef,\n            vlInstRef,\n            syncVLScroller,\n            scrollContainer,\n            scrollContent\n        };\n    },\n    render() {\n        const { mergedTheme, mergedClsPrefix, virtualScroll, syncVLScroller } = this;\n        return (h(Fragment, null,\n            h(NScrollbar, { ref: \"scrollerInstRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar, container: virtualScroll ? this.scrollContainer : undefined, content: virtualScroll ? this.scrollContent : undefined }, {\n                default: () => virtualScroll ? (h(VirtualList, { ref: \"vlInstRef\", style: { height: '100%' }, class: `${mergedClsPrefix}-legacy-transfer-list-content`, items: this.options, itemSize: this.itemSize, showScrollbar: false, onResize: syncVLScroller, onScroll: syncVLScroller, keyField: \"value\" }, {\n                    default: ({ item }) => {\n                        const { source, disabled } = this;\n                        return (h(NTransferListItem, { source: source, key: item.value, value: item.value, disabled: item.disabled || disabled, label: item.label }));\n                    }\n                })) : (h(\"div\", { class: `${mergedClsPrefix}-legacy-transfer-list-content` },\n                    h(TransitionGroup, { name: \"item\", appear: this.isMounted, css: !this.isInputing }, {\n                        default: () => {\n                            const { source, disabled } = this;\n                            return this.options.map((option) => (h(NTransferListItem, { source: source, key: option.value, value: option.value, disabled: option.disabled || disabled, label: option.label })));\n                        }\n                    })))\n            }),\n            h(Transition, { name: \"fade-in-transition\", appear: this.isMounted, css: !this.isInputing }, {\n                default: () => this.options.length ? null : (h(NEmpty, { theme: mergedTheme.peers.Empty, themeOverrides: mergedTheme.peerOverrides.Empty }))\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}