{"ast":null,"code":"/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { inject, computed, onBeforeMount } from 'vue';\nimport { merge } from 'lodash-es';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport globalStyle from '../_styles/global/index.cssr';\nimport { configProviderInjectionKey } from '../config-provider/src/context';\nimport { cssrAnchorMetaName } from './common';\nexport function createTheme(theme) {\n  return theme;\n}\nfunction useTheme(resolveId, mountId, style, defaultTheme, props, clsPrefixRef) {\n  const ssrAdapter = useSsrAdapter();\n  const NConfigProvider = inject(configProviderInjectionKey, null);\n  if (style) {\n    const mountStyle = () => {\n      const clsPrefix = clsPrefixRef === null || clsPrefixRef === void 0 ? void 0 : clsPrefixRef.value;\n      style.mount({\n        id: clsPrefix === undefined ? mountId : clsPrefix + mountId,\n        head: true,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        anchorMetaName: cssrAnchorMetaName,\n        ssr: ssrAdapter\n      });\n      if (!(NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.preflightStyleDisabled)) {\n        globalStyle.mount({\n          id: 'n-global',\n          head: true,\n          anchorMetaName: cssrAnchorMetaName,\n          ssr: ssrAdapter\n        });\n      }\n    };\n    if (ssrAdapter) {\n      mountStyle();\n    } else {\n      onBeforeMount(mountStyle);\n    }\n  }\n  const mergedThemeRef = computed(() => {\n    var _a;\n    // keep props to make theme overrideable\n    const {\n      theme: {\n        common: selfCommon,\n        self,\n        peers = {}\n      } = {},\n      themeOverrides: selfOverrides = {},\n      builtinThemeOverrides: builtinOverrides = {}\n    } = props;\n    const {\n      common: selfCommonOverrides,\n      peers: peersOverrides\n    } = selfOverrides;\n    const {\n      common: globalCommon = undefined,\n      [resolveId]: {\n        common: globalSelfCommon = undefined,\n        self: globalSelf = undefined,\n        peers: globalPeers = {}\n      } = {}\n    } = (NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedThemeRef.value) || {};\n    const {\n      common: globalCommonOverrides = undefined,\n      [resolveId]: globalSelfOverrides = {}\n    } = (NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedThemeOverridesRef.value) || {};\n    const {\n      common: globalSelfCommonOverrides,\n      peers: globalPeersOverrides = {}\n    } = globalSelfOverrides;\n    const mergedCommon = merge({}, selfCommon || globalSelfCommon || globalCommon || defaultTheme.common, globalCommonOverrides, globalSelfCommonOverrides, selfCommonOverrides);\n    const mergedSelf = merge(\n    // {}, executed every time, no need for empty obj\n    (_a = self || globalSelf || defaultTheme.self) === null || _a === void 0 ? void 0 : _a(mergedCommon), builtinOverrides, globalSelfOverrides, selfOverrides);\n    return {\n      common: mergedCommon,\n      self: mergedSelf,\n      peers: merge({}, defaultTheme.peers, globalPeers, peers),\n      peerOverrides: merge({}, builtinOverrides.peers, globalPeersOverrides, peersOverrides)\n    };\n  });\n  return mergedThemeRef;\n}\nuseTheme.props = {\n  theme: Object,\n  themeOverrides: Object,\n  builtinThemeOverrides: Object\n};\n/**\n * props.theme (Theme):\n * {\n *   common: CommonThemeVars,\n *   self(): ThemeVars,\n *   peers: { Component: Theme }\n * }\n * provider.theme:\n * {\n *   common: CommonThemeVars,\n *   Button: Theme\n *   ...\n * }\n * defaultTheme:\n * {\n *   common: CommonThemeVars,\n *   self(): ThemeVars,\n *   peers: { Component: Theme }\n * }\n *\n * props.themeOverrides (ThemeOverrides):\n * {\n *   common: CommonThemeVars,\n *   peers: { Component: ThemeOverrides },\n *   ...ThemeVars\n * }\n * provider.themeOverrides:\n * {\n *   common: CommonThemeVars,\n *   Component: ThemeOverrides\n *   ...\n * }\n *\n * mergedTheme:\n * {\n *   common: CommonThemeVars,\n *   self: ThemeVars,\n *   peers: { Component: Theme },\n *   overrides: { Component: ThemeOverrides }\n * }\n */\nexport default useTheme;","map":{"version":3,"names":["inject","computed","onBeforeMount","merge","useSsrAdapter","globalStyle","configProviderInjectionKey","cssrAnchorMetaName","createTheme","theme","useTheme","resolveId","mountId","style","defaultTheme","props","clsPrefixRef","ssrAdapter","NConfigProvider","mountStyle","clsPrefix","value","mount","id","undefined","head","bPrefix","anchorMetaName","ssr","preflightStyleDisabled","mergedThemeRef","_a","common","selfCommon","self","peers","themeOverrides","selfOverrides","builtinThemeOverrides","builtinOverrides","selfCommonOverrides","peersOverrides","globalCommon","globalSelfCommon","globalSelf","globalPeers","globalCommonOverrides","globalSelfOverrides","mergedThemeOverridesRef","globalSelfCommonOverrides","globalPeersOverrides","mergedCommon","mergedSelf","peerOverrides","Object"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/_mixins/use-theme.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { inject, computed, onBeforeMount } from 'vue';\nimport { merge } from 'lodash-es';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport globalStyle from '../_styles/global/index.cssr';\nimport { configProviderInjectionKey } from '../config-provider/src/context';\nimport { cssrAnchorMetaName } from './common';\nexport function createTheme(theme) {\n    return theme;\n}\nfunction useTheme(resolveId, mountId, style, defaultTheme, props, clsPrefixRef) {\n    const ssrAdapter = useSsrAdapter();\n    const NConfigProvider = inject(configProviderInjectionKey, null);\n    if (style) {\n        const mountStyle = () => {\n            const clsPrefix = clsPrefixRef === null || clsPrefixRef === void 0 ? void 0 : clsPrefixRef.value;\n            style.mount({\n                id: clsPrefix === undefined ? mountId : clsPrefix + mountId,\n                head: true,\n                props: {\n                    bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n                },\n                anchorMetaName: cssrAnchorMetaName,\n                ssr: ssrAdapter\n            });\n            if (!(NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.preflightStyleDisabled)) {\n                globalStyle.mount({\n                    id: 'n-global',\n                    head: true,\n                    anchorMetaName: cssrAnchorMetaName,\n                    ssr: ssrAdapter\n                });\n            }\n        };\n        if (ssrAdapter) {\n            mountStyle();\n        }\n        else {\n            onBeforeMount(mountStyle);\n        }\n    }\n    const mergedThemeRef = computed(() => {\n        var _a;\n        // keep props to make theme overrideable\n        const { theme: { common: selfCommon, self, peers = {} } = {}, themeOverrides: selfOverrides = {}, builtinThemeOverrides: builtinOverrides = {} } = props;\n        const { common: selfCommonOverrides, peers: peersOverrides } = selfOverrides;\n        const { common: globalCommon = undefined, [resolveId]: { common: globalSelfCommon = undefined, self: globalSelf = undefined, peers: globalPeers = {} } = {} } = (NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedThemeRef.value) || {};\n        const { common: globalCommonOverrides = undefined, [resolveId]: globalSelfOverrides = {} } = (NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedThemeOverridesRef.value) || {};\n        const { common: globalSelfCommonOverrides, peers: globalPeersOverrides = {} } = globalSelfOverrides;\n        const mergedCommon = merge({}, selfCommon || globalSelfCommon || globalCommon || defaultTheme.common, globalCommonOverrides, globalSelfCommonOverrides, selfCommonOverrides);\n        const mergedSelf = merge(\n        // {}, executed every time, no need for empty obj\n        (_a = (self || globalSelf || defaultTheme.self)) === null || _a === void 0 ? void 0 : _a(mergedCommon), builtinOverrides, globalSelfOverrides, selfOverrides);\n        return {\n            common: mergedCommon,\n            self: mergedSelf,\n            peers: merge({}, defaultTheme.peers, globalPeers, peers),\n            peerOverrides: merge({}, builtinOverrides.peers, globalPeersOverrides, peersOverrides)\n        };\n    });\n    return mergedThemeRef;\n}\nuseTheme.props = {\n    theme: Object,\n    themeOverrides: Object,\n    builtinThemeOverrides: Object\n};\n/**\n * props.theme (Theme):\n * {\n *   common: CommonThemeVars,\n *   self(): ThemeVars,\n *   peers: { Component: Theme }\n * }\n * provider.theme:\n * {\n *   common: CommonThemeVars,\n *   Button: Theme\n *   ...\n * }\n * defaultTheme:\n * {\n *   common: CommonThemeVars,\n *   self(): ThemeVars,\n *   peers: { Component: Theme }\n * }\n *\n * props.themeOverrides (ThemeOverrides):\n * {\n *   common: CommonThemeVars,\n *   peers: { Component: ThemeOverrides },\n *   ...ThemeVars\n * }\n * provider.themeOverrides:\n * {\n *   common: CommonThemeVars,\n *   Component: ThemeOverrides\n *   ...\n * }\n *\n * mergedTheme:\n * {\n *   common: CommonThemeVars,\n *   self: ThemeVars,\n *   peers: { Component: Theme },\n *   overrides: { Component: ThemeOverrides }\n * }\n */\nexport default useTheme;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}