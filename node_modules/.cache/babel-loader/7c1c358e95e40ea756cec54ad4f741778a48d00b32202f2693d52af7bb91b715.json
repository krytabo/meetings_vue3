{"ast":null,"code":"import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns/esm';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  actions: {\n    type: Array,\n    default: () => ['now', 'clear', 'confirm']\n  }\n});\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useCalendar(props, type) {\n  const panelCommon = usePanelCommon(props);\n  const {\n    isValueInvalidRef,\n    isDateDisabledRef,\n    isDateInvalidRef,\n    isTimeInvalidRef,\n    isDateTimeInvalidRef,\n    isHourDisabledRef,\n    isMinuteDisabledRef,\n    isSecondDisabledRef,\n    localeRef,\n    firstDayOfWeekRef,\n    datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isValueInvalid: isValueInvalidRef,\n    isDateDisabled: isDateDisabledRef,\n    isDateInvalid: isDateInvalidRef,\n    isTimeInvalid: isTimeInvalidRef,\n    isDateTimeInvalid: isDateTimeInvalidRef,\n    isHourDisabled: isHourDisabledRef,\n    isMinuteDisabled: isMinuteDisabledRef,\n    isSecondDisabled: isSecondDisabledRef\n  };\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const dateInputValueRef = ref(props.value === null || Array.isArray(props.value) ? '' : format(props.value, mergedDateFormatRef.value));\n  const calendarValueRef = ref(props.value === null || Array.isArray(props.value) ? Date.now() : props.value);\n  const yearVlRef = ref(null);\n  const yearScrollbarRef = ref(null);\n  const monthScrollbarRef = ref(null);\n  const nowRef = ref(Date.now());\n  const dateArrayRef = computed(() => {\n    var _a;\n    return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const monthArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return monthArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const yearArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return yearArray(Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const quarterArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return quarterArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const weekdaysRef = computed(() => {\n    return dateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const calendarMonthRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const calendarYearRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  watch(calendarValueRef, (value, oldValue) => {\n    if (type === 'date' || type === 'datetime') {\n      if (!isSameMonth(value, oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && !Array.isArray(value)) {\n      dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      calendarValueRef.value = value;\n    } else {\n      dateInputValueRef.value = '';\n    }\n  });\n  function sanitizeValue(value) {\n    if (type === 'datetime') return getTime(startOfSecond(value));\n    if (type === 'month') return getTime(startOfMonth(value));\n    if (type === 'year') return getTime(startOfYear(value));\n    if (type === 'quarter') return getTime(startOfQuarter(value));\n    return getTime(startOfDay(value));\n  }\n  function mergedIsDateDisabled(ts) {\n    const {\n      isDateDisabled: {\n        value: isDateDisabled\n      }\n    } = validation;\n    if (!isDateDisabled) return false;\n    return isDateDisabled(ts);\n  }\n  function handleDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), props.panel);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), props.panel);\n      }\n    } else {\n      dateInputValueRef.value = value;\n    }\n  }\n  function handleDateInputBlur() {\n    const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n      }\n    } else {\n      deriveDateInputValue();\n    }\n  }\n  function clearSelectedDateTime() {\n    panelCommon.doUpdateValue(null, true);\n    dateInputValueRef.value = '';\n    panelCommon.doClose(true);\n    panelCommon.handleClearClick();\n  }\n  function handleNowClick() {\n    panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n    const now = Date.now();\n    calendarValueRef.value = now;\n    panelCommon.doClose(true);\n    if (props.panel && (type === 'month' || type === 'quarter' || type === 'year')) {\n      panelCommon.disableTransitionOneTick();\n      justifyColumnsScrollState(now);\n    }\n  }\n  function handleDateClick(dateItem) {\n    if (mergedIsDateDisabled(dateItem.ts)) {\n      return;\n    }\n    let newValue;\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n    if (type === 'datetime' && props.defaultTime !== null && !Array.isArray(props.defaultTime)) {\n      const time = getDefaultTime(props.defaultTime);\n      if (time) {\n        newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n      }\n    }\n\n    newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter) : set(newValue, dateItem.dateObject));\n    panelCommon.doUpdateValue(sanitizeValue(newValue), props.panel || type === 'date' || type === 'year');\n    switch (type) {\n      case 'date':\n        panelCommon.doClose();\n        break;\n      case 'year':\n        if (props.panel) {\n          panelCommon.disableTransitionOneTick();\n        }\n        panelCommon.doClose();\n        break;\n      case 'month':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(newValue);\n        break;\n      case 'quarter':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(newValue);\n        break;\n    }\n  }\n  function handleQuickMonthClick(dateItem, updatePanelValue) {\n    let newValue;\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n    newValue = getTime(dateItem.type === 'month' ? setMonth(newValue, dateItem.dateObject.month) : setYear(newValue, dateItem.dateObject.year));\n    updatePanelValue(newValue);\n    justifyColumnsScrollState(newValue);\n  }\n  function onUpdateCalendarValue(value) {\n    calendarValueRef.value = value;\n  }\n  function deriveDateInputValue(time) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    if (props.value === null || Array.isArray(props.value)) {\n      dateInputValueRef.value = '';\n      return;\n    }\n    if (time === undefined) {\n      time = props.value;\n    }\n    dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n  function handleConfirmClick() {\n    if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n      return;\n    }\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n  function closeCalendar() {\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n  function nextYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n  }\n  function prevYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n  }\n  function nextMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n  }\n  function prevMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n  }\n  // For month type\n  function virtualListContainer() {\n    const {\n      value\n    } = yearVlRef;\n    return value === null || value === void 0 ? void 0 : value.listElRef;\n  }\n  // For month type\n  function virtualListContent() {\n    const {\n      value\n    } = yearVlRef;\n    return value === null || value === void 0 ? void 0 : value.itemsElRef;\n  }\n  // For month type\n  function handleVirtualListScroll(e) {\n    var _a;\n    (_a = yearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function handleTimePickerChange(value) {\n    if (value === null) return;\n    panelCommon.doUpdateValue(value, props.panel);\n  }\n  function handleSingleShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, false);\n  }\n  function handleSingleShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, props.panel);\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n  function justifyColumnsScrollState(value) {\n    const {\n      value: mergedValue\n    } = props;\n    if (monthScrollbarRef.value) {\n      const monthIndex = value === undefined ? mergedValue === null ? getMonth(Date.now()) : getMonth(mergedValue) : getMonth(value);\n      monthScrollbarRef.value.scrollTo({\n        top: monthIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n    if (yearVlRef.value) {\n      const yearIndex = (value === undefined ? mergedValue === null ? getYear(Date.now()) : getYear(mergedValue) : getYear(value)) - START_YEAR;\n      yearVlRef.value.scrollTo({\n        top: yearIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n  }\n  const childComponentRefs = {\n    monthScrollbarRef,\n    yearScrollbarRef,\n    yearVlRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    dateArray: dateArrayRef,\n    monthArray: monthArrayRef,\n    yearArray: yearArrayRef,\n    quarterArray: quarterArrayRef,\n    calendarYear: calendarYearRef,\n    calendarMonth: calendarMonthRef,\n    weekdays: weekdaysRef,\n    mergedIsDateDisabled,\n    nextYear,\n    prevYear,\n    nextMonth,\n    prevMonth,\n    handleNowClick,\n    handleConfirmClick,\n    handleSingleShortcutMouseenter,\n    handleSingleShortcutClick\n  }, validation), panelCommon), childComponentRefs), {\n    // datetime only\n    handleDateClick,\n    handleDateInputBlur,\n    handleDateInput,\n    handleTimePickerChange,\n    clearSelectedDateTime,\n    virtualListContainer,\n    virtualListContent,\n    handleVirtualListScroll,\n    timePickerSize: panelCommon.timePickerSize,\n    dateInputValue: dateInputValueRef,\n    datePickerSlots,\n    handleQuickMonthClick,\n    justifyColumnsScrollState,\n    calendarValue: calendarValueRef,\n    onUpdateCalendarValue\n  });\n}\nexport { useCalendar, useCalendarProps };","map":{"version":3,"names":["ref","computed","inject","watch","addMonths","addYears","isSameMonth","getTime","format","set","getYear","getMonth","getDate","isValid","startOfDay","startOfSecond","startOfMonth","startOfYear","startOfQuarter","setQuarter","setYear","setMonth","getDefaultTime","dateArray","monthArray","strictParse","yearArray","quarterArray","datePickerInjectionKey","usePanelCommon","usePanelCommonProps","MONTH_ITEM_HEIGHT","START_YEAR","useCalendarProps","Object","assign","actions","type","Array","default","useCalendar","props","panelCommon","isValueInvalidRef","isDateDisabledRef","isDateInvalidRef","isTimeInvalidRef","isDateTimeInvalidRef","isHourDisabledRef","isMinuteDisabledRef","isSecondDisabledRef","localeRef","firstDayOfWeekRef","datePickerSlots","validation","isValueInvalid","isDateDisabled","isDateInvalid","isTimeInvalid","isDateTimeInvalid","isHourDisabled","isMinuteDisabled","isSecondDisabled","mergedDateFormatRef","dateFormat","value","dateInputValueRef","isArray","calendarValueRef","Date","now","yearVlRef","yearScrollbarRef","monthScrollbarRef","nowRef","dateArrayRef","_a","firstDayOfWeek","monthArrayRef","yearArrayRef","quarterArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","dateFnsOptions","calendarMonthRef","monthFormat","calendarYearRef","yearFormat","oldValue","disableTransitionOneTick","sanitizeValue","mergedIsDateDisabled","handleDateInput","date","doUpdateValue","panel","newDateTime","year","month","handleDateInputBlur","deriveDateInputValue","clearSelectedDateTime","doClose","handleClearClick","handleNowClick","justifyColumnsScrollState","handleDateClick","newValue","defaultTime","time","dateObject","quarter","handleQuickMonthClick","updatePanelValue","onUpdateCalendarValue","undefined","handleConfirmClick","doConfirm","closeCalendar","active","nextYear","prevYear","nextMonth","prevMonth","virtualListContainer","listElRef","virtualListContent","itemsElRef","handleVirtualListScroll","e","sync","handleTimePickerChange","handleSingleShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleSingleShortcutClick","clearPendingValue","mergedValue","monthIndex","scrollTo","top","yearIndex","childComponentRefs","calendarYear","calendarMonth","weekdays","timePickerSize","dateInputValue","calendarValue"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/date-picker/src/panel/use-calendar.js"],"sourcesContent":["import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns/esm';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { actions: {\n        type: Array,\n        default: () => ['now', 'clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useCalendar(props, type) {\n    const panelCommon = usePanelCommon(props);\n    const { isValueInvalidRef, isDateDisabledRef, isDateInvalidRef, isTimeInvalidRef, isDateTimeInvalidRef, isHourDisabledRef, isMinuteDisabledRef, isSecondDisabledRef, localeRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isValueInvalid: isValueInvalidRef,\n        isDateDisabled: isDateDisabledRef,\n        isDateInvalid: isDateInvalidRef,\n        isTimeInvalid: isTimeInvalidRef,\n        isDateTimeInvalid: isDateTimeInvalidRef,\n        isHourDisabled: isHourDisabledRef,\n        isMinuteDisabled: isMinuteDisabledRef,\n        isSecondDisabled: isSecondDisabledRef\n    };\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const dateInputValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? ''\n        : format(props.value, mergedDateFormatRef.value));\n    const calendarValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? Date.now()\n        : props.value);\n    const yearVlRef = ref(null);\n    const yearScrollbarRef = ref(null);\n    const monthScrollbarRef = ref(null);\n    const nowRef = ref(Date.now());\n    const dateArrayRef = computed(() => {\n        var _a;\n        return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const monthArrayRef = computed(() => {\n        const { value } = props;\n        return monthArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const yearArrayRef = computed(() => {\n        const { value } = props;\n        return yearArray(Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const quarterArrayRef = computed(() => {\n        const { value } = props;\n        return quarterArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const weekdaysRef = computed(() => {\n        return dateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const calendarMonthRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const calendarYearRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    watch(calendarValueRef, (value, oldValue) => {\n        if (type === 'date' || type === 'datetime') {\n            if (!isSameMonth(value, oldValue)) {\n                panelCommon.disableTransitionOneTick();\n            }\n        }\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && !Array.isArray(value)) {\n            dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            calendarValueRef.value = value;\n        }\n        else {\n            dateInputValueRef.value = '';\n        }\n    });\n    function sanitizeValue(value) {\n        if (type === 'datetime')\n            return getTime(startOfSecond(value));\n        if (type === 'month')\n            return getTime(startOfMonth(value));\n        if (type === 'year')\n            return getTime(startOfYear(value));\n        if (type === 'quarter')\n            return getTime(startOfQuarter(value));\n        return getTime(startOfDay(value));\n    }\n    function mergedIsDateDisabled(ts) {\n        const { isDateDisabled: { value: isDateDisabled } } = validation;\n        if (!isDateDisabled)\n            return false;\n        return isDateDisabled(ts);\n    }\n    function handleDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), props.panel);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), props.panel);\n            }\n        }\n        else {\n            dateInputValueRef.value = value;\n        }\n    }\n    function handleDateInputBlur() {\n        const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n            }\n        }\n        else {\n            deriveDateInputValue();\n        }\n    }\n    function clearSelectedDateTime() {\n        panelCommon.doUpdateValue(null, true);\n        dateInputValueRef.value = '';\n        panelCommon.doClose(true);\n        panelCommon.handleClearClick();\n    }\n    function handleNowClick() {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n        const now = Date.now();\n        calendarValueRef.value = now;\n        panelCommon.doClose(true);\n        if (props.panel &&\n            (type === 'month' || type === 'quarter' || type === 'year')) {\n            panelCommon.disableTransitionOneTick();\n            justifyColumnsScrollState(now);\n        }\n    }\n    function handleDateClick(dateItem) {\n        if (mergedIsDateDisabled(dateItem.ts)) {\n            return;\n        }\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        if (type === 'datetime' &&\n            props.defaultTime !== null &&\n            !Array.isArray(props.defaultTime)) {\n            const time = getDefaultTime(props.defaultTime);\n            if (time) {\n                newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n            }\n        }\n        newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter\n            ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter)\n            : set(newValue, dateItem.dateObject));\n        panelCommon.doUpdateValue(sanitizeValue(newValue), props.panel || type === 'date' || type === 'year');\n        switch (type) {\n            case 'date':\n                panelCommon.doClose();\n                break;\n            case 'year':\n                if (props.panel) {\n                    panelCommon.disableTransitionOneTick();\n                }\n                panelCommon.doClose();\n                break;\n            case 'month':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(newValue);\n                break;\n            case 'quarter':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(newValue);\n                break;\n        }\n    }\n    function handleQuickMonthClick(dateItem, updatePanelValue) {\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        newValue = getTime(dateItem.type === 'month'\n            ? setMonth(newValue, dateItem.dateObject.month)\n            : setYear(newValue, dateItem.dateObject.year));\n        updatePanelValue(newValue);\n        justifyColumnsScrollState(newValue);\n    }\n    function onUpdateCalendarValue(value) {\n        calendarValueRef.value = value;\n    }\n    function deriveDateInputValue(time) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        if (props.value === null || Array.isArray(props.value)) {\n            dateInputValueRef.value = '';\n            return;\n        }\n        if (time === undefined) {\n            time = props.value;\n        }\n        dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleConfirmClick() {\n        if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function nextYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n    }\n    function prevYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n    }\n    function nextMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n    }\n    function prevMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n    }\n    // For month type\n    function virtualListContainer() {\n        const { value } = yearVlRef;\n        return value === null || value === void 0 ? void 0 : value.listElRef;\n    }\n    // For month type\n    function virtualListContent() {\n        const { value } = yearVlRef;\n        return value === null || value === void 0 ? void 0 : value.itemsElRef;\n    }\n    // For month type\n    function handleVirtualListScroll(e) {\n        var _a;\n        (_a = yearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function handleTimePickerChange(value) {\n        if (value === null)\n            return;\n        panelCommon.doUpdateValue(value, props.panel);\n    }\n    function handleSingleShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, false);\n    }\n    function handleSingleShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, props.panel);\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    function justifyColumnsScrollState(value) {\n        const { value: mergedValue } = props;\n        if (monthScrollbarRef.value) {\n            const monthIndex = value === undefined\n                ? mergedValue === null\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue)\n                : getMonth(value);\n            monthScrollbarRef.value.scrollTo({ top: monthIndex * MONTH_ITEM_HEIGHT });\n        }\n        if (yearVlRef.value) {\n            const yearIndex = (value === undefined\n                ? mergedValue === null\n                    ? getYear(Date.now())\n                    : getYear(mergedValue)\n                : getYear(value)) - START_YEAR;\n            yearVlRef.value.scrollTo({ top: yearIndex * MONTH_ITEM_HEIGHT });\n        }\n    }\n    const childComponentRefs = {\n        monthScrollbarRef,\n        yearScrollbarRef,\n        yearVlRef\n    };\n    return Object.assign(Object.assign(Object.assign(Object.assign({ dateArray: dateArrayRef, monthArray: monthArrayRef, yearArray: yearArrayRef, quarterArray: quarterArrayRef, calendarYear: calendarYearRef, calendarMonth: calendarMonthRef, weekdays: weekdaysRef, mergedIsDateDisabled,\n        nextYear,\n        prevYear,\n        nextMonth,\n        prevMonth,\n        handleNowClick,\n        handleConfirmClick,\n        handleSingleShortcutMouseenter,\n        handleSingleShortcutClick }, validation), panelCommon), childComponentRefs), { \n        // datetime only\n        handleDateClick,\n        handleDateInputBlur,\n        handleDateInput,\n        handleTimePickerChange,\n        clearSelectedDateTime,\n        virtualListContainer,\n        virtualListContent,\n        handleVirtualListScroll, timePickerSize: panelCommon.timePickerSize, dateInputValue: dateInputValueRef, datePickerSlots,\n        handleQuickMonthClick,\n        justifyColumnsScrollState, calendarValue: calendarValueRef, onUpdateCalendarValue });\n}\nexport { useCalendar, useCalendarProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}