{"ast":null,"code":"export function parseResponsiveProp(reponsiveProp) {\n  if (typeof reponsiveProp === \"number\") {\n    return {\n      '': reponsiveProp.toString()\n    };\n  }\n  const params = {};\n  reponsiveProp.split(/ +/).forEach(pairLiteral => {\n    if (pairLiteral === '') return;\n    const [prefix, value] = pairLiteral.split(':');\n    if (value === undefined) {\n      params[''] = prefix;\n    } else {\n      params[prefix] = value;\n    }\n  });\n  return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n  var _a;\n  if (reponsiveProp === undefined || reponsiveProp === null) return undefined;\n  const classObj = parseResponsiveProp(reponsiveProp);\n  if (activeKeyOrSize === undefined) return classObj[''];\n  if (typeof activeKeyOrSize === 'string') {\n    return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n  } else if (Array.isArray(activeKeyOrSize)) {\n    for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n      const key = activeKeyOrSize[i];\n      if (key in classObj) return classObj[key];\n    }\n    return classObj[''];\n  } else {\n    // Here we suppose all the keys are number formatted\n    let activeValue = undefined;\n    let activeKey = -1;\n    Object.keys(classObj).forEach(key => {\n      const keyAsNum = Number(key);\n      if (!Number.isNaN(keyAsNum) && activeKeyOrSize >= keyAsNum && keyAsNum >= activeKey) {\n        activeKey = keyAsNum;\n        activeValue = classObj[key];\n      }\n    });\n    return activeValue;\n  }\n}\nexport { parseResponsivePropValue };","map":{"version":3,"names":["parseResponsiveProp","reponsiveProp","toString","params","split","forEach","pairLiteral","prefix","value","undefined","parseResponsivePropValue","activeKeyOrSize","_a","classObj","Array","isArray","i","length","key","activeValue","activeKey","Object","keys","keyAsNum","Number","isNaN"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/seemly/es/css/responsive.js"],"sourcesContent":["export function parseResponsiveProp(reponsiveProp) {\n    if (typeof reponsiveProp === \"number\") {\n        return {\n            '': reponsiveProp.toString()\n        };\n    }\n    const params = {};\n    reponsiveProp.split(/ +/).forEach((pairLiteral) => {\n        if (pairLiteral === '')\n            return;\n        const [prefix, value] = pairLiteral.split(':');\n        if (value === undefined) {\n            params[''] = prefix;\n        }\n        else {\n            params[prefix] = value;\n        }\n    });\n    return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n    var _a;\n    if (reponsiveProp === undefined || reponsiveProp === null)\n        return undefined;\n    const classObj = parseResponsiveProp(reponsiveProp);\n    if (activeKeyOrSize === undefined)\n        return classObj[''];\n    if (typeof activeKeyOrSize === 'string') {\n        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n    }\n    else if (Array.isArray(activeKeyOrSize)) {\n        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n            const key = activeKeyOrSize[i];\n            if (key in classObj)\n                return classObj[key];\n        }\n        return classObj[''];\n    }\n    else {\n        // Here we suppose all the keys are number formatted\n        let activeValue = undefined;\n        let activeKey = -1;\n        Object.keys(classObj).forEach((key) => {\n            const keyAsNum = Number(key);\n            if (!Number.isNaN(keyAsNum) &&\n                activeKeyOrSize >= keyAsNum &&\n                keyAsNum >= activeKey) {\n                activeKey = keyAsNum;\n                activeValue = classObj[key];\n            }\n        });\n        return activeValue;\n    }\n}\nexport { parseResponsivePropValue };\n"],"mappings":"AAAA,OAAO,SAASA,mBAAmB,CAACC,aAAa,EAAE;EAC/C,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE;IACnC,OAAO;MACH,EAAE,EAAEA,aAAa,CAACC,QAAQ;IAC9B,CAAC;EACL;EACA,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjBF,aAAa,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAAEC,WAAW,IAAK;IAC/C,IAAIA,WAAW,KAAK,EAAE,EAClB;IACJ,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAGF,WAAW,CAACF,KAAK,CAAC,GAAG,CAAC;IAC9C,IAAII,KAAK,KAAKC,SAAS,EAAE;MACrBN,MAAM,CAAC,EAAE,CAAC,GAAGI,MAAM;IACvB,CAAC,MACI;MACDJ,MAAM,CAACI,MAAM,CAAC,GAAGC,KAAK;IAC1B;EACJ,CAAC,CAAC;EACF,OAAOL,MAAM;AACjB;AACA,SAASO,wBAAwB,CAACT,aAAa,EAAEU,eAAe,EAAE;EAC9D,IAAIC,EAAE;EACN,IAAIX,aAAa,KAAKQ,SAAS,IAAIR,aAAa,KAAK,IAAI,EACrD,OAAOQ,SAAS;EACpB,MAAMI,QAAQ,GAAGb,mBAAmB,CAACC,aAAa,CAAC;EACnD,IAAIU,eAAe,KAAKF,SAAS,EAC7B,OAAOI,QAAQ,CAAC,EAAE,CAAC;EACvB,IAAI,OAAOF,eAAe,KAAK,QAAQ,EAAE;IACrC,OAAO,CAACC,EAAE,GAAGC,QAAQ,CAACF,eAAe,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACzF,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACJ,eAAe,CAAC,EAAE;IACrC,KAAK,IAAIK,CAAC,GAAGL,eAAe,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAClD,MAAME,GAAG,GAAGP,eAAe,CAACK,CAAC,CAAC;MAC9B,IAAIE,GAAG,IAAIL,QAAQ,EACf,OAAOA,QAAQ,CAACK,GAAG,CAAC;IAC5B;IACA,OAAOL,QAAQ,CAAC,EAAE,CAAC;EACvB,CAAC,MACI;IACD;IACA,IAAIM,WAAW,GAAGV,SAAS;IAC3B,IAAIW,SAAS,GAAG,CAAC,CAAC;IAClBC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAACR,OAAO,CAAEa,GAAG,IAAK;MACnC,MAAMK,QAAQ,GAAGC,MAAM,CAACN,GAAG,CAAC;MAC5B,IAAI,CAACM,MAAM,CAACC,KAAK,CAACF,QAAQ,CAAC,IACvBZ,eAAe,IAAIY,QAAQ,IAC3BA,QAAQ,IAAIH,SAAS,EAAE;QACvBA,SAAS,GAAGG,QAAQ;QACpBJ,WAAW,GAAGN,QAAQ,CAACK,GAAG,CAAC;MAC/B;IACJ,CAAC,CAAC;IACF,OAAOC,WAAW;EACtB;AACJ;AACA,SAAST,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}