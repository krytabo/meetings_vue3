{"ast":null,"code":"import commonVariables from './_common';\nimport { composite } from 'seemly';\nimport { checkboxLight } from '../../checkbox/styles';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { inputLight } from '../../input/styles';\nimport { commonLight } from '../../_styles/common';\nimport { emptyLight } from '../../empty/styles';\nimport { buttonLight } from '../../button/styles';\nimport { createTheme } from '../../_mixins';\nconst self = vars => {\n  const {\n    fontWeight,\n    iconColorDisabled,\n    iconColor,\n    fontSizeLarge,\n    fontSizeMedium,\n    fontSizeSmall,\n    heightLarge,\n    heightMedium,\n    heightSmall,\n    borderRadius,\n    cardColor,\n    tableHeaderColor,\n    textColor1,\n    textColorDisabled,\n    textColor2,\n    borderColor,\n    hoverColor\n  } = vars;\n  return Object.assign(Object.assign({}, commonVariables), {\n    itemHeightSmall: heightSmall,\n    itemHeightMedium: heightMedium,\n    itemHeightLarge: heightLarge,\n    fontSizeSmall,\n    fontSizeMedium,\n    fontSizeLarge,\n    borderRadius,\n    borderColor,\n    listColor: cardColor,\n    headerColor: composite(cardColor, tableHeaderColor),\n    titleTextColor: textColor1,\n    titleTextColorDisabled: textColorDisabled,\n    extraTextColor: textColor2,\n    filterDividerColor: borderColor,\n    itemTextColor: textColor2,\n    itemTextColorDisabled: textColorDisabled,\n    itemColorPending: hoverColor,\n    titleFontWeight: fontWeight,\n    iconColor,\n    iconColorDisabled\n  });\n};\nconst transferLight = createTheme({\n  name: 'Transfer',\n  common: commonLight,\n  peers: {\n    Checkbox: checkboxLight,\n    Scrollbar: scrollbarLight,\n    Input: inputLight,\n    Empty: emptyLight,\n    Button: buttonLight\n  },\n  self\n});\nexport default transferLight;","map":{"version":3,"names":["commonVariables","composite","checkboxLight","scrollbarLight","inputLight","commonLight","emptyLight","buttonLight","createTheme","self","vars","fontWeight","iconColorDisabled","iconColor","fontSizeLarge","fontSizeMedium","fontSizeSmall","heightLarge","heightMedium","heightSmall","borderRadius","cardColor","tableHeaderColor","textColor1","textColorDisabled","textColor2","borderColor","hoverColor","Object","assign","itemHeightSmall","itemHeightMedium","itemHeightLarge","listColor","headerColor","titleTextColor","titleTextColorDisabled","extraTextColor","filterDividerColor","itemTextColor","itemTextColorDisabled","itemColorPending","titleFontWeight","transferLight","name","common","peers","Checkbox","Scrollbar","Input","Empty","Button"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/legacy-transfer/styles/light.js"],"sourcesContent":["import commonVariables from './_common';\nimport { composite } from 'seemly';\nimport { checkboxLight } from '../../checkbox/styles';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { inputLight } from '../../input/styles';\nimport { commonLight } from '../../_styles/common';\nimport { emptyLight } from '../../empty/styles';\nimport { buttonLight } from '../../button/styles';\nimport { createTheme } from '../../_mixins';\nconst self = (vars) => {\n    const { fontWeight, iconColorDisabled, iconColor, fontSizeLarge, fontSizeMedium, fontSizeSmall, heightLarge, heightMedium, heightSmall, borderRadius, cardColor, tableHeaderColor, textColor1, textColorDisabled, textColor2, borderColor, hoverColor } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { itemHeightSmall: heightSmall, itemHeightMedium: heightMedium, itemHeightLarge: heightLarge, fontSizeSmall,\n        fontSizeMedium,\n        fontSizeLarge,\n        borderRadius,\n        borderColor, listColor: cardColor, headerColor: composite(cardColor, tableHeaderColor), titleTextColor: textColor1, titleTextColorDisabled: textColorDisabled, extraTextColor: textColor2, filterDividerColor: borderColor, itemTextColor: textColor2, itemTextColorDisabled: textColorDisabled, itemColorPending: hoverColor, titleFontWeight: fontWeight, iconColor,\n        iconColorDisabled });\n};\nconst transferLight = createTheme({\n    name: 'Transfer',\n    common: commonLight,\n    peers: {\n        Checkbox: checkboxLight,\n        Scrollbar: scrollbarLight,\n        Input: inputLight,\n        Empty: emptyLight,\n        Button: buttonLight\n    },\n    self\n});\nexport default transferLight;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,WAAW;AACvC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,WAAW,QAAQ,eAAe;AAC3C,MAAMC,IAAI,GAAIC,IAAI,IAAK;EACnB,MAAM;IAAEC,UAAU;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC,aAAa;IAAEC,cAAc;IAAEC,aAAa;IAAEC,WAAW;IAAEC,YAAY;IAAEC,WAAW;IAAEC,YAAY;IAAEC,SAAS;IAAEC,gBAAgB;IAAEC,UAAU;IAAEC,iBAAiB;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGjB,IAAI;EAC9P,OAAOkB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE7B,eAAe,CAAC,EAAE;IAAE8B,eAAe,EAAEX,WAAW;IAAEY,gBAAgB,EAAEb,YAAY;IAAEc,eAAe,EAAEf,WAAW;IAAED,aAAa;IAChKD,cAAc;IACdD,aAAa;IACbM,YAAY;IACZM,WAAW;IAAEO,SAAS,EAAEZ,SAAS;IAAEa,WAAW,EAAEjC,SAAS,CAACoB,SAAS,EAAEC,gBAAgB,CAAC;IAAEa,cAAc,EAAEZ,UAAU;IAAEa,sBAAsB,EAAEZ,iBAAiB;IAAEa,cAAc,EAAEZ,UAAU;IAAEa,kBAAkB,EAAEZ,WAAW;IAAEa,aAAa,EAAEd,UAAU;IAAEe,qBAAqB,EAAEhB,iBAAiB;IAAEiB,gBAAgB,EAAEd,UAAU;IAAEe,eAAe,EAAE/B,UAAU;IAAEE,SAAS;IACrWD;EAAkB,CAAC,CAAC;AAC5B,CAAC;AACD,MAAM+B,aAAa,GAAGnC,WAAW,CAAC;EAC9BoC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAExC,WAAW;EACnByC,KAAK,EAAE;IACHC,QAAQ,EAAE7C,aAAa;IACvB8C,SAAS,EAAE7C,cAAc;IACzB8C,KAAK,EAAE7C,UAAU;IACjB8C,KAAK,EAAE5C,UAAU;IACjB6C,MAAM,EAAE5C;EACZ,CAAC;EACDE;AACJ,CAAC,CAAC;AACF,eAAekC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}