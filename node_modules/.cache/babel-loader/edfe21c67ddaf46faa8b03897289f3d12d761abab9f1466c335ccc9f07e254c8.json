{"ast":null,"code":"import { h, defineComponent, ref, toRef, watch, computed, watchEffect, nextTick } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  buttonPlacement: {\n    type: String,\n    default: 'right'\n  },\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  parse: Function,\n  format: Function,\n  precision: Number,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // dom ref\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null);\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n    const getPrecision = value => {\n      const fraction = String(value).split('.')[1];\n      return fraction ? fraction.length : 0;\n    };\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(value => {\n        if (value === undefined) return 0;\n        return getPrecision(value);\n      });\n      return Math.max(...precisions);\n    };\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n    const deriveValueFromDisplayedValue = ({\n      offset,\n      doUpdateIfValid,\n      fixPrecision,\n      isInputing\n    }) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n      const parsedValue = (props.parse || parse)(displayedValue);\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n      if (validator(parsedValue)) {\n        const currentPrecision = getPrecision(parsedValue);\n        const {\n          precision\n        } = props;\n        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {\n          return false;\n        }\n        let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMax;\n          }\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMin;\n          }\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n      return false;\n    };\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (validator(mergedValue)) {\n        const {\n          format: formatProp,\n          precision\n        } = props;\n        if (formatProp) {\n          displayedValueRef.value = formatProp(mergedValue);\n        } else {\n          if (mergedValue === null || precision === undefined ||\n          // precision overflow\n          getPrecision(mergedValue) > precision) {\n            displayedValueRef.value = format(mergedValue, undefined);\n          } else {\n            displayedValueRef.value = format(mergedValue, precision);\n          }\n        }\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n    deriveDisplayedValueFromValue();\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: -mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: +mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      var _a, _b;\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n      const value = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: true,\n        isInputing: false,\n        fixPrecision: true\n      });\n      // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        }\n        // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n      // User may change value in blur callback, we make sure it will be\n      // displayed. Sometimes mergedValue won't be viewed as changed\n      void nextTick(() => {\n        deriveDisplayedValueFromValue();\n      });\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: -mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n    function handleMinusMousedown() {\n      clearMinusHoldTimeout();\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearMinusHoldTimeout, {\n        once: true\n      });\n    }\n    let firstAddMousedownId = null;\n    function handleAddMousedown() {\n      clearAddHoldTimeout();\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearAddHoldTimeout, {\n        once: true\n      });\n    }\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n    function handleKeyDown(e) {\n      var _a, _b;\n      if (e.key === 'Enter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.key === 'ArrowUp') {\n        if (!addableRef.value) return;\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (!minusableRef.value) return;\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {\n        deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: true,\n          fixPrecision: false\n        });\n      }\n    }\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots\n    } = this;\n    const renderMinusButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.minusable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleMinusClick,\n        onMousedown: this.handleMinusMousedown,\n        ref: \"minusButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['minus-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })])\n      });\n    };\n    const renderAddButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.addable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleAddClick,\n        onMousedown: this.handleAddMousedown,\n        ref: \"addButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['add-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      });\n    };\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a;\n        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), resolveWrappedSlot($slots.prefix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-prefix`\n            }, children);\n          }\n          return null;\n        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      },\n      suffix: () => {\n        var _a;\n        return this.showButton ? [resolveWrappedSlot($slots.suffix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-suffix`\n            }, children);\n          }\n          return null;\n        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      }\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","toRef","watch","computed","watchEffect","nextTick","rgba","useMemo","useMergedState","on","RemoveIcon","AddIcon","NInput","NBaseIcon","NxButton","useTheme","useFormItem","useLocale","useConfig","warnOnce","call","resolveSlot","resolveWrappedSlot","inputNumberLight","parse","validator","format","parseNumber","isWipValue","style","useRtl","HOLDING_CHANGE_THRESHOLD","HOLDING_CHANGE_INTERVAL","inputNumberProps","Object","assign","props","autofocus","Boolean","loading","type","default","undefined","placeholder","String","defaultValue","Number","value","step","min","max","size","disabled","Function","bordered","showButton","buttonPlacement","readonly","clearable","keyboard","updateValueOnInput","precision","status","Array","onUpdateValue","onFocus","onBlur","onClear","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","mergedRtlRef","themeRef","localeRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","inputInstRef","minusButtonInstRef","addButtonInstRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","displayedValueRef","getPrecision","fraction","split","length","getMaxPrecision","currentValue","precisions","map","Math","mergedPlaceholderRef","mergedStepRef","parsedNumber","abs","mergedMinRef","mergedMaxRef","doUpdateValue","mergedValue","deriveDisplayedValueFromValue","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","deriveValueFromDisplayedValue","offset","doUpdateIfValid","fixPrecision","isInputing","displayedValue","parsedValue","currentPrecision","nextValue","parseFloat","toFixed","mergedMax","mergedMin","formatProp","displayedValueInvalidRef","derivedValue","minusableRef","mergedStep","derivedNextValue","addableRef","doFocus","e","nTriggerFormFocus","doBlur","_a","_b","target","wrapperElRef","inputElRef","nTriggerFormBlur","doClear","doAdd","addable","clearAddHoldTimeout","createValidValue","doMinus","minusable","clearMinusHoldTimeout","handleFocus","handleBlur","handleClear","handleMouseDown","_c","$el","contains","preventDefault","activate","minusHoldStateIntervalId","addHoldStateIntervalId","firstMinusMousedownId","window","clearTimeout","clearInterval","firstAddMousedownId","handleMinusMousedown","setTimeout","setInterval","document","once","handleAddMousedown","handleAddClick","handleMinusClick","handleKeyDown","key","deactivate","ArrowUp","ArrowDown","handleUpdateDisplayedValue","exposedMethods","focus","blur","rtlEnabledRef","rtlEnabled","mergedClsPrefix","mergedBordered","uncontrolledValue","mergedPlaceholder","displayedValueInvalid","mergedSize","mergedDisabled","mergedStatus","mergedTheme","inputThemeOverrides","paddingSmall","paddingMedium","paddingLarge","buttonThemeOverrides","self","iconColorDisabled","r","g","b","a","textColorTextDisabled","opacityDisabled","render","$slots","renderMinusButton","text","focusable","theme","peers","Button","themeOverrides","peerOverrides","builtinThemeOverrides","onClick","onMousedown","icon","clsPrefix","renderAddButton","class","Input","textDecoration","onKeydown","internalLoadingBeforeSuffix","prefix","children","suffix"],"sources":["/Users/krystal/Documents/GitHub/meetings_vue3/node_modules/naive-ui/es/input-number/src/InputNumber.js"],"sourcesContent":["import { h, defineComponent, ref, toRef, watch, computed, watchEffect, nextTick } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), { autofocus: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, placeholder: String, defaultValue: {\n        type: Number,\n        default: null\n    }, value: Number, step: {\n        type: [Number, String],\n        default: 1\n    }, min: [Number, String], max: [Number, String], size: String, disabled: {\n        type: Boolean,\n        default: undefined\n    }, validator: Function, bordered: {\n        type: Boolean,\n        default: undefined\n    }, showButton: {\n        type: Boolean,\n        default: true\n    }, buttonPlacement: {\n        type: String,\n        default: 'right'\n    }, readonly: Boolean, clearable: Boolean, keyboard: {\n        type: Object,\n        default: {}\n    }, updateValueOnInput: {\n        type: Boolean,\n        default: true\n    }, parse: Function, format: Function, precision: Number, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'InputNumber',\n    props: inputNumberProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('InputNumber');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // dom ref\n        const inputInstRef = ref(null);\n        const minusButtonInstRef = ref(null);\n        const addButtonInstRef = ref(null);\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const displayedValueRef = ref('');\n        const getPrecision = (value) => {\n            const fraction = String(value).split('.')[1];\n            return fraction ? fraction.length : 0;\n        };\n        const getMaxPrecision = (currentValue) => {\n            const precisions = [props.min, props.max, props.step, currentValue].map((value) => {\n                if (value === undefined)\n                    return 0;\n                return getPrecision(value);\n            });\n            return Math.max(...precisions);\n        };\n        const mergedPlaceholderRef = useMemo(() => {\n            const { placeholder } = props;\n            if (placeholder !== undefined)\n                return placeholder;\n            return localeRef.value.placeholder;\n        });\n        const mergedStepRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.step);\n            if (parsedNumber !== null) {\n                return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n            }\n            return 1;\n        });\n        const mergedMinRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.min);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const mergedMaxRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.max);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const doUpdateValue = (value) => {\n            const { value: mergedValue } = mergedValueRef;\n            if (value === mergedValue) {\n                deriveDisplayedValueFromValue();\n                return;\n            }\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue, onChange } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        };\n        const deriveValueFromDisplayedValue = ({ offset, doUpdateIfValid, fixPrecision, isInputing }) => {\n            const { value: displayedValue } = displayedValueRef;\n            if (isInputing && isWipValue(displayedValue)) {\n                return false;\n            }\n            const parsedValue = (props.parse || parse)(displayedValue);\n            if (parsedValue === null) {\n                if (doUpdateIfValid)\n                    doUpdateValue(null);\n                return null;\n            }\n            if (validator(parsedValue)) {\n                const currentPrecision = getPrecision(parsedValue);\n                const { precision } = props;\n                if (precision !== undefined &&\n                    precision < currentPrecision &&\n                    !fixPrecision) {\n                    return false;\n                }\n                let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n                if (validator(nextValue)) {\n                    const { value: mergedMax } = mergedMaxRef;\n                    const { value: mergedMin } = mergedMinRef;\n                    if (mergedMax !== null && nextValue > mergedMax) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMax;\n                    }\n                    if (mergedMin !== null && nextValue < mergedMin) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMin;\n                    }\n                    if (props.validator && !props.validator(nextValue))\n                        return false;\n                    if (doUpdateIfValid)\n                        doUpdateValue(nextValue);\n                    return nextValue;\n                }\n            }\n            return false;\n        };\n        const deriveDisplayedValueFromValue = () => {\n            const { value: mergedValue } = mergedValueRef;\n            if (validator(mergedValue)) {\n                const { format: formatProp, precision } = props;\n                if (formatProp) {\n                    displayedValueRef.value = formatProp(mergedValue);\n                }\n                else {\n                    if (mergedValue === null ||\n                        precision === undefined ||\n                        // precision overflow\n                        getPrecision(mergedValue) > precision) {\n                        displayedValueRef.value = format(mergedValue, undefined);\n                    }\n                    else {\n                        displayedValueRef.value = format(mergedValue, precision);\n                    }\n                }\n            }\n            else {\n                // null can pass the validator check\n                // so mergedValue is a number\n                displayedValueRef.value = String(mergedValue);\n            }\n        };\n        deriveDisplayedValueFromValue();\n        const displayedValueInvalidRef = useMemo(() => {\n            const derivedValue = deriveValueFromDisplayedValue({\n                offset: 0,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedValue === false;\n        });\n        const minusableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue({\n                offset: -mergedStep,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedNextValue !== false;\n        });\n        const addableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue({\n                offset: +mergedStep,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedNextValue !== false;\n        });\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            var _a, _b;\n            if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                // hit input wrapper\n                // which means not activated\n                return;\n            }\n            const value = deriveValueFromDisplayedValue({\n                offset: 0,\n                doUpdateIfValid: true,\n                isInputing: false,\n                fixPrecision: true\n            });\n            // If valid, update event has been emitted\n            // make sure e.target.value is correct in blur callback\n            if (value !== false) {\n                const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n                if (inputElRef) {\n                    inputElRef.value = String(value || '');\n                }\n                // If value is not changed, the displayed value may be greater than or\n                // less than the current value. The derived value is reformatted so the\n                // value is not changed. We can simply derive a new displayed value\n                if (mergedValueRef.value === value) {\n                    deriveDisplayedValueFromValue();\n                }\n            }\n            else {\n                // If not valid, nothing will be emitted, so derive displayed value from\n                // origin value\n                deriveDisplayedValueFromValue();\n            }\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n            // User may change value in blur callback, we make sure it will be\n            // displayed. Sometimes mergedValue won't be viewed as changed\n            void nextTick(() => {\n                deriveDisplayedValueFromValue();\n            });\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doAdd() {\n            const { value: addable } = addableRef;\n            if (!addable) {\n                clearAddHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue({\n                    offset: mergedStep,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n            }\n        }\n        function doMinus() {\n            const { value: minusable } = minusableRef;\n            if (!minusable) {\n                clearMinusHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue({\n                    offset: -mergedStep,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n            }\n        }\n        const handleFocus = doFocus;\n        const handleBlur = doBlur;\n        function createValidValue() {\n            if (props.validator)\n                return null;\n            const { value: mergedMin } = mergedMinRef;\n            const { value: mergedMax } = mergedMaxRef;\n            if (mergedMin !== null) {\n                return Math.max(0, mergedMin);\n            }\n            else if (mergedMax !== null) {\n                return Math.min(0, mergedMax);\n            }\n            else {\n                return 0;\n            }\n        }\n        function handleClear(e) {\n            doClear(e);\n            doUpdateValue(null);\n        }\n        function handleMouseDown(e) {\n            var _a, _b, _c;\n            if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n        }\n        let minusHoldStateIntervalId = null;\n        let addHoldStateIntervalId = null;\n        let firstMinusMousedownId = null;\n        function clearMinusHoldTimeout() {\n            if (firstMinusMousedownId) {\n                window.clearTimeout(firstMinusMousedownId);\n                firstMinusMousedownId = null;\n            }\n            if (minusHoldStateIntervalId) {\n                window.clearInterval(minusHoldStateIntervalId);\n                minusHoldStateIntervalId = null;\n            }\n        }\n        function clearAddHoldTimeout() {\n            if (firstAddMousedownId) {\n                window.clearTimeout(firstAddMousedownId);\n                firstAddMousedownId = null;\n            }\n            if (addHoldStateIntervalId) {\n                window.clearInterval(addHoldStateIntervalId);\n                addHoldStateIntervalId = null;\n            }\n        }\n        function handleMinusMousedown() {\n            clearMinusHoldTimeout();\n            firstMinusMousedownId = window.setTimeout(() => {\n                minusHoldStateIntervalId = window.setInterval(() => {\n                    doMinus();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, clearMinusHoldTimeout, {\n                once: true\n            });\n        }\n        let firstAddMousedownId = null;\n        function handleAddMousedown() {\n            clearAddHoldTimeout();\n            firstAddMousedownId = window.setTimeout(() => {\n                addHoldStateIntervalId = window.setInterval(() => {\n                    doAdd();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, clearAddHoldTimeout, {\n                once: true\n            });\n        }\n        const handleAddClick = () => {\n            if (addHoldStateIntervalId)\n                return;\n            doAdd();\n        };\n        const handleMinusClick = () => {\n            if (minusHoldStateIntervalId)\n                return;\n            doMinus();\n        };\n        function handleKeyDown(e) {\n            var _a, _b;\n            if (e.key === 'Enter') {\n                if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                    // hit input wrapper\n                    // which means not activated\n                    return;\n                }\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n                }\n            }\n            else if (e.key === 'ArrowUp') {\n                if (!addableRef.value)\n                    return;\n                if (props.keyboard.ArrowUp === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    doAdd();\n                }\n            }\n            else if (e.key === 'ArrowDown') {\n                if (!minusableRef.value)\n                    return;\n                if (props.keyboard.ArrowDown === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    doMinus();\n                }\n            }\n        }\n        function handleUpdateDisplayedValue(value) {\n            displayedValueRef.value = value;\n            if (props.updateValueOnInput &&\n                !props.format &&\n                !props.parse &&\n                props.precision === undefined) {\n                deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: true,\n                    fixPrecision: false\n                });\n            }\n        }\n        watch(mergedValueRef, () => {\n            deriveDisplayedValueFromValue();\n        });\n        const exposedMethods = {\n            focus: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus(); },\n            blur: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur(); }\n        };\n        const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n        return Object.assign(Object.assign({}, exposedMethods), { rtlEnabled: rtlEnabledRef, inputInstRef,\n            minusButtonInstRef,\n            addButtonInstRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, mergedPlaceholder: mergedPlaceholderRef, displayedValueInvalid: displayedValueInvalidRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, displayedValue: displayedValueRef, addable: addableRef, minusable: minusableRef, mergedStatus: mergedStatusRef, handleFocus,\n            handleBlur,\n            handleClear,\n            handleMouseDown,\n            handleAddClick,\n            handleMinusClick,\n            handleAddMousedown,\n            handleMinusMousedown,\n            handleKeyDown,\n            handleUpdateDisplayedValue, \n            // theme\n            mergedTheme: themeRef, inputThemeOverrides: {\n                paddingSmall: '0 8px 0 10px',\n                paddingMedium: '0 8px 0 12px',\n                paddingLarge: '0 8px 0 14px'\n            }, buttonThemeOverrides: computed(() => {\n                const { self: { iconColorDisabled } } = themeRef.value;\n                const [r, g, b, a] = rgba(iconColorDisabled);\n                return {\n                    textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n                    opacityDisabled: `${a}`\n                };\n            }) });\n    },\n    render() {\n        const { mergedClsPrefix, $slots } = this;\n        const renderMinusButton = () => {\n            return (h(NxButton, { text: true, disabled: !this.minusable || this.mergedDisabled || this.readonly, focusable: false, theme: this.mergedTheme.peers.Button, themeOverrides: this.mergedTheme.peerOverrides.Button, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleMinusClick, onMousedown: this.handleMinusMousedown, ref: \"minusButtonInstRef\" }, {\n                icon: () => resolveSlot($slots['minus-icon'], () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                        default: () => h(RemoveIcon, null)\n                    })\n                ])\n            }));\n        };\n        const renderAddButton = () => {\n            return (h(NxButton, { text: true, disabled: !this.addable || this.mergedDisabled || this.readonly, focusable: false, theme: this.mergedTheme.peers.Button, themeOverrides: this.mergedTheme.peerOverrides.Button, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleAddClick, onMousedown: this.handleAddMousedown, ref: \"addButtonInstRef\" }, {\n                icon: () => resolveSlot($slots['add-icon'], () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                        default: () => h(AddIcon, null)\n                    })\n                ])\n            }));\n        };\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-input-number`,\n                this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`\n            ] },\n            h(NInput, { ref: \"inputInstRef\", autofocus: this.autofocus, status: this.mergedStatus, bordered: this.mergedBordered, loading: this.loading, value: this.displayedValue, onUpdateValue: this.handleUpdateDisplayedValue, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, builtinThemeOverrides: this.inputThemeOverrides, size: this.mergedSize, placeholder: this.mergedPlaceholder, disabled: this.mergedDisabled, readonly: this.readonly, textDecoration: this.displayedValueInvalid ? 'line-through' : undefined, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeydown: this.handleKeyDown, onMousedown: this.handleMouseDown, onClear: this.handleClear, clearable: this.clearable, internalLoadingBeforeSuffix: true }, {\n                prefix: () => {\n                    var _a;\n                    return this.showButton && this.buttonPlacement === 'both'\n                        ? [\n                            renderMinusButton(),\n                            resolveWrappedSlot($slots.prefix, (children) => {\n                                if (children) {\n                                    return (h(\"span\", { class: `${mergedClsPrefix}-input-number-prefix` }, children));\n                                }\n                                return null;\n                            })\n                        ]\n                        : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n                },\n                suffix: () => {\n                    var _a;\n                    return this.showButton\n                        ? [\n                            resolveWrappedSlot($slots.suffix, (children) => {\n                                if (children) {\n                                    return (h(\"span\", { class: `${mergedClsPrefix}-input-number-suffix` }, children));\n                                }\n                                return null;\n                            }),\n                            this.buttonPlacement === 'right'\n                                ? renderMinusButton()\n                                : null,\n                            renderAddButton()\n                        ]\n                        : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n                }\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}