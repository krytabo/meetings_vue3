{"ast":null,"code":"import { defineComponent, computed, onMounted, ref, watchEffect } from 'vue';\nimport { round } from 'lodash-es';\nimport { tween } from './utils';\nimport { useLocale } from '../../_mixins';\nexport const numberAnimationProps = {\n  to: {\n    type: Number,\n    default: 0\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  showSeparator: Boolean,\n  locale: String,\n  from: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  duration: {\n    type: Number,\n    default: 2000\n  },\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'NumberAnimation',\n  props: numberAnimationProps,\n  setup(props) {\n    const {\n      localeRef\n    } = useLocale('name');\n    const {\n      duration\n    } = props;\n    const displayedValueRef = ref(props.from);\n    const mergedLocaleRef = computed(() => {\n      const {\n        locale\n      } = props;\n      if (locale !== undefined) return locale;\n      return localeRef.value;\n    });\n    let animating = false;\n    const onUpdate = currentValue => {\n      displayedValueRef.value = currentValue;\n    };\n    const onFinish = () => {\n      var _a;\n      displayedValueRef.value = props.to;\n      animating = false;\n      (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n    };\n    const animate = (from = props.from, to = props.to) => {\n      animating = true;\n      displayedValueRef.value = props.from;\n      if (from !== to) {\n        tween({\n          from,\n          to,\n          duration,\n          onUpdate,\n          onFinish\n        });\n      }\n    };\n    const formattedValueRef = computed(() => {\n      var _a;\n      const formatted = round(displayedValueRef.value, props.precision).toFixed(props.precision);\n      const splitValue = formatted.split('.');\n      const numberFormatter = new Intl.NumberFormat(mergedLocaleRef.value);\n      const decimalSeparator = (_a = numberFormatter.formatToParts(0.5).find(part => part.type === 'decimal')) === null || _a === void 0 ? void 0 : _a.value;\n      const integer = props.showSeparator ? numberFormatter.format(Number(splitValue[0])) : splitValue[0];\n      const decimal = splitValue[1];\n      return {\n        integer,\n        decimal,\n        decimalSeparator\n      };\n    });\n    function play() {\n      if (animating) return;\n      animate();\n    }\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) animate();\n      });\n    });\n    const exposedMethods = {\n      play\n    };\n    return Object.assign({\n      formattedValue: formattedValueRef\n    }, exposedMethods);\n  },\n  render() {\n    const {\n      formattedValue: {\n        integer,\n        decimal,\n        decimalSeparator\n      }\n    } = this;\n    return [integer, decimal ? decimalSeparator : null, decimal];\n  }\n});","map":{"version":3,"names":["defineComponent","computed","onMounted","ref","watchEffect","round","tween","useLocale","numberAnimationProps","to","type","Number","default","precision","showSeparator","Boolean","locale","String","from","active","duration","onFinish","Function","name","props","setup","localeRef","displayedValueRef","mergedLocaleRef","undefined","value","animating","onUpdate","currentValue","_a","call","animate","formattedValueRef","formatted","toFixed","splitValue","split","numberFormatter","Intl","NumberFormat","decimalSeparator","formatToParts","find","part","integer","format","decimal","play","exposedMethods","Object","assign","formattedValue","render"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/number-animation/src/NumberAnimation.js"],"sourcesContent":["import { defineComponent, computed, onMounted, ref, watchEffect } from 'vue';\nimport { round } from 'lodash-es';\nimport { tween } from './utils';\nimport { useLocale } from '../../_mixins';\nexport const numberAnimationProps = {\n    to: {\n        type: Number,\n        default: 0\n    },\n    precision: {\n        type: Number,\n        default: 0\n    },\n    showSeparator: Boolean,\n    locale: String,\n    from: { type: Number, default: 0 },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    duration: {\n        type: Number,\n        default: 2000\n    },\n    onFinish: Function\n};\nexport default defineComponent({\n    name: 'NumberAnimation',\n    props: numberAnimationProps,\n    setup(props) {\n        const { localeRef } = useLocale('name');\n        const { duration } = props;\n        const displayedValueRef = ref(props.from);\n        const mergedLocaleRef = computed(() => {\n            const { locale } = props;\n            if (locale !== undefined)\n                return locale;\n            return localeRef.value;\n        });\n        let animating = false;\n        const onUpdate = (currentValue) => {\n            displayedValueRef.value = currentValue;\n        };\n        const onFinish = () => {\n            var _a;\n            displayedValueRef.value = props.to;\n            animating = false;\n            (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        };\n        const animate = (from = props.from, to = props.to) => {\n            animating = true;\n            displayedValueRef.value = props.from;\n            if (from !== to) {\n                tween({\n                    from,\n                    to,\n                    duration,\n                    onUpdate,\n                    onFinish\n                });\n            }\n        };\n        const formattedValueRef = computed(() => {\n            var _a;\n            const formatted = round(displayedValueRef.value, props.precision).toFixed(props.precision);\n            const splitValue = formatted.split('.');\n            const numberFormatter = new Intl.NumberFormat(mergedLocaleRef.value);\n            const decimalSeparator = (_a = numberFormatter\n                .formatToParts(0.5)\n                .find((part) => part.type === 'decimal')) === null || _a === void 0 ? void 0 : _a.value;\n            const integer = props.showSeparator\n                ? numberFormatter.format(Number(splitValue[0]))\n                : splitValue[0];\n            const decimal = splitValue[1];\n            return {\n                integer,\n                decimal,\n                decimalSeparator\n            };\n        });\n        function play() {\n            if (animating)\n                return;\n            animate();\n        }\n        onMounted(() => {\n            watchEffect(() => {\n                if (props.active)\n                    animate();\n            });\n        });\n        const exposedMethods = { play };\n        return Object.assign({ formattedValue: formattedValueRef }, exposedMethods);\n    },\n    render() {\n        const { formattedValue: { integer, decimal, decimalSeparator } } = this;\n        return [integer, decimal ? decimalSeparator : null, decimal];\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}