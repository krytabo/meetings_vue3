{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, defineComponent, inject, ref, watchEffect } from 'vue';\nimport { NScrollbar } from '../../_internal';\nimport { notificationProviderInjectionKey } from './context';\nexport const NotificationContainer = defineComponent({\n  name: 'NotificationContainer',\n  props: {\n    scrollable: {\n      type: Boolean,\n      required: true\n    },\n    placement: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef,\n      wipTransitionCountRef\n    } = inject(notificationProviderInjectionKey);\n    const selfRef = ref(null);\n    watchEffect(() => {\n      var _a, _b;\n      if (wipTransitionCountRef.value > 0) {\n        (_a = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _a === void 0 ? void 0 : _a.classList.add('transitioning');\n      } else {\n        (_b = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _b === void 0 ? void 0 : _b.classList.remove('transitioning');\n      }\n    });\n    return {\n      selfRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      transitioning: wipTransitionCountRef\n    };\n  },\n  render() {\n    const {\n      $slots,\n      scrollable,\n      mergedClsPrefix,\n      mergedTheme,\n      placement\n    } = this;\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-notification-container`, scrollable && `${mergedClsPrefix}-notification-container--scrollable`, `${mergedClsPrefix}-notification-container--${placement}`]\n    }, scrollable ? h(NScrollbar, {\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      contentStyle: {\n        overflow: 'hidden'\n      }\n    }, $slots) : $slots);\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","ref","watchEffect","NScrollbar","notificationProviderInjectionKey","NotificationContainer","name","props","scrollable","type","Boolean","required","placement","String","setup","mergedThemeRef","mergedClsPrefixRef","wipTransitionCountRef","selfRef","_a","_b","value","classList","add","remove","mergedTheme","mergedClsPrefix","transitioning","render","$slots","class","theme","peers","Scrollbar","themeOverrides","peerOverrides","contentStyle","overflow"],"sources":["/Users/elmo/GitHub/meetings_vue3/node_modules/naive-ui/es/notification/src/NotificationContainer.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, defineComponent, inject, ref, watchEffect } from 'vue';\nimport { NScrollbar } from '../../_internal';\nimport { notificationProviderInjectionKey } from './context';\nexport const NotificationContainer = defineComponent({\n    name: 'NotificationContainer',\n    props: {\n        scrollable: {\n            type: Boolean,\n            required: true\n        },\n        placement: {\n            type: String,\n            required: true\n        }\n    },\n    setup() {\n        const { mergedThemeRef, mergedClsPrefixRef, wipTransitionCountRef } = inject(notificationProviderInjectionKey);\n        const selfRef = ref(null);\n        watchEffect(() => {\n            var _a, _b;\n            if (wipTransitionCountRef.value > 0) {\n                (_a = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _a === void 0 ? void 0 : _a.classList.add('transitioning');\n            }\n            else {\n                (_b = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _b === void 0 ? void 0 : _b.classList.remove('transitioning');\n            }\n        });\n        return {\n            selfRef,\n            mergedTheme: mergedThemeRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            transitioning: wipTransitionCountRef\n        };\n    },\n    render() {\n        const { $slots, scrollable, mergedClsPrefix, mergedTheme, placement } = this;\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-notification-container`,\n                scrollable && `${mergedClsPrefix}-notification-container--scrollable`,\n                `${mergedClsPrefix}-notification-container--${placement}`\n            ] }, scrollable ? (h(NScrollbar, { theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar, contentStyle: { overflow: 'hidden' } }, $slots)) : ($slots)));\n    }\n});\n"],"mappings":"AAAA;AACA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,WAAW,QAAQ,KAAK;AAClE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,gCAAgC,QAAQ,WAAW;AAC5D,OAAO,MAAMC,qBAAqB,GAAGN,eAAe,CAAC;EACjDO,IAAI,EAAE,uBAAuB;EAC7BC,KAAK,EAAE;IACHC,UAAU,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACd,CAAC;IACDC,SAAS,EAAE;MACPH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACd;EACJ,CAAC;EACDG,KAAK,GAAG;IACJ,MAAM;MAAEC,cAAc;MAAEC,kBAAkB;MAAEC;IAAsB,CAAC,GAAGjB,MAAM,CAACI,gCAAgC,CAAC;IAC9G,MAAMc,OAAO,GAAGjB,GAAG,CAAC,IAAI,CAAC;IACzBC,WAAW,CAAC,MAAM;MACd,IAAIiB,EAAE,EAAEC,EAAE;MACV,IAAIH,qBAAqB,CAACI,KAAK,GAAG,CAAC,EAAE;QACjC,CAACF,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,KAAK,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;MACjJ,CAAC,MACI;QACD,CAACH,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,KAAK,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;MACpJ;IACJ,CAAC,CAAC;IACF,OAAO;MACHN,OAAO;MACPO,WAAW,EAAEV,cAAc;MAC3BW,eAAe,EAAEV,kBAAkB;MACnCW,aAAa,EAAEV;IACnB,CAAC;EACL,CAAC;EACDW,MAAM,GAAG;IACL,MAAM;MAAEC,MAAM;MAAErB,UAAU;MAAEkB,eAAe;MAAED,WAAW;MAAEb;IAAU,CAAC,GAAG,IAAI;IAC5E,OAAQd,CAAC,CAAC,KAAK,EAAE;MAAEG,GAAG,EAAE,SAAS;MAAE6B,KAAK,EAAE,CACjC,GAAEJ,eAAgB,yBAAwB,EAC3ClB,UAAU,IAAK,GAAEkB,eAAgB,qCAAoC,EACpE,GAAEA,eAAgB,4BAA2Bd,SAAU,EAAC;IAC3D,CAAC,EAAEJ,UAAU,GAAIV,CAAC,CAACK,UAAU,EAAE;MAAE4B,KAAK,EAAEN,WAAW,CAACO,KAAK,CAACC,SAAS;MAAEC,cAAc,EAAET,WAAW,CAACU,aAAa,CAACF,SAAS;MAAEG,YAAY,EAAE;QAAEC,QAAQ,EAAE;MAAS;IAAE,CAAC,EAAER,MAAM,CAAC,GAAKA,MAAO,CAAC;EAChM;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}